{"body": "<div class=\"section\" id=\"module-dipy.segment\">\n<span id=\"segment\"></span><h1><code class=\"xref py py-mod docutils literal\"><span class=\"pre\">segment</span></code><a class=\"headerlink\" href=\"#module-dipy.segment\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n</tbody>\n</table>\n<div class=\"section\" id=\"module-dipy.segment.benchmarks\">\n<span id=\"module-segment-benchmarks\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">segment.benchmarks</span></code><a class=\"headerlink\" href=\"#module-dipy.segment.benchmarks\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.segment.benchmarks.bench_quickbundles\">\n<span id=\"module-segment-benchmarks-bench-quickbundles\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">segment.benchmarks.bench_quickbundles</span></code><a class=\"headerlink\" href=\"#module-dipy.segment.benchmarks.bench_quickbundles\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Benchmarks for QuickBundles</p>\n<p>Run all benchmarks with:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">dipy.segment</span> <span class=\"k\">as</span> <span class=\"nn\">dipysegment</span>\n<span class=\"n\">dipysegment</span><span class=\"o\">.</span><span class=\"n\">bench</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>If you have doctests enabled by default in nose (with a noserc file or\nenvironment variable), and you have a numpy version &lt;= 1.6.1, this will\nalso run the doctests, let&#8217;s hope they pass.</p>\n<p>Run this benchmark with:</p>\n<blockquote>\n<div>nosetests -s &#8211;match &#8216;(?:^|[b_.//-])[Bb]ench&#8217; bench_quickbundles.py</div></blockquote>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.MDFpy\" title=\"dipy.segment.benchmarks.bench_quickbundles.MDFpy\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">MDFpy</span></code></a></td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.Metric\" title=\"dipy.segment.benchmarks.bench_quickbundles.Metric\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Metric</span></code></a></td>\n<td>Computes a distance between two sequential data.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.QB_New\" title=\"dipy.segment.benchmarks.bench_quickbundles.QB_New\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">QB_New</span></code></a></td>\n<td>alias of <code class=\"xref py py-class docutils literal\"><span class=\"pre\">QuickBundles</span></code></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.QB_Old\" title=\"dipy.segment.benchmarks.bench_quickbundles.QB_Old\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">QB_Old</span></code></a></td>\n<td>alias of <code class=\"xref py py-class docutils literal\"><span class=\"pre\">QuickBundles</span></code></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.assert_array_equal\" title=\"dipy.segment.benchmarks.bench_quickbundles.assert_array_equal\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">assert_array_equal</span></code></a>(x,&nbsp;y[,&nbsp;err_msg,&nbsp;verbose])</td>\n<td>Raises an AssertionError if two array_like objects are not equal.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.assert_arrays_equal\" title=\"dipy.segment.benchmarks.bench_quickbundles.assert_arrays_equal\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">assert_arrays_equal</span></code></a>(arrays1,&nbsp;arrays2)</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.assert_equal\" title=\"dipy.segment.benchmarks.bench_quickbundles.assert_equal\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">assert_equal</span></code></a></td>\n<td>Fail if the two objects are unequal as determined by the &#8216;==&#8217; operator.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.bench_quickbundles\" title=\"dipy.segment.benchmarks.bench_quickbundles.bench_quickbundles\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bench_quickbundles</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.get_data\" title=\"dipy.segment.benchmarks.bench_quickbundles.get_data\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">get_data</span></code></a>([name])</td>\n<td>provides filenames of some test datasets or other useful parametrisations</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.measure\" title=\"dipy.segment.benchmarks.bench_quickbundles.measure\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">measure</span></code></a>(code_str[,&nbsp;times,&nbsp;label])</td>\n<td>Return elapsed time for executing code in the namespace of the caller.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.segment.clustering\">\n<span id=\"module-segment-clustering\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">segment.clustering</span></code><a class=\"headerlink\" href=\"#module-dipy.segment.clustering\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.ABCMeta\" title=\"dipy.segment.clustering.ABCMeta\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ABCMeta</span></code></a></td>\n<td>Metaclass for defining Abstract Base Classes (ABCs).</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.AveragePointwiseEuclideanMetric\" title=\"dipy.segment.clustering.AveragePointwiseEuclideanMetric\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">AveragePointwiseEuclideanMetric</span></code></a></td>\n<td>Computes the average of pointwise Euclidean distances between two sequential data.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.Cluster\" title=\"dipy.segment.clustering.Cluster\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Cluster</span></code></a>([id,&nbsp;indices,&nbsp;refdata])</td>\n<td>Provides functionalities for interacting with a cluster.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterCentroid\" title=\"dipy.segment.clustering.ClusterCentroid\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ClusterCentroid</span></code></a>(centroid[,&nbsp;id,&nbsp;indices,&nbsp;refdata])</td>\n<td>Provides functionalities for interacting with a cluster.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap\" title=\"dipy.segment.clustering.ClusterMap\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ClusterMap</span></code></a>([refdata])</td>\n<td>Provides functionalities for interacting with clustering outputs.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMapCentroid\" title=\"dipy.segment.clustering.ClusterMapCentroid\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ClusterMapCentroid</span></code></a>([refdata])</td>\n<td>Provides functionalities for interacting with clustering outputs that have centroids.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.Clustering\" title=\"dipy.segment.clustering.Clustering\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Clustering</span></code></a></td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.Identity\" title=\"dipy.segment.clustering.Identity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Identity</span></code></a></td>\n<td>Provides identity indexing functionality.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.Metric\" title=\"dipy.segment.clustering.Metric\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Metric</span></code></a></td>\n<td>Computes a distance between two sequential data.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.QuickBundles\" title=\"dipy.segment.clustering.QuickBundles\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">QuickBundles</span></code></a>(threshold[,&nbsp;metric,&nbsp;...])</td>\n<td>Clusters streamlines using QuickBundles <a class=\"reference internal\" href=\"#id23\" id=\"id1\">[Garyfallidis12]</a>.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.ResampleFeature\" title=\"dipy.segment.clustering.ResampleFeature\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ResampleFeature</span></code></a></td>\n<td>Extracts features from a sequential datum.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.abstractmethod\" title=\"dipy.segment.clustering.abstractmethod\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">abstractmethod</span></code></a>(funcobj)</td>\n<td>A decorator indicating abstract methods.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.segment.mask\">\n<span id=\"module-segment-mask\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">segment.mask</span></code><a class=\"headerlink\" href=\"#module-dipy.segment.mask\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.mask.applymask\" title=\"dipy.segment.mask.applymask\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">applymask</span></code></a>(vol,&nbsp;mask)</td>\n<td>Mask vol with mask.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.mask.binary_dilation\" title=\"dipy.segment.mask.binary_dilation\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">binary_dilation</span></code></a>(input[,&nbsp;structure,&nbsp;...])</td>\n<td>Multi-dimensional binary dilation with the given structuring element.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.mask.bounding_box\" title=\"dipy.segment.mask.bounding_box\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bounding_box</span></code></a>(vol)</td>\n<td>Compute the bounding box of nonzero intensity voxels in the volume.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.mask.clean_cc_mask\" title=\"dipy.segment.mask.clean_cc_mask\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">clean_cc_mask</span></code></a>(mask)</td>\n<td>Cleans a segmentation of the corpus callosum so no random pixels are included.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.mask.color_fa\" title=\"dipy.segment.mask.color_fa\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">color_fa</span></code></a>(fa,&nbsp;evecs)</td>\n<td>Color fractional anisotropy of diffusion tensor</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.mask.crop\" title=\"dipy.segment.mask.crop\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">crop</span></code></a>(vol,&nbsp;mins,&nbsp;maxs)</td>\n<td>Crops the input volume.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.mask.fractional_anisotropy\" title=\"dipy.segment.mask.fractional_anisotropy\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fractional_anisotropy</span></code></a>(evals[,&nbsp;axis])</td>\n<td>Fractional anisotropy (FA) of a diffusion tensor.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.mask.generate_binary_structure\" title=\"dipy.segment.mask.generate_binary_structure\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">generate_binary_structure</span></code></a>(rank,&nbsp;connectivity)</td>\n<td>Generate a binary structure for binary morphological operations.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.mask.median_filter\" title=\"dipy.segment.mask.median_filter\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">median_filter</span></code></a>(input[,&nbsp;size,&nbsp;footprint,&nbsp;...])</td>\n<td>Calculates a multidimensional median filter.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.mask.median_otsu\" title=\"dipy.segment.mask.median_otsu\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">median_otsu</span></code></a>(input_volume[,&nbsp;median_radius,&nbsp;...])</td>\n<td>Simple brain extraction tool method for images from DWI data.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.mask.multi_median\" title=\"dipy.segment.mask.multi_median\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">multi_median</span></code></a>(input,&nbsp;median_radius,&nbsp;numpass)</td>\n<td>Applies median filter multiple times on input data.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.mask.otsu\" title=\"dipy.segment.mask.otsu\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">otsu</span></code></a>(image[,&nbsp;nbins])</td>\n<td>Return threshold value based on Otsu&#8217;s method.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.mask.segment_from_cfa\" title=\"dipy.segment.mask.segment_from_cfa\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">segment_from_cfa</span></code></a>(tensor_fit,&nbsp;roi,&nbsp;threshold)</td>\n<td>Segment the cfa inside roi using the values from threshold as bounds.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.mask.warn\" title=\"dipy.segment.mask.warn\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">warn</span></code></a></td>\n<td>Issue a warning, or maybe ignore it or raise an exception.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.segment.metric\">\n<span id=\"module-segment-metric\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">segment.metric</span></code><a class=\"headerlink\" href=\"#module-dipy.segment.metric\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.ArcLengthFeature\" title=\"dipy.segment.metric.ArcLengthFeature\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ArcLengthFeature</span></code></a></td>\n<td>Extracts features from a sequential datum.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.AveragePointwiseEuclideanMetric\" title=\"dipy.segment.metric.AveragePointwiseEuclideanMetric\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">AveragePointwiseEuclideanMetric</span></code></a></td>\n<td>Computes the average of pointwise Euclidean distances between two sequential data.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.CenterOfMassFeature\" title=\"dipy.segment.metric.CenterOfMassFeature\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">CenterOfMassFeature</span></code></a></td>\n<td>Extracts features from a sequential datum.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.CosineMetric\" title=\"dipy.segment.metric.CosineMetric\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">CosineMetric</span></code></a></td>\n<td>Computes the cosine distance between two vectors.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.EuclideanMetric\" title=\"dipy.segment.metric.EuclideanMetric\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">EuclideanMetric</span></code></a></td>\n<td>alias of <a class=\"reference internal\" href=\"#dipy.segment.metric.SumPointwiseEuclideanMetric\" title=\"dipy.segment.metric.SumPointwiseEuclideanMetric\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">SumPointwiseEuclideanMetric</span></code></a></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.Feature\" title=\"dipy.segment.metric.Feature\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Feature</span></code></a></td>\n<td>Extracts features from a sequential datum.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.IdentityFeature\" title=\"dipy.segment.metric.IdentityFeature\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">IdentityFeature</span></code></a></td>\n<td>Extracts features from a sequential datum.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.Metric\" title=\"dipy.segment.metric.Metric\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Metric</span></code></a></td>\n<td>Computes a distance between two sequential data.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.MidpointFeature\" title=\"dipy.segment.metric.MidpointFeature\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">MidpointFeature</span></code></a></td>\n<td>Extracts features from a sequential datum.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.MinimumAverageDirectFlipMetric\" title=\"dipy.segment.metric.MinimumAverageDirectFlipMetric\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">MinimumAverageDirectFlipMetric</span></code></a></td>\n<td>Computes the MDF distance (minimum average direct-flip) between two sequential data.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.ResampleFeature\" title=\"dipy.segment.metric.ResampleFeature\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ResampleFeature</span></code></a></td>\n<td>Extracts features from a sequential datum.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.SumPointwiseEuclideanMetric\" title=\"dipy.segment.metric.SumPointwiseEuclideanMetric\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">SumPointwiseEuclideanMetric</span></code></a></td>\n<td>Computes the sum of pointwise Euclidean distances between two sequential data.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.VectorOfEndpointsFeature\" title=\"dipy.segment.metric.VectorOfEndpointsFeature\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">VectorOfEndpointsFeature</span></code></a></td>\n<td>Extracts features from a sequential datum.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.dist\" title=\"dipy.segment.metric.dist\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dist</span></code></a></td>\n<td>Computes a distance between <cite>datum1</cite> and <cite>datum2</cite>.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.distance_matrix\" title=\"dipy.segment.metric.distance_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">distance_matrix</span></code></a></td>\n<td>Computes the distance matrix between two lists of sequential data.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.mdf\" title=\"dipy.segment.metric.mdf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mdf</span></code></a>(s1,&nbsp;s2)</td>\n<td>Computes the MDF (Minimum average Direct-Flip) distance <a class=\"reference internal\" href=\"#id23\" id=\"id2\">[Garyfallidis12]</a> between two streamlines.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.segment.quickbundles\">\n<span id=\"module-segment-quickbundles\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">segment.quickbundles</span></code><a class=\"headerlink\" href=\"#module-dipy.segment.quickbundles\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.QuickBundles\" title=\"dipy.segment.quickbundles.QuickBundles\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">QuickBundles</span></code></a>(tracks[,&nbsp;dist_thr,&nbsp;pts])</td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.bundles_distances_mdf\" title=\"dipy.segment.quickbundles.bundles_distances_mdf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bundles_distances_mdf</span></code></a></td>\n<td>Calculate distances between list of tracks A and list of tracks B</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.downsample\" title=\"dipy.segment.quickbundles.downsample\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">downsample</span></code></a>(xyz[,&nbsp;n_pols])</td>\n<td>downsample for a specific number of points along the curve/track</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.local_skeleton_clustering\" title=\"dipy.segment.quickbundles.local_skeleton_clustering\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">local_skeleton_clustering</span></code></a></td>\n<td>Efficient tractography clustering</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.warn\" title=\"dipy.segment.quickbundles.warn\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">warn</span></code></a></td>\n<td>Issue a warning, or maybe ignore it or raise an exception.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.segment.threshold\">\n<span id=\"module-segment-threshold\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">segment.threshold</span></code><a class=\"headerlink\" href=\"#module-dipy.segment.threshold\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.threshold.otsu\" title=\"dipy.segment.threshold.otsu\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">otsu</span></code></a>(image[,&nbsp;nbins])</td>\n<td>Return threshold value based on Otsu&#8217;s method.</td>\n</tr>\n</tbody>\n</table>\n<div class=\"section\" id=\"mdfpy\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.MDFpy\" title=\"dipy.segment.benchmarks.bench_quickbundles.MDFpy\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">MDFpy</span></code></a><a class=\"headerlink\" href=\"#mdfpy\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.benchmarks.bench_quickbundles.MDFpy\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.benchmarks.bench_quickbundles.</code><code class=\"descname\">MDFpy</code><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.MDFpy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.segment.metricspeed.Metric</span></code></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.MDFpy.are_compatible\" title=\"dipy.segment.benchmarks.bench_quickbundles.MDFpy.are_compatible\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">are_compatible</span></code></a>(shape1,&nbsp;shape2)</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.MDFpy.dist\" title=\"dipy.segment.benchmarks.bench_quickbundles.MDFpy.dist\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dist</span></code></a>(features1,&nbsp;features2)</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.benchmarks.bench_quickbundles.MDFpy.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.MDFpy.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.benchmarks.bench_quickbundles.MDFpy.are_compatible\">\n<code class=\"descname\">are_compatible</code><span class=\"sig-paren\">(</span><em>shape1</em>, <em>shape2</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.MDFpy.are_compatible\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.benchmarks.bench_quickbundles.MDFpy.dist\">\n<code class=\"descname\">dist</code><span class=\"sig-paren\">(</span><em>features1</em>, <em>features2</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.MDFpy.dist\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"metric\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.Metric\" title=\"dipy.segment.benchmarks.bench_quickbundles.Metric\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Metric</span></code></a><a class=\"headerlink\" href=\"#metric\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.benchmarks.bench_quickbundles.Metric\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.benchmarks.bench_quickbundles.</code><code class=\"descname\">Metric</code><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.Metric\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Computes a distance between two sequential data.</p>\n<p>A sequence of N-dimensional points is represented as a 2D array with\nshape (nb_points, nb_dimensions). A <cite>feature</cite> object can be specified\nin order to calculate the distance between extracted features, rather\nthan directly between the sequential data.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>feature</strong> : <cite>Feature</cite> object, optional</p>\n<blockquote class=\"last\">\n<div><p>It is used to extract features before computing the distance.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>When subclassing <cite>Metric</cite>, one only needs to override the <cite>dist</cite> and\n<cite>are_compatible</cite> methods.</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.Metric.are_compatible\" title=\"dipy.segment.benchmarks.bench_quickbundles.Metric.are_compatible\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">are_compatible</span></code></a></td>\n<td>Checks if features can be used by <cite>metric.dist</cite> based on their shape.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.Metric.dist\" title=\"dipy.segment.benchmarks.bench_quickbundles.Metric.dist\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dist</span></code></a></td>\n<td>Computes a distance between two data points based on their features.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.benchmarks.bench_quickbundles.Metric.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.Metric.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.benchmarks.bench_quickbundles.Metric.are_compatible\">\n<code class=\"descname\">are_compatible</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.Metric.are_compatible\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Checks if features can be used by <cite>metric.dist</cite> based on their shape.</p>\n<p>Basically this method exists so we don&#8217;t have to do this check\ninside the <cite>metric.dist</cite> function (speedup).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>shape1</strong> : int, 1-tuple or 2-tuple</p>\n<blockquote>\n<div><p>shape of the first data point&#8217;s features</p>\n</div></blockquote>\n<p><strong>shape2</strong> : int, 1-tuple or 2-tuple</p>\n<blockquote>\n<div><p>shape of the second data point&#8217;s features</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>are_compatible</strong> : bool</p>\n<blockquote class=\"last\">\n<div><p>whether or not shapes are compatible</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.benchmarks.bench_quickbundles.Metric.dist\">\n<code class=\"descname\">dist</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.Metric.dist\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes a distance between two data points based on their features.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>features1</strong> : 2D array</p>\n<blockquote>\n<div><p>Features of the first data point.</p>\n</div></blockquote>\n<p><strong>features2</strong> : 2D array</p>\n<blockquote>\n<div><p>Features of the second data point.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>double</strong> :</p>\n<blockquote class=\"last\">\n<div><p>Distance between two data points.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.segment.benchmarks.bench_quickbundles.Metric.feature\">\n<code class=\"descname\">feature</code><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.Metric.feature\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><cite>Feature</cite> object used to extract features from sequential data</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.segment.benchmarks.bench_quickbundles.Metric.is_order_invariant\">\n<code class=\"descname\">is_order_invariant</code><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.Metric.is_order_invariant\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Is this metric invariant to the sequence&#8217;s ordering</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"qb-new\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.QB_New\" title=\"dipy.segment.benchmarks.bench_quickbundles.QB_New\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">QB_New</span></code></a><a class=\"headerlink\" href=\"#qb-new\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"attribute\">\n<dt id=\"dipy.segment.benchmarks.bench_quickbundles.QB_New\">\n<code class=\"descclassname\">dipy.segment.benchmarks.bench_quickbundles.</code><code class=\"descname\">QB_New</code><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.QB_New\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>alias of <code class=\"xref py py-class docutils literal\"><span class=\"pre\">QuickBundles</span></code></p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"qb-old\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.QB_Old\" title=\"dipy.segment.benchmarks.bench_quickbundles.QB_Old\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">QB_Old</span></code></a><a class=\"headerlink\" href=\"#qb-old\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"attribute\">\n<dt id=\"dipy.segment.benchmarks.bench_quickbundles.QB_Old\">\n<code class=\"descclassname\">dipy.segment.benchmarks.bench_quickbundles.</code><code class=\"descname\">QB_Old</code><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.QB_Old\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>alias of <code class=\"xref py py-class docutils literal\"><span class=\"pre\">QuickBundles</span></code></p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"assert-array-equal\">\n<h3>assert_array_equal<a class=\"headerlink\" href=\"#assert-array-equal\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.benchmarks.bench_quickbundles.assert_array_equal\">\n<code class=\"descclassname\">dipy.segment.benchmarks.bench_quickbundles.</code><code class=\"descname\">assert_array_equal</code><span class=\"sig-paren\">(</span><em>x</em>, <em>y</em>, <em>err_msg=''</em>, <em>verbose=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.assert_array_equal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Raises an AssertionError if two array_like objects are not equal.</p>\n<p>Given two array_like objects, check that the shape is equal and all\nelements of these objects are equal. An exception is raised at\nshape mismatch or conflicting values. In contrast to the standard usage\nin numpy, NaNs are compared like numbers, no assertion is raised if\nboth objects have NaNs in the same positions.</p>\n<p>The usual caution for verifying equality with floating point numbers is\nadvised.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x</strong> : array_like</p>\n<blockquote>\n<div><p>The actual object to check.</p>\n</div></blockquote>\n<p><strong>y</strong> : array_like</p>\n<blockquote>\n<div><p>The desired, expected object.</p>\n</div></blockquote>\n<p><strong>err_msg</strong> : str, optional</p>\n<blockquote>\n<div><p>The error message to be printed in case of failure.</p>\n</div></blockquote>\n<p><strong>verbose</strong> : bool, optional</p>\n<blockquote>\n<div><p>If True, the conflicting values are appended to the error message.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Raises:</th><td class=\"field-body\"><p class=\"first\"><strong>AssertionError</strong> :</p>\n<blockquote class=\"last\">\n<div><p>If actual and desired objects are not equal.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"docutils\">\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">assert_allclose</span></code></dt>\n<dd>Compare two array_like objects for equality with desired relative and/or absolute precision.</dd>\n</dl>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">assert_array_almost_equal_nulp</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">assert_array_max_ulp</span></code>, <a class=\"reference internal\" href=\"#dipy.segment.benchmarks.bench_quickbundles.assert_equal\" title=\"dipy.segment.benchmarks.bench_quickbundles.assert_equal\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">assert_equal</span></code></a></p>\n</div>\n<p class=\"rubric\">Examples</p>\n<p>The first assert does not raise an exception:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">testing</span><span class=\"o\">.</span><span class=\"n\">assert_array_equal</span><span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span><span class=\"mf\">2.33333</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nan</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                              <span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"mf\">2.33333</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nan</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<p>Assert fails with numerical inprecision with floats:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">testing</span><span class=\"o\">.</span><span class=\"n\">assert_array_equal</span><span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nan</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                              <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nan</span><span class=\"p\">])</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">&lt;type &#39;exceptions.ValueError&#39;&gt;:</span>\n<span class=\"go\">AssertionError:</span>\n<span class=\"go\">Arrays are not equal</span>\n\n<span class=\"go\">(mismatch 50.0%)</span>\n<span class=\"go\"> x: array([ 1.        ,  3.14159265,         NaN])</span>\n<span class=\"go\"> y: array([ 1.        ,  3.14159265,         NaN])</span>\n</pre></div>\n</div>\n<p>Use <cite>assert_allclose</cite> or one of the nulp (number of floating point values)\nfunctions for these cases instead:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">testing</span><span class=\"o\">.</span><span class=\"n\">assert_allclose</span><span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nan</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                           <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">nan</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                           <span class=\"n\">rtol</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"n\">e</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">atol</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"assert-arrays-equal\">\n<h3>assert_arrays_equal<a class=\"headerlink\" href=\"#assert-arrays-equal\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.benchmarks.bench_quickbundles.assert_arrays_equal\">\n<code class=\"descclassname\">dipy.segment.benchmarks.bench_quickbundles.</code><code class=\"descname\">assert_arrays_equal</code><span class=\"sig-paren\">(</span><em>arrays1</em>, <em>arrays2</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.assert_arrays_equal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"assert-equal\">\n<h3>assert_equal<a class=\"headerlink\" href=\"#assert-equal\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.benchmarks.bench_quickbundles.assert_equal\">\n<code class=\"descclassname\">dipy.segment.benchmarks.bench_quickbundles.</code><code class=\"descname\">assert_equal</code><span class=\"sig-paren\">(</span><em>self</em>, <em>first</em>, <em>second</em>, <em>msg=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.assert_equal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fail if the two objects are unequal as determined by the &#8216;==&#8217;\noperator.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"bench-quickbundles\">\n<h3>bench_quickbundles<a class=\"headerlink\" href=\"#bench-quickbundles\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.benchmarks.bench_quickbundles.bench_quickbundles\">\n<code class=\"descclassname\">dipy.segment.benchmarks.bench_quickbundles.</code><code class=\"descname\">bench_quickbundles</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.bench_quickbundles\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"get-data\">\n<h3>get_data<a class=\"headerlink\" href=\"#get-data\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.benchmarks.bench_quickbundles.get_data\">\n<code class=\"descclassname\">dipy.segment.benchmarks.bench_quickbundles.</code><code class=\"descname\">get_data</code><span class=\"sig-paren\">(</span><em>name='small_64D'</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.get_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>provides filenames of some test datasets or other useful parametrisations</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>name</strong> : str</p>\n<blockquote>\n<div><p>the filename/s of which dataset to return, one of:\n&#8216;small_64D&#8217; small region of interest nifti,bvecs,bvals 64 directions\n&#8216;small_101D&#8217; small region of interest nifti,bvecs,bvals 101 directions\n&#8216;aniso_vox&#8217; volume with anisotropic voxel size as Nifti\n&#8216;fornix&#8217; 300 tracks in Trackvis format (from Pittsburgh</p>\n<blockquote>\n<div><p>Brain Competition)</p>\n</div></blockquote>\n<dl class=\"docutils\">\n<dt>&#8216;gqi_vectors&#8217; the scanner wave vectors needed for a GQI acquisitions</dt>\n<dd><p class=\"first last\">of 101 directions tested on Siemens 3T Trio</p>\n</dd>\n</dl>\n<p>&#8216;small_25&#8217; small ROI (10x8x2) DTI data (b value 2000, 25 directions)\n&#8216;test_piesno&#8217; slice of N=8, K=14 diffusion data\n&#8216;reg_c&#8217; small 2D image used for validating registration\n&#8216;reg_o&#8217; small 2D image used for validation registration\n&#8216;cb_2&#8217; two vectorized cingulum bundles</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>fnames</strong> : tuple</p>\n<blockquote class=\"last\">\n<div><p>filenames for dataset</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">get_data</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fimg</span><span class=\"p\">,</span><span class=\"n\">fbvals</span><span class=\"p\">,</span><span class=\"n\">fbvecs</span><span class=\"o\">=</span><span class=\"n\">get_data</span><span class=\"p\">(</span><span class=\"s1\">&#39;small_101D&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvals</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span><span class=\"n\">fbvals</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvecs</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span><span class=\"n\">fbvecs</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">nibabel</span> <span class=\"k\">as</span> <span class=\"nn\">nib</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">img</span><span class=\"o\">=</span><span class=\"n\">nib</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">fimg</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">102</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvals</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">102</span><span class=\"p\">,)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">102</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"measure\">\n<h3>measure<a class=\"headerlink\" href=\"#measure\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.benchmarks.bench_quickbundles.measure\">\n<code class=\"descclassname\">dipy.segment.benchmarks.bench_quickbundles.</code><code class=\"descname\">measure</code><span class=\"sig-paren\">(</span><em>code_str</em>, <em>times=1</em>, <em>label=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.benchmarks.bench_quickbundles.measure\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return elapsed time for executing code in the namespace of the caller.</p>\n<p>The supplied code string is compiled with the Python builtin <code class=\"docutils literal\"><span class=\"pre\">compile</span></code>.\nThe precision of the timing is 10 milli-seconds. If the code will execute\nfast on this timescale, it can be executed many times to get reasonable\ntiming accuracy.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>code_str</strong> : str</p>\n<blockquote>\n<div><p>The code to be timed.</p>\n</div></blockquote>\n<p><strong>times</strong> : int, optional</p>\n<blockquote>\n<div><p>The number of times the code is executed. Default is 1. The code is\nonly compiled once.</p>\n</div></blockquote>\n<p><strong>label</strong> : str, optional</p>\n<blockquote>\n<div><p>A label to identify <cite>code_str</cite> with. This is passed into <code class=\"docutils literal\"><span class=\"pre\">compile</span></code>\nas the second argument (for run-time error messages).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>elapsed</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>Total elapsed time in seconds for executing <cite>code_str</cite> <cite>times</cite> times.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">etime</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">testing</span><span class=\"o\">.</span><span class=\"n\">measure</span><span class=\"p\">(</span><span class=\"s1\">&#39;for i in range(1000): np.sqrt(i**2)&#39;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                           <span class=\"n\">times</span><span class=\"o\">=</span><span class=\"n\">times</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Time for a single execution : &quot;</span><span class=\"p\">,</span> <span class=\"n\">etime</span> <span class=\"o\">/</span> <span class=\"n\">times</span><span class=\"p\">,</span> <span class=\"s2\">&quot;s&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">Time for a single execution :  0.005 s</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"abcmeta\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.ABCMeta\" title=\"dipy.segment.clustering.ABCMeta\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ABCMeta</span></code></a><a class=\"headerlink\" href=\"#abcmeta\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.clustering.ABCMeta\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.clustering.</code><code class=\"descname\">ABCMeta</code><a class=\"headerlink\" href=\"#dipy.segment.clustering.ABCMeta\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#type\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">type</span></code></a></p>\n<p>Metaclass for defining Abstract Base Classes (ABCs).</p>\n<p>Use this metaclass to create an ABC.  An ABC can be subclassed\ndirectly, and then acts as a mix-in class.  You can also register\nunrelated concrete classes (even built-in classes) and unrelated\nABCs as &#8216;virtual subclasses&#8217; &#8211; these and their descendants will\nbe considered subclasses of the registering ABC by the built-in\nissubclass() function, but the registering ABC won&#8217;t show up in\ntheir MRO (Method Resolution Order) nor will method\nimplementations defined by the registering ABC be callable (not\neven via super()).</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">__call__</span></code>(...)&nbsp;&lt;==&gt;&nbsp;x(...)</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mro</span></code>(()&nbsp;-&gt;&nbsp;list)</td>\n<td>return a type&#8217;s method resolution order</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.ABCMeta.register\" title=\"dipy.segment.clustering.ABCMeta.register\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">register</span></code></a>(subclass)</td>\n<td>Register a virtual subclass of an ABC.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.ABCMeta.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ABCMeta.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.ABCMeta.register\">\n<code class=\"descname\">register</code><span class=\"sig-paren\">(</span><em>subclass</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ABCMeta.register\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Register a virtual subclass of an ABC.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"averagepointwiseeuclideanmetric\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.AveragePointwiseEuclideanMetric\" title=\"dipy.segment.clustering.AveragePointwiseEuclideanMetric\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">AveragePointwiseEuclideanMetric</span></code></a><a class=\"headerlink\" href=\"#averagepointwiseeuclideanmetric\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.clustering.AveragePointwiseEuclideanMetric\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.clustering.</code><code class=\"descname\">AveragePointwiseEuclideanMetric</code><a class=\"headerlink\" href=\"#dipy.segment.clustering.AveragePointwiseEuclideanMetric\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.segment.metricspeed.SumPointwiseEuclideanMetric</span></code></p>\n<p>Computes the average of pointwise Euclidean distances between two\nsequential data.</p>\n<p>A sequence of N-dimensional points is represented as a 2D array with\nshape (nb_points, nb_dimensions). A <cite>feature</cite> object can be specified\nin order to calculate the distance between the features, rather than\ndirectly between the sequential data.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>feature</strong> : <cite>Feature</cite> object, optional</p>\n<blockquote class=\"last\">\n<div><p>It is used to extract features before computing the distance.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The distance between two 2D sequential data:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">s1</span>       <span class=\"n\">s2</span>\n\n<span class=\"mi\">0</span><span class=\"o\">*</span>   <span class=\"n\">a</span>    <span class=\"o\">*</span><span class=\"mi\">0</span>\n  \\       <span class=\"o\">|</span>\n   \\      <span class=\"o\">|</span>\n   <span class=\"mi\">1</span><span class=\"o\">*</span>     <span class=\"o\">|</span>\n    <span class=\"o\">|</span>  <span class=\"n\">b</span>  <span class=\"o\">*</span><span class=\"mi\">1</span>\n    <span class=\"o\">|</span>      \\\n    <span class=\"mi\">2</span><span class=\"o\">*</span>      \\\n        <span class=\"n\">c</span>    <span class=\"o\">*</span><span class=\"mi\">2</span>\n</pre></div>\n</div>\n<p>is equal to <span class=\"math\">\\((a+b+c)/3\\)</span> where <span class=\"math\">\\(a\\)</span> is the Euclidean distance between s1[0] and\ns2[0], <span class=\"math\">\\(b\\)</span> between s1[1] and s2[1] and <span class=\"math\">\\(c\\)</span> between s1[2] and s2[2].</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">are_compatible</span></code></td>\n<td>Checks if features can be used by <cite>metric.dist</cite> based on their shape.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dist</span></code></td>\n<td>Computes a distance between two data points based on their features.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.AveragePointwiseEuclideanMetric.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.AveragePointwiseEuclideanMetric.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"cluster\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.Cluster\" title=\"dipy.segment.clustering.Cluster\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Cluster</span></code></a><a class=\"headerlink\" href=\"#cluster\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.clustering.Cluster\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.clustering.</code><code class=\"descname\">Cluster</code><span class=\"sig-paren\">(</span><em>id=0</em>, <em>indices=None</em>, <em>refdata=&lt;dipy.segment.clustering.Identity instance&gt;</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.Cluster\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Provides functionalities for interacting with a cluster.</p>\n<p>Useful container to retrieve index of elements grouped together. If\na reference to the data is provided to <cite>cluster_map</cite>, elements will\nbe returned instead of their index when possible.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>cluster_map</strong> : <cite>ClusterMap</cite> object</p>\n<blockquote>\n<div><p>Reference to the set of clusters this cluster is being part of.</p>\n</div></blockquote>\n<p><strong>id</strong> : int</p>\n<blockquote>\n<div><p>Id of this cluster in its associated <cite>cluster_map</cite> object.</p>\n</div></blockquote>\n<p><strong>refdata</strong> : list (optional)</p>\n<blockquote class=\"last\">\n<div><p>Actual elements that clustered indices refer to.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>A cluster does not contain actual data but instead knows how to\nretrieve them using its <cite>ClusterMap</cite> object.</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.Cluster.assign\" title=\"dipy.segment.clustering.Cluster.assign\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">assign</span></code></a>(*indices)</td>\n<td>Assigns indices to this cluster.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.Cluster.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>id=0</em>, <em>indices=None</em>, <em>refdata=&lt;dipy.segment.clustering.Identity instance&gt;</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.Cluster.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.Cluster.assign\">\n<code class=\"descname\">assign</code><span class=\"sig-paren\">(</span><em>*indices</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.Cluster.assign\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Assigns indices to this cluster.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>*indices</strong> : list of indices</p>\n<blockquote class=\"last\">\n<div><p>Indices to add to this cluster.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"clustercentroid\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterCentroid\" title=\"dipy.segment.clustering.ClusterCentroid\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ClusterCentroid</span></code></a><a class=\"headerlink\" href=\"#clustercentroid\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.clustering.ClusterCentroid\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.clustering.</code><code class=\"descname\">ClusterCentroid</code><span class=\"sig-paren\">(</span><em>centroid</em>, <em>id=0</em>, <em>indices=None</em>, <em>refdata=&lt;dipy.segment.clustering.Identity instance&gt;</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterCentroid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.segment.clustering.Cluster\" title=\"dipy.segment.clustering.Cluster\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.segment.clustering.Cluster</span></code></a></p>\n<p>Provides functionalities for interacting with a cluster.</p>\n<p>Useful container to retrieve the indices of elements grouped together and\nthe cluster&#8217;s centroid. If a reference to the data is provided to\n<cite>cluster_map</cite>, elements will be returned instead of their index when\npossible.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>cluster_map</strong> : <cite>ClusterMapCentroid</cite> object</p>\n<blockquote>\n<div><p>Reference to the set of clusters this cluster is being part of.</p>\n</div></blockquote>\n<p><strong>id</strong> : int</p>\n<blockquote>\n<div><p>Id of this cluster in its associated <cite>cluster_map</cite> object.</p>\n</div></blockquote>\n<p><strong>refdata</strong> : list (optional)</p>\n<blockquote class=\"last\">\n<div><p>Actual elements that clustered indices refer to.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>A cluster does not contain actual data but instead knows how to\nretrieve them using its <cite>ClusterMapCentroid</cite> object.</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterCentroid.assign\" title=\"dipy.segment.clustering.ClusterCentroid.assign\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">assign</span></code></a>(id_datum,&nbsp;features)</td>\n<td>Assigns a data point to this cluster.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterCentroid.update\" title=\"dipy.segment.clustering.ClusterCentroid.update\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">update</span></code></a>()</td>\n<td>Update centroid of this cluster.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.ClusterCentroid.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>centroid</em>, <em>id=0</em>, <em>indices=None</em>, <em>refdata=&lt;dipy.segment.clustering.Identity instance&gt;</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterCentroid.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.ClusterCentroid.assign\">\n<code class=\"descname\">assign</code><span class=\"sig-paren\">(</span><em>id_datum</em>, <em>features</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterCentroid.assign\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Assigns a data point to this cluster.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>id_datum</strong> : int</p>\n<blockquote>\n<div><p>Index of the data point to add to this cluster.</p>\n</div></blockquote>\n<p><strong>features</strong> : 2D array</p>\n<blockquote class=\"last\">\n<div><p>Data point&#8217;s features to modify this cluster&#8217;s centroid.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.ClusterCentroid.update\">\n<code class=\"descname\">update</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterCentroid.update\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Update centroid of this cluster.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>converged</strong> : bool</p>\n<blockquote class=\"last\">\n<div><p>Tells if the centroid has moved.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"clustermap\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap\" title=\"dipy.segment.clustering.ClusterMap\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ClusterMap</span></code></a><a class=\"headerlink\" href=\"#clustermap\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.clustering.ClusterMap\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.clustering.</code><code class=\"descname\">ClusterMap</code><span class=\"sig-paren\">(</span><em>refdata=&lt;dipy.segment.clustering.Identity instance&gt;</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Provides functionalities for interacting with clustering outputs.</p>\n<p>Useful container to create, remove, retrieve and filter clusters.\nIf <cite>refdata</cite> is given, elements will be returned instead of their\nindex when using <cite>Cluster</cite> objects.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>refdata</strong> : list</p>\n<blockquote class=\"last\">\n<div><p>Actual elements that clustered indices refer to.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap.add_cluster\" title=\"dipy.segment.clustering.ClusterMap.add_cluster\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">add_cluster</span></code></a>(*clusters)</td>\n<td>Adds one or multiple clusters to this cluster map.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap.clear\" title=\"dipy.segment.clustering.ClusterMap.clear\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">clear</span></code></a>()</td>\n<td>Remove all clusters from this cluster map.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap.clusters_sizes\" title=\"dipy.segment.clustering.ClusterMap.clusters_sizes\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">clusters_sizes</span></code></a>()</td>\n<td>Gets the size of every cluster contained in this cluster map.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap.get_large_clusters\" title=\"dipy.segment.clustering.ClusterMap.get_large_clusters\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">get_large_clusters</span></code></a>(min_size)</td>\n<td>Gets clusters which contains at least <cite>min_size</cite> elements.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap.get_small_clusters\" title=\"dipy.segment.clustering.ClusterMap.get_small_clusters\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">get_small_clusters</span></code></a>(max_size)</td>\n<td>Gets clusters which contains at most <cite>max_size</cite> elements.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap.remove_cluster\" title=\"dipy.segment.clustering.ClusterMap.remove_cluster\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">remove_cluster</span></code></a>(*clusters)</td>\n<td>Remove one or multiple clusters from this cluster map.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap.size\" title=\"dipy.segment.clustering.ClusterMap.size\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">size</span></code></a>()</td>\n<td>Gets number of clusters contained in this cluster map.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.ClusterMap.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>refdata=&lt;dipy.segment.clustering.Identity instance&gt;</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.ClusterMap.add_cluster\">\n<code class=\"descname\">add_cluster</code><span class=\"sig-paren\">(</span><em>*clusters</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.add_cluster\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Adds one or multiple clusters to this cluster map.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>*clusters</strong> : <cite>Cluster</cite> object, ...</p>\n<blockquote class=\"last\">\n<div><p>Cluster(s) to be added in this cluster map.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.ClusterMap.clear\">\n<code class=\"descname\">clear</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.clear\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Remove all clusters from this cluster map.</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.segment.clustering.ClusterMap.clusters\">\n<code class=\"descname\">clusters</code><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.clusters\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.ClusterMap.clusters_sizes\">\n<code class=\"descname\">clusters_sizes</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.clusters_sizes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gets the size of every cluster contained in this cluster map.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>list of int</strong> :</p>\n<blockquote class=\"last\">\n<div><p>Sizes of every cluster in this cluster map.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.ClusterMap.get_large_clusters\">\n<code class=\"descname\">get_large_clusters</code><span class=\"sig-paren\">(</span><em>min_size</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.get_large_clusters\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gets clusters which contains at least <cite>min_size</cite> elements.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>min_size</strong> : int</p>\n<blockquote>\n<div><p>Minimum number of elements a cluster needs to have to be selected.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>list of `Cluster` objects</strong> :</p>\n<blockquote class=\"last\">\n<div><p>Clusters having at least <cite>min_size</cite> elements.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.ClusterMap.get_small_clusters\">\n<code class=\"descname\">get_small_clusters</code><span class=\"sig-paren\">(</span><em>max_size</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.get_small_clusters\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gets clusters which contains at most <cite>max_size</cite> elements.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>max_size</strong> : int</p>\n<blockquote>\n<div><p>Maximum number of elements a cluster can have to be selected.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>list of `Cluster` objects</strong> :</p>\n<blockquote class=\"last\">\n<div><p>Clusters having at most <cite>max_size</cite> elements.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.segment.clustering.ClusterMap.refdata\">\n<code class=\"descname\">refdata</code><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.refdata\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.ClusterMap.remove_cluster\">\n<code class=\"descname\">remove_cluster</code><span class=\"sig-paren\">(</span><em>*clusters</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.remove_cluster\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Remove one or multiple clusters from this cluster map.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>*clusters</strong> : <cite>Cluster</cite> object, ...</p>\n<blockquote class=\"last\">\n<div><p>Cluster(s) to be removed from this cluster map.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.ClusterMap.size\">\n<code class=\"descname\">size</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMap.size\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Gets number of clusters contained in this cluster map.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"clustermapcentroid\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMapCentroid\" title=\"dipy.segment.clustering.ClusterMapCentroid\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ClusterMapCentroid</span></code></a><a class=\"headerlink\" href=\"#clustermapcentroid\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.clustering.ClusterMapCentroid\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.clustering.</code><code class=\"descname\">ClusterMapCentroid</code><span class=\"sig-paren\">(</span><em>refdata=&lt;dipy.segment.clustering.Identity instance&gt;</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMapCentroid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.segment.clustering.ClusterMap\" title=\"dipy.segment.clustering.ClusterMap\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.segment.clustering.ClusterMap</span></code></a></p>\n<p>Provides functionalities for interacting with clustering outputs\nthat have centroids.</p>\n<p>Allows to retrieve easely the centroid of every cluster. Also, it is\na useful container to create, remove, retrieve and filter clusters.\nIf <cite>refdata</cite> is given, elements will be returned instead of their\nindex when using <cite>ClusterCentroid</cite> objects.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>refdata</strong> : list</p>\n<blockquote class=\"last\">\n<div><p>Actual elements that clustered indices refer to.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">add_cluster</span></code>(*clusters)</td>\n<td>Adds one or multiple clusters to this cluster map.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">clear</span></code>()</td>\n<td>Remove all clusters from this cluster map.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">clusters_sizes</span></code>()</td>\n<td>Gets the size of every cluster contained in this cluster map.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">get_large_clusters</span></code>(min_size)</td>\n<td>Gets clusters which contains at least <cite>min_size</cite> elements.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">get_small_clusters</span></code>(max_size)</td>\n<td>Gets clusters which contains at most <cite>max_size</cite> elements.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">remove_cluster</span></code>(*clusters)</td>\n<td>Remove one or multiple clusters from this cluster map.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">size</span></code>()</td>\n<td>Gets number of clusters contained in this cluster map.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.ClusterMapCentroid.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>refdata=&lt;dipy.segment.clustering.Identity instance&gt;</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMapCentroid.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.segment.clustering.ClusterMapCentroid.centroids\">\n<code class=\"descname\">centroids</code><a class=\"headerlink\" href=\"#dipy.segment.clustering.ClusterMapCentroid.centroids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"clustering\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.Clustering\" title=\"dipy.segment.clustering.Clustering\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Clustering</span></code></a><a class=\"headerlink\" href=\"#clustering\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.clustering.Clustering\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.clustering.</code><code class=\"descname\">Clustering</code><a class=\"headerlink\" href=\"#dipy.segment.clustering.Clustering\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.Clustering.cluster\" title=\"dipy.segment.clustering.Clustering.cluster\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cluster</span></code></a>(data[,&nbsp;ordering])</td>\n<td>Clusters <cite>data</cite>.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.Clustering.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.Clustering.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.Clustering.cluster\">\n<code class=\"descname\">cluster</code><span class=\"sig-paren\">(</span><em>data</em>, <em>ordering=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.Clustering.cluster\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Clusters <cite>data</cite>.</p>\n<p>Subclasses will perform their clustering algorithm here.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>data</strong> : list of N-dimensional arrays</p>\n<blockquote>\n<div><p>Each array represents a data point.</p>\n</div></blockquote>\n<p><strong>ordering</strong> : iterable of indices, optional</p>\n<blockquote>\n<div><p>Specifies the order in which data points will be clustered.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>`ClusterMap` object</strong> :</p>\n<blockquote class=\"last\">\n<div><p>Result of the clustering.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"identity\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.Identity\" title=\"dipy.segment.clustering.Identity\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Identity</span></code></a><a class=\"headerlink\" href=\"#identity\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.clustering.Identity\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.clustering.</code><code class=\"descname\">Identity</code><a class=\"headerlink\" href=\"#dipy.segment.clustering.Identity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Provides identity indexing functionality.</p>\n<p>This can replace any class supporting indexing used for referencing\n(e.g. list, tuple). Indexing an instance of this class will return the\nindex provided instead of the element. It does not support slicing.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id3\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.Metric\" title=\"dipy.segment.clustering.Metric\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Metric</span></code></a><a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.clustering.Metric\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.clustering.</code><code class=\"descname\">Metric</code><a class=\"headerlink\" href=\"#dipy.segment.clustering.Metric\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Computes a distance between two sequential data.</p>\n<p>A sequence of N-dimensional points is represented as a 2D array with\nshape (nb_points, nb_dimensions). A <cite>feature</cite> object can be specified\nin order to calculate the distance between extracted features, rather\nthan directly between the sequential data.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>feature</strong> : <cite>Feature</cite> object, optional</p>\n<blockquote class=\"last\">\n<div><p>It is used to extract features before computing the distance.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>When subclassing <cite>Metric</cite>, one only needs to override the <cite>dist</cite> and\n<cite>are_compatible</cite> methods.</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.Metric.are_compatible\" title=\"dipy.segment.clustering.Metric.are_compatible\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">are_compatible</span></code></a></td>\n<td>Checks if features can be used by <cite>metric.dist</cite> based on their shape.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.Metric.dist\" title=\"dipy.segment.clustering.Metric.dist\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dist</span></code></a></td>\n<td>Computes a distance between two data points based on their features.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.Metric.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.Metric.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.Metric.are_compatible\">\n<code class=\"descname\">are_compatible</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.Metric.are_compatible\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Checks if features can be used by <cite>metric.dist</cite> based on their shape.</p>\n<p>Basically this method exists so we don&#8217;t have to do this check\ninside the <cite>metric.dist</cite> function (speedup).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>shape1</strong> : int, 1-tuple or 2-tuple</p>\n<blockquote>\n<div><p>shape of the first data point&#8217;s features</p>\n</div></blockquote>\n<p><strong>shape2</strong> : int, 1-tuple or 2-tuple</p>\n<blockquote>\n<div><p>shape of the second data point&#8217;s features</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>are_compatible</strong> : bool</p>\n<blockquote class=\"last\">\n<div><p>whether or not shapes are compatible</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.Metric.dist\">\n<code class=\"descname\">dist</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.Metric.dist\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes a distance between two data points based on their features.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>features1</strong> : 2D array</p>\n<blockquote>\n<div><p>Features of the first data point.</p>\n</div></blockquote>\n<p><strong>features2</strong> : 2D array</p>\n<blockquote>\n<div><p>Features of the second data point.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>double</strong> :</p>\n<blockquote class=\"last\">\n<div><p>Distance between two data points.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.segment.clustering.Metric.feature\">\n<code class=\"descname\">feature</code><a class=\"headerlink\" href=\"#dipy.segment.clustering.Metric.feature\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><cite>Feature</cite> object used to extract features from sequential data</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.segment.clustering.Metric.is_order_invariant\">\n<code class=\"descname\">is_order_invariant</code><a class=\"headerlink\" href=\"#dipy.segment.clustering.Metric.is_order_invariant\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Is this metric invariant to the sequence&#8217;s ordering</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"quickbundles\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.QuickBundles\" title=\"dipy.segment.clustering.QuickBundles\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">QuickBundles</span></code></a><a class=\"headerlink\" href=\"#quickbundles\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.clustering.QuickBundles\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.clustering.</code><code class=\"descname\">QuickBundles</code><span class=\"sig-paren\">(</span><em>threshold</em>, <em>metric='MDF_12points'</em>, <em>max_nb_clusters=2147483647</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.QuickBundles\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.segment.clustering.Clustering\" title=\"dipy.segment.clustering.Clustering\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.segment.clustering.Clustering</span></code></a></p>\n<p>Clusters streamlines using QuickBundles <a class=\"reference internal\" href=\"#id23\" id=\"id4\">[Garyfallidis12]</a>.</p>\n<p>Given a list of streamlines, the QuickBundles algorithm sequentially\nassigns each streamline to its closest bundle in <span class=\"math\">\\(\\mathcal{O}(Nk)\\)</span> where\n<span class=\"math\">\\(N\\)</span> is the number of streamlines and <span class=\"math\">\\(k\\)</span> is the final number of bundles.\nIf for a given streamline its closest bundle is farther than <cite>threshold</cite>,\na new bundle is created and the streamline is assigned to it except if the\nnumber of bundles has already exceeded <cite>max_nb_clusters</cite>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>threshold</strong> : float</p>\n<blockquote>\n<div><p>The maximum distance from a bundle for a streamline to be still\nconsidered as part of it.</p>\n</div></blockquote>\n<p><strong>metric</strong> : str or <cite>Metric</cite> object (optional)</p>\n<blockquote>\n<div><p>The distance metric to use when comparing two streamlines. By default,\nthe Minimum average Direct-Flip (MDF) distance <a class=\"reference internal\" href=\"#id23\" id=\"id5\">[Garyfallidis12]</a> is\nused and streamlines are automatically resampled so they have\n12 points.</p>\n</div></blockquote>\n<p><strong>max_nb_clusters</strong> : int</p>\n<blockquote class=\"last\">\n<div><p>Limits the creation of bundles.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"garyfallidis12\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Garyfallidis12]</td><td>Garyfallidis E. et al., QuickBundles a method for\ntractography simplification, Frontiers in Neuroscience,\nvol 6, no 175, 2012.</td></tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.clustering</span> <span class=\"k\">import</span> <span class=\"n\">QuickBundles</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">get_data</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">nibabel</span> <span class=\"k\">import</span> <span class=\"n\">trackvis</span> <span class=\"k\">as</span> <span class=\"n\">tv</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">streams</span><span class=\"p\">,</span> <span class=\"n\">hdr</span> <span class=\"o\">=</span> <span class=\"n\">tv</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">get_data</span><span class=\"p\">(</span><span class=\"s1\">&#39;fornix&#39;</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">streams</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Segment fornix with a treshold of 10mm and streamlines resampled</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># to 12 points.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qb</span> <span class=\"o\">=</span> <span class=\"n\">QuickBundles</span><span class=\"p\">(</span><span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">10.</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">clusters</span> <span class=\"o\">=</span> <span class=\"n\">qb</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">clusters</span><span class=\"p\">)</span>\n<span class=\"go\">4</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">,</span> <span class=\"n\">clusters</span><span class=\"p\">))</span>\n<span class=\"go\">[61, 191, 47, 1]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Resampling streamlines differently is done explicitly as follows.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Note this has an impact on the speed and the accuracy (tradeoff).</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.metric</span> <span class=\"k\">import</span> <span class=\"n\">ResampleFeature</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.segment.metric</span> <span class=\"k\">import</span> <span class=\"n\">AveragePointwiseEuclideanMetric</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">feature</span> <span class=\"o\">=</span> <span class=\"n\">ResampleFeature</span><span class=\"p\">(</span><span class=\"n\">nb_points</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">metric</span> <span class=\"o\">=</span> <span class=\"n\">AveragePointwiseEuclideanMetric</span><span class=\"p\">(</span><span class=\"n\">feature</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qb</span> <span class=\"o\">=</span> <span class=\"n\">QuickBundles</span><span class=\"p\">(</span><span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">10.</span><span class=\"p\">,</span> <span class=\"n\">metric</span><span class=\"o\">=</span><span class=\"n\">metric</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">clusters</span> <span class=\"o\">=</span> <span class=\"n\">qb</span><span class=\"o\">.</span><span class=\"n\">cluster</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">clusters</span><span class=\"p\">)</span>\n<span class=\"go\">4</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">,</span> <span class=\"n\">clusters</span><span class=\"p\">))</span>\n<span class=\"go\">[58, 142, 72, 28]</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.clustering.QuickBundles.cluster\" title=\"dipy.segment.clustering.QuickBundles.cluster\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cluster</span></code></a>(streamlines[,&nbsp;ordering])</td>\n<td>Clusters <cite>streamlines</cite> into bundles.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.QuickBundles.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>threshold</em>, <em>metric='MDF_12points'</em>, <em>max_nb_clusters=2147483647</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.QuickBundles.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.QuickBundles.cluster\">\n<code class=\"descname\">cluster</code><span class=\"sig-paren\">(</span><em>streamlines</em>, <em>ordering=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.QuickBundles.cluster\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Clusters <cite>streamlines</cite> into bundles.</p>\n<p>Performs quickbundles algorithm using predefined metric and threshold.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>streamlines</strong> : list of 2D arrays</p>\n<blockquote>\n<div><p>Each 2D array represents a sequence of 3D points (points, 3).</p>\n</div></blockquote>\n<p><strong>ordering</strong> : iterable of indices</p>\n<blockquote>\n<div><p>Specifies the order in which data points will be clustered.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>`ClusterMapCentroid` object</strong> :</p>\n<blockquote class=\"last\">\n<div><p>Result of the clustering.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"resamplefeature\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.clustering.ResampleFeature\" title=\"dipy.segment.clustering.ResampleFeature\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ResampleFeature</span></code></a><a class=\"headerlink\" href=\"#resamplefeature\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.clustering.ResampleFeature\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.clustering.</code><code class=\"descname\">ResampleFeature</code><a class=\"headerlink\" href=\"#dipy.segment.clustering.ResampleFeature\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.segment.featurespeed.CythonFeature</span></code></p>\n<p>Extracts features from a sequential datum.</p>\n<p>A sequence of N-dimensional points is represented as a 2D array with\nshape (nb_points, nb_dimensions).</p>\n<p>The features being extracted are the points of the sequence once resampled.\nThis is useful for metrics requiring a constant number of points for all</p>\n<blockquote>\n<div>streamlines.</div></blockquote>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">extract</span></code></td>\n<td>Extracts features from a sequential datum.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">infer_shape</span></code></td>\n<td>Infers the shape of features extracted from a sequential datum.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.clustering.ResampleFeature.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.ResampleFeature.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"abstractmethod\">\n<h3>abstractmethod<a class=\"headerlink\" href=\"#abstractmethod\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.clustering.abstractmethod\">\n<code class=\"descclassname\">dipy.segment.clustering.</code><code class=\"descname\">abstractmethod</code><span class=\"sig-paren\">(</span><em>funcobj</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.clustering.abstractmethod\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A decorator indicating abstract methods.</p>\n<p>Requires that the metaclass is ABCMeta or derived from it.  A\nclass that has a metaclass derived from ABCMeta cannot be\ninstantiated unless all of its abstract methods are overridden.\nThe abstract methods can be called using any of the normal\n&#8216;super&#8217; call mechanisms.</p>\n<p>Usage:</p>\n<blockquote>\n<div><dl class=\"docutils\">\n<dt>class C:</dt>\n<dd><p class=\"first\">__metaclass__ = ABCMeta\n&#64;abstractmethod\ndef my_abstract_method(self, ...):</p>\n<blockquote class=\"last\">\n<div>...</div></blockquote>\n</dd>\n</dl>\n</div></blockquote>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"applymask\">\n<h3>applymask<a class=\"headerlink\" href=\"#applymask\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.mask.applymask\">\n<code class=\"descclassname\">dipy.segment.mask.</code><code class=\"descname\">applymask</code><span class=\"sig-paren\">(</span><em>vol</em>, <em>mask</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.applymask\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Mask vol with mask.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>vol</strong> : ndarray</p>\n<blockquote>\n<div><p>Array with <span class=\"math\">\\(V\\)</span> dimensions</p>\n</div></blockquote>\n<p><strong>mask</strong> : ndarray</p>\n<blockquote>\n<div><p>Binary mask.  Has <span class=\"math\">\\(M\\)</span> dimensions where <span class=\"math\">\\(M &lt;= V\\)</span>. When <span class=\"math\">\\(M &lt; V\\)</span>, we\nappend <span class=\"math\">\\(V - M\\)</span> dimensions with axis length 1 to <cite>mask</cite> so that <cite>mask</cite>\nwill broadcast against <cite>vol</cite>.  In the typical case <cite>vol</cite> can be 4D,\n<cite>mask</cite> can be 3D, and we append a 1 to the mask shape which (via numpy\nbroadcasting) has the effect of appling the 3D mask to each 3D slice in\n<cite>vol</cite> (<code class=\"docutils literal\"><span class=\"pre\">vol[...,</span> <span class=\"pre\">0]</span></code> to <code class=\"docutils literal\"><span class=\"pre\">vol[...,</span> <span class=\"pre\">-1</span></code>).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>masked_vol</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p><cite>vol</cite> multiplied by <cite>mask</cite> where <cite>mask</cite> may have been extended to match\nextra dimensions in <cite>vol</cite></p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"binary-dilation\">\n<h3>binary_dilation<a class=\"headerlink\" href=\"#binary-dilation\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.mask.binary_dilation\">\n<code class=\"descclassname\">dipy.segment.mask.</code><code class=\"descname\">binary_dilation</code><span class=\"sig-paren\">(</span><em>input</em>, <em>structure=None</em>, <em>iterations=1</em>, <em>mask=None</em>, <em>output=None</em>, <em>border_value=0</em>, <em>origin=0</em>, <em>brute_force=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.binary_dilation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Multi-dimensional binary dilation with the given structuring element.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>input</strong> : array_like</p>\n<blockquote>\n<div><p>Binary array_like to be dilated. Non-zero (True) elements form\nthe subset to be dilated.</p>\n</div></blockquote>\n<p><strong>structure</strong> : array_like, optional</p>\n<blockquote>\n<div><p>Structuring element used for the dilation. Non-zero elements are\nconsidered True. If no structuring element is provided an element\nis generated with a square connectivity equal to one.</p>\n</div></blockquote>\n<p><strong>iterations</strong> : {int, float}, optional</p>\n<blockquote>\n<div><p>The dilation is repeated <cite>iterations</cite> times (one, by default).\nIf iterations is less than 1, the dilation is repeated until the\nresult does not change anymore.</p>\n</div></blockquote>\n<p><strong>mask</strong> : array_like, optional</p>\n<blockquote>\n<div><p>If a mask is given, only those elements with a True value at\nthe corresponding mask element are modified at each iteration.</p>\n</div></blockquote>\n<p><strong>output</strong> : ndarray, optional</p>\n<blockquote>\n<div><p>Array of the same shape as input, into which the output is placed.\nBy default, a new array is created.</p>\n</div></blockquote>\n<p><strong>origin</strong> : int or tuple of ints, optional</p>\n<blockquote>\n<div><p>Placement of the filter, by default 0.</p>\n</div></blockquote>\n<p><strong>border_value</strong> : int (cast to 0 or 1), optional</p>\n<blockquote>\n<div><p>Value at the border in the output array.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>binary_dilation</strong> : ndarray of bools</p>\n<blockquote class=\"last\">\n<div><p>Dilation of the input by the structuring element.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">grey_dilation</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">binary_erosion</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">binary_closing</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">binary_opening</span></code>, <a class=\"reference internal\" href=\"#dipy.segment.mask.generate_binary_structure\" title=\"dipy.segment.mask.generate_binary_structure\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">generate_binary_structure</span></code></a></p>\n</div>\n<p class=\"rubric\">Notes</p>\n<p>Dilation <a class=\"reference internal\" href=\"#r236\" id=\"id7\">[R236]</a> is a mathematical morphology operation <a class=\"reference internal\" href=\"#r237\" id=\"id8\">[R237]</a> that uses a\nstructuring element for expanding the shapes in an image. The binary\ndilation of an image by a structuring element is the locus of the points\ncovered by the structuring element, when its center lies within the\nnon-zero points of the image.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r236\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R236]</td><td><em>(<a class=\"fn-backref\" href=\"#id7\">1</a>, <a class=\"fn-backref\" href=\"#id9\">2</a>)</em> <a class=\"reference external\" href=\"http://en.wikipedia.org/wiki/Dilation_%28morphology%29\">http://en.wikipedia.org/wiki/Dilation_%28morphology%29</a></td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r237\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R237]</td><td><em>(<a class=\"fn-backref\" href=\"#id8\">1</a>, <a class=\"fn-backref\" href=\"#id10\">2</a>)</em> <a class=\"reference external\" href=\"http://en.wikipedia.org/wiki/Mathematical_morphology\">http://en.wikipedia.org/wiki/Mathematical_morphology</a></td></tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">scipy</span> <span class=\"k\">import</span> <span class=\"n\">ndimage</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span>\n<span class=\"go\">array([[ 0.,  0.,  0.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  0.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  1.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  0.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  0.,  0.,  0.]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">binary_dilation</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"go\">array([[False, False, False, False, False],</span>\n<span class=\"go\">       [False, False,  True, False, False],</span>\n<span class=\"go\">       [False,  True,  True,  True, False],</span>\n<span class=\"go\">       [False, False,  True, False, False],</span>\n<span class=\"go\">       [False, False, False, False, False]], dtype=bool)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">binary_dilation</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span>\n<span class=\"go\">array([[ 0.,  0.,  0.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  1.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  1.,  1.,  1.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  1.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  0.,  0.,  0.]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># 3x3 structuring element with connectivity 1, used by default</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">struct1</span> <span class=\"o\">=</span> <span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">generate_binary_structure</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">struct1</span>\n<span class=\"go\">array([[False,  True, False],</span>\n<span class=\"go\">       [ True,  True,  True],</span>\n<span class=\"go\">       [False,  True, False]], dtype=bool)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># 3x3 structuring element with connectivity 2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">struct2</span> <span class=\"o\">=</span> <span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">generate_binary_structure</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">struct2</span>\n<span class=\"go\">array([[ True,  True,  True],</span>\n<span class=\"go\">       [ True,  True,  True],</span>\n<span class=\"go\">       [ True,  True,  True]], dtype=bool)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">binary_dilation</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">structure</span><span class=\"o\">=</span><span class=\"n\">struct1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span>\n<span class=\"go\">array([[ 0.,  0.,  0.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  1.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  1.,  1.,  1.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  1.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  0.,  0.,  0.]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">binary_dilation</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">structure</span><span class=\"o\">=</span><span class=\"n\">struct2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span>\n<span class=\"go\">array([[ 0.,  0.,  0.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  1.,  1.,  1.,  0.],</span>\n<span class=\"go\">       [ 0.,  1.,  1.,  1.,  0.],</span>\n<span class=\"go\">       [ 0.,  1.,  1.,  1.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  0.,  0.,  0.]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">binary_dilation</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">structure</span><span class=\"o\">=</span><span class=\"n\">struct1</span><span class=\"p\">,</span>\\\n<span class=\"gp\">... </span><span class=\"n\">iterations</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span>\n<span class=\"go\">array([[ 0.,  0.,  1.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  1.,  1.,  1.,  0.],</span>\n<span class=\"go\">       [ 1.,  1.,  1.,  1.,  1.],</span>\n<span class=\"go\">       [ 0.,  1.,  1.,  1.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  1.,  0.,  0.]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"bounding-box\">\n<h3>bounding_box<a class=\"headerlink\" href=\"#bounding-box\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.mask.bounding_box\">\n<code class=\"descclassname\">dipy.segment.mask.</code><code class=\"descname\">bounding_box</code><span class=\"sig-paren\">(</span><em>vol</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.bounding_box\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the bounding box of nonzero intensity voxels in the volume.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>vol</strong> : ndarray</p>\n<blockquote>\n<div><p>Volume to compute bounding box on.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>npmins</strong> : list</p>\n<blockquote>\n<div><p>Array containg minimum index of each dimension</p>\n</div></blockquote>\n<p><strong>npmaxs</strong> : list</p>\n<blockquote class=\"last\">\n<div><p>Array containg maximum index of each dimension</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"clean-cc-mask\">\n<h3>clean_cc_mask<a class=\"headerlink\" href=\"#clean-cc-mask\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.mask.clean_cc_mask\">\n<code class=\"descclassname\">dipy.segment.mask.</code><code class=\"descname\">clean_cc_mask</code><span class=\"sig-paren\">(</span><em>mask</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.clean_cc_mask\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Cleans a segmentation of the corpus callosum so no random pixels\nare included.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>mask</strong> : ndarray</p>\n<blockquote>\n<div><p>Binary mask of the coarse segmentation.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>new_cc_mask</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>Binary mask of the cleaned segmentation.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"color-fa\">\n<h3>color_fa<a class=\"headerlink\" href=\"#color-fa\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.mask.color_fa\">\n<code class=\"descclassname\">dipy.segment.mask.</code><code class=\"descname\">color_fa</code><span class=\"sig-paren\">(</span><em>fa</em>, <em>evecs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.color_fa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Color fractional anisotropy of diffusion tensor</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>fa</strong> : array-like</p>\n<blockquote>\n<div><p>Array of the fractional anisotropy (can be 1D, 2D or 3D)</p>\n</div></blockquote>\n<p><strong>evecs</strong> : array-like</p>\n<blockquote>\n<div><p>eigen vectors from the tensor model</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>rgb</strong> : Array with 3 channels for each color as the last dimension.</p>\n<blockquote class=\"last\">\n<div><p>Colormap of the FA with red for the x value, y for the green\nvalue and z for the blue value.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"crop\">\n<h3>crop<a class=\"headerlink\" href=\"#crop\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.mask.crop\">\n<code class=\"descclassname\">dipy.segment.mask.</code><code class=\"descname\">crop</code><span class=\"sig-paren\">(</span><em>vol</em>, <em>mins</em>, <em>maxs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.crop\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Crops the input volume.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>vol</strong> : ndarray</p>\n<blockquote>\n<div><p>Volume to crop.</p>\n</div></blockquote>\n<p><strong>mins</strong> : array</p>\n<blockquote>\n<div><p>Array containg minimum index of each dimension.</p>\n</div></blockquote>\n<p><strong>maxs</strong> : array</p>\n<blockquote>\n<div><p>Array containg maximum index of each dimension.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>vol</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The cropped volume.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"fractional-anisotropy\">\n<h3>fractional_anisotropy<a class=\"headerlink\" href=\"#fractional-anisotropy\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.mask.fractional_anisotropy\">\n<code class=\"descclassname\">dipy.segment.mask.</code><code class=\"descname\">fractional_anisotropy</code><span class=\"sig-paren\">(</span><em>evals</em>, <em>axis=-1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.fractional_anisotropy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fractional anisotropy (FA) of a diffusion tensor.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>evals</strong> : array-like</p>\n<blockquote>\n<div><p>Eigenvalues of a diffusion tensor.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis of <cite>evals</cite> which contains 3 eigenvalues.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>fa</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Calculated FA. Range is 0 &lt;= FA &lt;= 1.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>FA is calculated using the following equation:</p>\n<div class=\"math\">\n\\[FA = \\sqrt{\\frac{1}{2}\\frac{(\\lambda_1-\\lambda_2)^2+(\\lambda_1-\n            \\lambda_3)^2+(\\lambda_2-\\lambda_3)^2}{\\lambda_1^2+\n            \\lambda_2^2+\\lambda_3^2}}\\]</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"generate-binary-structure\">\n<h3>generate_binary_structure<a class=\"headerlink\" href=\"#generate-binary-structure\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.mask.generate_binary_structure\">\n<code class=\"descclassname\">dipy.segment.mask.</code><code class=\"descname\">generate_binary_structure</code><span class=\"sig-paren\">(</span><em>rank</em>, <em>connectivity</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.generate_binary_structure\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generate a binary structure for binary morphological operations.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>rank</strong> : int</p>\n<blockquote>\n<div><p>Number of dimensions of the array to which the structuring element\nwill be applied, as returned by <cite>np.ndim</cite>.</p>\n</div></blockquote>\n<p><strong>connectivity</strong> : int</p>\n<blockquote>\n<div><p><cite>connectivity</cite> determines which elements of the output array belong\nto the structure, i.e. are considered as neighbors of the central\nelement. Elements up to a squared distance of <cite>connectivity</cite> from\nthe center are considered neighbors. <cite>connectivity</cite> may range from 1\n(no diagonal elements are neighbors) to <cite>rank</cite> (all elements are\nneighbors).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>output</strong> : ndarray of bools</p>\n<blockquote class=\"last\">\n<div><p>Structuring element which may be used for binary morphological\noperations, with <cite>rank</cite> dimensions and all dimensions equal to 3.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">iterate_structure</span></code>, <a class=\"reference internal\" href=\"#dipy.segment.mask.binary_dilation\" title=\"dipy.segment.mask.binary_dilation\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">binary_dilation</span></code></a>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">binary_erosion</span></code></p>\n</div>\n<p class=\"rubric\">Notes</p>\n<p><cite>generate_binary_structure</cite> can only create structuring elements with\ndimensions equal to 3, i.e. minimal dimensions. For larger structuring\nelements, that are useful e.g. for eroding large objects, one may either\nuse   <cite>iterate_structure</cite>, or create directly custom arrays with\nnumpy functions such as <cite>numpy.ones</cite>.</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">scipy</span> <span class=\"k\">import</span> <span class=\"n\">ndimage</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">struct</span> <span class=\"o\">=</span> <span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">generate_binary_structure</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">struct</span>\n<span class=\"go\">array([[False,  True, False],</span>\n<span class=\"go\">       [ True,  True,  True],</span>\n<span class=\"go\">       [False,  True, False]], dtype=bool)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span>\n<span class=\"go\">array([[ 0.,  0.,  0.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  0.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  1.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  0.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  0.,  0.,  0.]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">binary_dilation</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">structure</span><span class=\"o\">=</span><span class=\"n\">struct</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span>\n<span class=\"go\">array([[ 0.,  0.,  0.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  1.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  1.,  1.,  1.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  1.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  0.,  0.,  0.]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">binary_dilation</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">structure</span><span class=\"o\">=</span><span class=\"n\">struct</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span>\n<span class=\"go\">array([[ 0.,  0.,  1.,  0.,  0.],</span>\n<span class=\"go\">       [ 0.,  1.,  1.,  1.,  0.],</span>\n<span class=\"go\">       [ 1.,  1.,  1.,  1.,  1.],</span>\n<span class=\"go\">       [ 0.,  1.,  1.,  1.,  0.],</span>\n<span class=\"go\">       [ 0.,  0.,  1.,  0.,  0.]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">struct</span> <span class=\"o\">=</span> <span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">generate_binary_structure</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">struct</span>\n<span class=\"go\">array([[ True,  True,  True],</span>\n<span class=\"go\">       [ True,  True,  True],</span>\n<span class=\"go\">       [ True,  True,  True]], dtype=bool)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">struct</span> <span class=\"o\">=</span> <span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">generate_binary_structure</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">struct</span> <span class=\"c1\"># no diagonal elements</span>\n<span class=\"go\">array([[[False, False, False],</span>\n<span class=\"go\">        [False,  True, False],</span>\n<span class=\"go\">        [False, False, False]],</span>\n<span class=\"go\">       [[False,  True, False],</span>\n<span class=\"go\">        [ True,  True,  True],</span>\n<span class=\"go\">        [False,  True, False]],</span>\n<span class=\"go\">       [[False, False, False],</span>\n<span class=\"go\">        [False,  True, False],</span>\n<span class=\"go\">        [False, False, False]]], dtype=bool)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"median-filter\">\n<h3>median_filter<a class=\"headerlink\" href=\"#median-filter\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.mask.median_filter\">\n<code class=\"descclassname\">dipy.segment.mask.</code><code class=\"descname\">median_filter</code><span class=\"sig-paren\">(</span><em>input</em>, <em>size=None</em>, <em>footprint=None</em>, <em>output=None</em>, <em>mode='reflect'</em>, <em>cval=0.0</em>, <em>origin=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.median_filter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculates a multidimensional median filter.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>input</strong> : array_like</p>\n<blockquote>\n<div><p>Input array to filter.</p>\n</div></blockquote>\n<p><strong>size</strong> : scalar or tuple, optional</p>\n<blockquote>\n<div><p>See footprint, below</p>\n</div></blockquote>\n<p><strong>footprint</strong> : array, optional</p>\n<blockquote>\n<div><p>Either <cite>size</cite> or <cite>footprint</cite> must be defined.  <cite>size</cite> gives\nthe shape that is taken from the input array, at every element\nposition, to define the input to the filter function.\n<cite>footprint</cite> is a boolean array that specifies (implicitly) a\nshape, but also which of the elements within this shape will get\npassed to the filter function.  Thus <code class=\"docutils literal\"><span class=\"pre\">size=(n,m)</span></code> is equivalent\nto <code class=\"docutils literal\"><span class=\"pre\">footprint=np.ones((n,m))</span></code>.  We adjust <cite>size</cite> to the number\nof dimensions of the input array, so that, if the input array is\nshape (10,10,10), and <cite>size</cite> is 2, then the actual size used is\n(2,2,2).</p>\n</div></blockquote>\n<p><strong>output</strong> : array, optional</p>\n<blockquote>\n<div><p>The <cite>output</cite> parameter passes an array in which to store the\nfilter output.</p>\n</div></blockquote>\n<p><strong>mode</strong> : {&#8216;reflect&#8217;, &#8216;constant&#8217;, &#8216;nearest&#8217;, &#8216;mirror&#8217;, &#8216;wrap&#8217;}, optional</p>\n<blockquote>\n<div><p>The <cite>mode</cite> parameter determines how the array borders are\nhandled, where <cite>cval</cite> is the value when mode is equal to\n&#8216;constant&#8217;. Default is &#8216;reflect&#8217;</p>\n</div></blockquote>\n<p><strong>cval</strong> : scalar, optional</p>\n<blockquote>\n<div><p>Value to fill past edges of input if <cite>mode</cite> is &#8216;constant&#8217;. Default\nis 0.0</p>\n</div></blockquote>\n<p><strong>origin</strong> : scalar, optional</p>\n<blockquote>\n<div><p>The <cite>origin</cite> parameter controls the placement of the filter.\nDefault 0.0.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>median_filter</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>Return of same shape as <cite>input</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"median-otsu\">\n<h3>median_otsu<a class=\"headerlink\" href=\"#median-otsu\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.mask.median_otsu\">\n<code class=\"descclassname\">dipy.segment.mask.</code><code class=\"descname\">median_otsu</code><span class=\"sig-paren\">(</span><em>input_volume</em>, <em>median_radius=4</em>, <em>numpass=4</em>, <em>autocrop=False</em>, <em>vol_idx=None</em>, <em>dilate=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.median_otsu\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Simple brain extraction tool method for images from DWI data.</p>\n<p>It uses a median filter smoothing of the input_volumes <cite>vol_idx</cite> and an\nautomatic histogram Otsu thresholding technique, hence the name\n<em>median_otsu</em>.</p>\n<p>This function is inspired from Mrtrix&#8217;s bet which has default values\n<code class=\"docutils literal\"><span class=\"pre\">median_radius=3</span></code>, <code class=\"docutils literal\"><span class=\"pre\">numpass=2</span></code>. However, from tests on multiple 1.5T\nand 3T data     from GE, Philips, Siemens, the most robust choice is\n<code class=\"docutils literal\"><span class=\"pre\">median_radius=4</span></code>, <code class=\"docutils literal\"><span class=\"pre\">numpass=4</span></code>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>input_volume</strong> : ndarray</p>\n<blockquote>\n<div><p>ndarray of the brain volume</p>\n</div></blockquote>\n<p><strong>median_radius</strong> : int</p>\n<blockquote>\n<div><p>Radius (in voxels) of the applied median filter (default: 4).</p>\n</div></blockquote>\n<p><strong>numpass: int</strong> :</p>\n<blockquote>\n<div><p>Number of pass of the median filter (default: 4).</p>\n</div></blockquote>\n<p><strong>autocrop: bool, optional</strong> :</p>\n<blockquote>\n<div><p>if True, the masked input_volume will also be cropped using the\nbounding box defined by the masked data. Should be on if DWI is\nupsampled to 1x1x1 resolution. (default: False).</p>\n</div></blockquote>\n<p><strong>vol_idx</strong> : None or array, optional</p>\n<blockquote>\n<div><p>1D array representing indices of <code class=\"docutils literal\"><span class=\"pre\">axis=3</span></code> of a 4D <cite>input_volume</cite> None\n(the default) corresponds to <code class=\"docutils literal\"><span class=\"pre\">(0,)</span></code> (assumes first volume in\n4D array).</p>\n</div></blockquote>\n<p><strong>dilate</strong> : None or int, optional</p>\n<blockquote>\n<div><p>number of iterations for binary dilation</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>maskedvolume</strong> : ndarray</p>\n<blockquote>\n<div><p>Masked input_volume</p>\n</div></blockquote>\n<p><strong>mask</strong> : 3D ndarray</p>\n<blockquote class=\"last\">\n<div><p>The binary brain mask</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>Copyright (C) 2011, the scikit-image team\nAll rights reserved.</p>\n<p>Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.</li>\n<li>Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in\nthe documentation and/or other materials provided with the\ndistribution.</li>\n<li>Neither the name of skimage nor the names of its contributors may be\nused to endorse or promote products derived from this software without\nspecific prior written permission.</li>\n</ol>\n</div></blockquote>\n<p>THIS SOFTWARE IS PROVIDED BY THE AUTHOR <a href=\"#id11\"><span class=\"problematic\" id=\"id12\">``</span></a>AS IS&#8217;&#8217; AND ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\nSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\nIN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"multi-median\">\n<h3>multi_median<a class=\"headerlink\" href=\"#multi-median\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.mask.multi_median\">\n<code class=\"descclassname\">dipy.segment.mask.</code><code class=\"descname\">multi_median</code><span class=\"sig-paren\">(</span><em>input</em>, <em>median_radius</em>, <em>numpass</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.multi_median\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Applies median filter multiple times on input data.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>input</strong> : ndarray</p>\n<blockquote>\n<div><p>The input volume to apply filter on.</p>\n</div></blockquote>\n<p><strong>median_radius</strong> : int</p>\n<blockquote>\n<div><p>Radius (in voxels) of the applied median filter</p>\n</div></blockquote>\n<p><strong>numpass: int</strong> :</p>\n<blockquote>\n<div><p>Number of pass of the median filter</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>input</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>Filtered input volume.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"otsu\">\n<h3>otsu<a class=\"headerlink\" href=\"#otsu\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.mask.otsu\">\n<code class=\"descclassname\">dipy.segment.mask.</code><code class=\"descname\">otsu</code><span class=\"sig-paren\">(</span><em>image</em>, <em>nbins=256</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.otsu\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return threshold value based on Otsu&#8217;s method.\nCopied from scikit-image to remove dependency.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>image</strong> : array</p>\n<blockquote>\n<div><p>Input image.</p>\n</div></blockquote>\n<p><strong>nbins</strong> : int</p>\n<blockquote>\n<div><p>Number of bins used to calculate histogram. This value is ignored for\ninteger arrays.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>threshold</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>Threshold value.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"segment-from-cfa\">\n<h3>segment_from_cfa<a class=\"headerlink\" href=\"#segment-from-cfa\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.mask.segment_from_cfa\">\n<code class=\"descclassname\">dipy.segment.mask.</code><code class=\"descname\">segment_from_cfa</code><span class=\"sig-paren\">(</span><em>tensor_fit</em>, <em>roi</em>, <em>threshold</em>, <em>return_cfa=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.segment_from_cfa\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Segment the cfa inside roi using the values from threshold as bounds.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tensor_fit</strong> : TensorFit object</p>\n<blockquote>\n<div><p>TensorFit object</p>\n</div></blockquote>\n<p><strong>roi</strong> : ndarray</p>\n<blockquote>\n<div><p>A binary mask, which contains the bounding box for the segmentation.</p>\n</div></blockquote>\n<p><strong>threshold</strong> : array-like</p>\n<blockquote>\n<div><p>An iterable that defines the min and max values to use for the\nthresholding.\nThe values are specified as (R_min, R_max, G_min, G_max, B_min, B_max)</p>\n</div></blockquote>\n<p><strong>return_cfa</strong> : bool, optional</p>\n<blockquote>\n<div><p>If True, the cfa is also returned.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>mask</strong> : ndarray</p>\n<blockquote>\n<div><p>Binary mask of the segmentation.</p>\n</div></blockquote>\n<p><strong>cfa</strong> : ndarray, optional</p>\n<blockquote class=\"last\">\n<div><p>Array with shape = (..., 3), where ... is the shape of tensor_fit.\nThe color fractional anisotropy, ordered as a nd array with the last\ndimension of size 3 for the R, G and B channels.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"warn\">\n<h3>warn<a class=\"headerlink\" href=\"#warn\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.mask.warn\">\n<code class=\"descclassname\">dipy.segment.mask.</code><code class=\"descname\">warn</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.mask.warn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Issue a warning, or maybe ignore it or raise an exception.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"arclengthfeature\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.metric.ArcLengthFeature\" title=\"dipy.segment.metric.ArcLengthFeature\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ArcLengthFeature</span></code></a><a class=\"headerlink\" href=\"#arclengthfeature\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.metric.ArcLengthFeature\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.metric.</code><code class=\"descname\">ArcLengthFeature</code><a class=\"headerlink\" href=\"#dipy.segment.metric.ArcLengthFeature\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.segment.featurespeed.CythonFeature</span></code></p>\n<p>Extracts features from a sequential datum.</p>\n<p>A sequence of N-dimensional points is represented as a 2D array with\nshape (nb_points, nb_dimensions).</p>\n<p>The feature being extracted consists of one scalar representing\nthe arc length of the sequence (i.e. the sum of the length of all segments).</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">extract</span></code></td>\n<td>Extracts features from a sequential datum.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">infer_shape</span></code></td>\n<td>Infers the shape of features extracted from a sequential datum.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.metric.ArcLengthFeature.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.ArcLengthFeature.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id13\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.metric.AveragePointwiseEuclideanMetric\" title=\"dipy.segment.metric.AveragePointwiseEuclideanMetric\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">AveragePointwiseEuclideanMetric</span></code></a><a class=\"headerlink\" href=\"#id13\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.metric.AveragePointwiseEuclideanMetric\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.metric.</code><code class=\"descname\">AveragePointwiseEuclideanMetric</code><a class=\"headerlink\" href=\"#dipy.segment.metric.AveragePointwiseEuclideanMetric\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.segment.metricspeed.SumPointwiseEuclideanMetric</span></code></p>\n<p>Computes the average of pointwise Euclidean distances between two\nsequential data.</p>\n<p>A sequence of N-dimensional points is represented as a 2D array with\nshape (nb_points, nb_dimensions). A <cite>feature</cite> object can be specified\nin order to calculate the distance between the features, rather than\ndirectly between the sequential data.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>feature</strong> : <cite>Feature</cite> object, optional</p>\n<blockquote class=\"last\">\n<div><p>It is used to extract features before computing the distance.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The distance between two 2D sequential data:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">s1</span>       <span class=\"n\">s2</span>\n\n<span class=\"mi\">0</span><span class=\"o\">*</span>   <span class=\"n\">a</span>    <span class=\"o\">*</span><span class=\"mi\">0</span>\n  \\       <span class=\"o\">|</span>\n   \\      <span class=\"o\">|</span>\n   <span class=\"mi\">1</span><span class=\"o\">*</span>     <span class=\"o\">|</span>\n    <span class=\"o\">|</span>  <span class=\"n\">b</span>  <span class=\"o\">*</span><span class=\"mi\">1</span>\n    <span class=\"o\">|</span>      \\\n    <span class=\"mi\">2</span><span class=\"o\">*</span>      \\\n        <span class=\"n\">c</span>    <span class=\"o\">*</span><span class=\"mi\">2</span>\n</pre></div>\n</div>\n<p>is equal to <span class=\"math\">\\((a+b+c)/3\\)</span> where <span class=\"math\">\\(a\\)</span> is the Euclidean distance between s1[0] and\ns2[0], <span class=\"math\">\\(b\\)</span> between s1[1] and s2[1] and <span class=\"math\">\\(c\\)</span> between s1[2] and s2[2].</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">are_compatible</span></code></td>\n<td>Checks if features can be used by <cite>metric.dist</cite> based on their shape.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dist</span></code></td>\n<td>Computes a distance between two data points based on their features.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.metric.AveragePointwiseEuclideanMetric.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.AveragePointwiseEuclideanMetric.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"centerofmassfeature\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.metric.CenterOfMassFeature\" title=\"dipy.segment.metric.CenterOfMassFeature\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">CenterOfMassFeature</span></code></a><a class=\"headerlink\" href=\"#centerofmassfeature\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.metric.CenterOfMassFeature\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.metric.</code><code class=\"descname\">CenterOfMassFeature</code><a class=\"headerlink\" href=\"#dipy.segment.metric.CenterOfMassFeature\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.segment.featurespeed.CythonFeature</span></code></p>\n<p>Extracts features from a sequential datum.</p>\n<p>A sequence of N-dimensional points is represented as a 2D array with\nshape (nb_points, nb_dimensions).</p>\n<p>The feature being extracted consists of one N-dimensional point representing\nthe mean of the points, i.e. the center of mass.</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">extract</span></code></td>\n<td>Extracts features from a sequential datum.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">infer_shape</span></code></td>\n<td>Infers the shape of features extracted from a sequential datum.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.metric.CenterOfMassFeature.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.CenterOfMassFeature.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"cosinemetric\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.metric.CosineMetric\" title=\"dipy.segment.metric.CosineMetric\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">CosineMetric</span></code></a><a class=\"headerlink\" href=\"#cosinemetric\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.metric.CosineMetric\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.metric.</code><code class=\"descname\">CosineMetric</code><a class=\"headerlink\" href=\"#dipy.segment.metric.CosineMetric\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.segment.metricspeed.CythonMetric</span></code></p>\n<p>Computes the cosine distance between two vectors.</p>\n<p>A vector (i.e. a N-dimensional point) is represented as a 2D array with\nshape (1, nb_dimensions).</p>\n<p class=\"rubric\">Notes</p>\n<p>The distance between two vectors <span class=\"math\">\\(v_1\\)</span> and <span class=\"math\">\\(v_2\\)</span> is equal to\n<span class=\"math\">\\(\\frac{1}{\\pi} \\arccos\\left(\\frac{v_1 \\cdot v_2}{\\|v_1\\| \\|v_2\\|}\\right)\\)</span>\nand is bounded within <span class=\"math\">\\([0,1]\\)</span>.</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">are_compatible</span></code></td>\n<td>Checks if features can be used by <cite>metric.dist</cite> based on their shape.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dist</span></code></td>\n<td>Computes a distance between two data points based on their features.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.metric.CosineMetric.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.CosineMetric.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"euclideanmetric\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.metric.EuclideanMetric\" title=\"dipy.segment.metric.EuclideanMetric\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">EuclideanMetric</span></code></a><a class=\"headerlink\" href=\"#euclideanmetric\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"attribute\">\n<dt id=\"dipy.segment.metric.EuclideanMetric\">\n<code class=\"descclassname\">dipy.segment.metric.</code><code class=\"descname\">EuclideanMetric</code><a class=\"headerlink\" href=\"#dipy.segment.metric.EuclideanMetric\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>alias of <a class=\"reference internal\" href=\"#dipy.segment.metric.SumPointwiseEuclideanMetric\" title=\"dipy.segment.metric.SumPointwiseEuclideanMetric\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">SumPointwiseEuclideanMetric</span></code></a></p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"feature\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.metric.Feature\" title=\"dipy.segment.metric.Feature\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Feature</span></code></a><a class=\"headerlink\" href=\"#feature\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.metric.Feature\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.metric.</code><code class=\"descname\">Feature</code><a class=\"headerlink\" href=\"#dipy.segment.metric.Feature\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Extracts features from a sequential datum.</p>\n<p>A sequence of N-dimensional points is represented as a 2D array with\nshape (nb_points, nb_dimensions).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>is_order_invariant</strong> : bool (optional)</p>\n<blockquote class=\"last\">\n<div><p>tells if this feature is invariant to the sequence&#8217;s ordering. This\nmeans starting from either extremities produces the same features.\n(Default: True)</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>When subclassing <cite>Feature</cite>, one only needs to override the <cite>extract</cite> and\n<cite>infer_shape</cite> methods.</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.Feature.extract\" title=\"dipy.segment.metric.Feature.extract\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">extract</span></code></a></td>\n<td>Extracts features from a sequential datum.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.Feature.infer_shape\" title=\"dipy.segment.metric.Feature.infer_shape\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">infer_shape</span></code></a></td>\n<td>Infers the shape of features extracted from a sequential datum.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.metric.Feature.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.Feature.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.metric.Feature.extract\">\n<code class=\"descname\">extract</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.Feature.extract\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Extracts features from a sequential datum.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>datum</strong> : 2D array</p>\n<blockquote>\n<div><p>Sequence of N-dimensional points.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>2D array</strong> :</p>\n<blockquote class=\"last\">\n<div><p>Features extracted from <cite>datum</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.metric.Feature.infer_shape\">\n<code class=\"descname\">infer_shape</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.Feature.infer_shape\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Infers the shape of features extracted from a sequential datum.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>datum</strong> : 2D array</p>\n<blockquote>\n<div><p>Sequence of N-dimensional points.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>int, 1-tuple or 2-tuple</strong> :</p>\n<blockquote class=\"last\">\n<div><p>Shape of the features.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.segment.metric.Feature.is_order_invariant\">\n<code class=\"descname\">is_order_invariant</code><a class=\"headerlink\" href=\"#dipy.segment.metric.Feature.is_order_invariant\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Is this feature invariant to the sequence&#8217;s ordering</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"identityfeature\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.metric.IdentityFeature\" title=\"dipy.segment.metric.IdentityFeature\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">IdentityFeature</span></code></a><a class=\"headerlink\" href=\"#identityfeature\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.metric.IdentityFeature\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.metric.</code><code class=\"descname\">IdentityFeature</code><a class=\"headerlink\" href=\"#dipy.segment.metric.IdentityFeature\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.segment.featurespeed.CythonFeature</span></code></p>\n<p>Extracts features from a sequential datum.</p>\n<p>A sequence of N-dimensional points is represented as a 2D array with\nshape (nb_points, nb_dimensions).</p>\n<p>The features being extracted are the actual sequence&#8217;s points. This is\nuseful for metric that does not require any pre-processing.</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">extract</span></code></td>\n<td>Extracts features from a sequential datum.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">infer_shape</span></code></td>\n<td>Infers the shape of features extracted from a sequential datum.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.metric.IdentityFeature.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.IdentityFeature.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id14\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.metric.Metric\" title=\"dipy.segment.metric.Metric\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Metric</span></code></a><a class=\"headerlink\" href=\"#id14\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.metric.Metric\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.metric.</code><code class=\"descname\">Metric</code><a class=\"headerlink\" href=\"#dipy.segment.metric.Metric\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Computes a distance between two sequential data.</p>\n<p>A sequence of N-dimensional points is represented as a 2D array with\nshape (nb_points, nb_dimensions). A <cite>feature</cite> object can be specified\nin order to calculate the distance between extracted features, rather\nthan directly between the sequential data.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>feature</strong> : <cite>Feature</cite> object, optional</p>\n<blockquote class=\"last\">\n<div><p>It is used to extract features before computing the distance.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>When subclassing <cite>Metric</cite>, one only needs to override the <cite>dist</cite> and\n<cite>are_compatible</cite> methods.</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.Metric.are_compatible\" title=\"dipy.segment.metric.Metric.are_compatible\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">are_compatible</span></code></a></td>\n<td>Checks if features can be used by <cite>metric.dist</cite> based on their shape.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.metric.Metric.dist\" title=\"dipy.segment.metric.Metric.dist\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dist</span></code></a></td>\n<td>Computes a distance between two data points based on their features.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.metric.Metric.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.Metric.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.metric.Metric.are_compatible\">\n<code class=\"descname\">are_compatible</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.Metric.are_compatible\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Checks if features can be used by <cite>metric.dist</cite> based on their shape.</p>\n<p>Basically this method exists so we don&#8217;t have to do this check\ninside the <cite>metric.dist</cite> function (speedup).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>shape1</strong> : int, 1-tuple or 2-tuple</p>\n<blockquote>\n<div><p>shape of the first data point&#8217;s features</p>\n</div></blockquote>\n<p><strong>shape2</strong> : int, 1-tuple or 2-tuple</p>\n<blockquote>\n<div><p>shape of the second data point&#8217;s features</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>are_compatible</strong> : bool</p>\n<blockquote class=\"last\">\n<div><p>whether or not shapes are compatible</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.metric.Metric.dist\">\n<code class=\"descname\">dist</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.Metric.dist\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes a distance between two data points based on their features.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>features1</strong> : 2D array</p>\n<blockquote>\n<div><p>Features of the first data point.</p>\n</div></blockquote>\n<p><strong>features2</strong> : 2D array</p>\n<blockquote>\n<div><p>Features of the second data point.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>double</strong> :</p>\n<blockquote class=\"last\">\n<div><p>Distance between two data points.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.segment.metric.Metric.feature\">\n<code class=\"descname\">feature</code><a class=\"headerlink\" href=\"#dipy.segment.metric.Metric.feature\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><cite>Feature</cite> object used to extract features from sequential data</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.segment.metric.Metric.is_order_invariant\">\n<code class=\"descname\">is_order_invariant</code><a class=\"headerlink\" href=\"#dipy.segment.metric.Metric.is_order_invariant\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Is this metric invariant to the sequence&#8217;s ordering</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"midpointfeature\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.metric.MidpointFeature\" title=\"dipy.segment.metric.MidpointFeature\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">MidpointFeature</span></code></a><a class=\"headerlink\" href=\"#midpointfeature\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.metric.MidpointFeature\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.metric.</code><code class=\"descname\">MidpointFeature</code><a class=\"headerlink\" href=\"#dipy.segment.metric.MidpointFeature\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.segment.featurespeed.CythonFeature</span></code></p>\n<p>Extracts features from a sequential datum.</p>\n<p>A sequence of N-dimensional points is represented as a 2D array with\nshape (nb_points, nb_dimensions).</p>\n<p>The feature being extracted consists of one N-dimensional point representing\nthe middle point of the sequence (i.e. <a href=\"#id15\"><span class=\"problematic\" id=\"id16\">`</span></a>nb_points//2`th point).</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">extract</span></code></td>\n<td>Extracts features from a sequential datum.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">infer_shape</span></code></td>\n<td>Infers the shape of features extracted from a sequential datum.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.metric.MidpointFeature.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.MidpointFeature.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"minimumaveragedirectflipmetric\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.metric.MinimumAverageDirectFlipMetric\" title=\"dipy.segment.metric.MinimumAverageDirectFlipMetric\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">MinimumAverageDirectFlipMetric</span></code></a><a class=\"headerlink\" href=\"#minimumaveragedirectflipmetric\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.metric.MinimumAverageDirectFlipMetric\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.metric.</code><code class=\"descname\">MinimumAverageDirectFlipMetric</code><a class=\"headerlink\" href=\"#dipy.segment.metric.MinimumAverageDirectFlipMetric\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.segment.metricspeed.AveragePointwiseEuclideanMetric</span></code></p>\n<p>Computes the MDF distance (minimum average direct-flip) between two\nsequential data.</p>\n<p>A sequence of N-dimensional points is represented as a 2D array with\nshape (nb_points, nb_dimensions).</p>\n<p class=\"rubric\">Notes</p>\n<p>The distance between two 2D sequential data:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">s1</span>       <span class=\"n\">s2</span>\n\n<span class=\"mi\">0</span><span class=\"o\">*</span>   <span class=\"n\">a</span>    <span class=\"o\">*</span><span class=\"mi\">0</span>\n  \\       <span class=\"o\">|</span>\n   \\      <span class=\"o\">|</span>\n   <span class=\"mi\">1</span><span class=\"o\">*</span>     <span class=\"o\">|</span>\n    <span class=\"o\">|</span>  <span class=\"n\">b</span>  <span class=\"o\">*</span><span class=\"mi\">1</span>\n    <span class=\"o\">|</span>      \\\n    <span class=\"mi\">2</span><span class=\"o\">*</span>      \\\n        <span class=\"n\">c</span>    <span class=\"o\">*</span><span class=\"mi\">2</span>\n</pre></div>\n</div>\n<p>is equal to <span class=\"math\">\\(\\min((a+b+c)/3, (a'+b'+c')/3)\\)</span> where <span class=\"math\">\\(a\\)</span> is the Euclidean distance\nbetween s1[0] and s2[0], <span class=\"math\">\\(b\\)</span> between s1[1] and s2[1], <span class=\"math\">\\(c\\)</span> between s1[2]\nand s2[2], <span class=\"math\">\\(a'\\)</span> between s1[0] and s2[2], <span class=\"math\">\\(b'\\)</span> between s1[1] and s2[1]\nand <span class=\"math\">\\(c'\\)</span> between s1[2] and s2[0].</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">are_compatible</span></code></td>\n<td>Checks if features can be used by <cite>metric.dist</cite> based on their shape.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dist</span></code></td>\n<td>Computes a distance between two data points based on their features.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.metric.MinimumAverageDirectFlipMetric.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.MinimumAverageDirectFlipMetric.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.segment.metric.MinimumAverageDirectFlipMetric.is_order_invariant\">\n<code class=\"descname\">is_order_invariant</code><a class=\"headerlink\" href=\"#dipy.segment.metric.MinimumAverageDirectFlipMetric.is_order_invariant\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Is this metric invariant to the sequence&#8217;s ordering</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id17\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.metric.ResampleFeature\" title=\"dipy.segment.metric.ResampleFeature\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ResampleFeature</span></code></a><a class=\"headerlink\" href=\"#id17\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.metric.ResampleFeature\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.metric.</code><code class=\"descname\">ResampleFeature</code><a class=\"headerlink\" href=\"#dipy.segment.metric.ResampleFeature\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.segment.featurespeed.CythonFeature</span></code></p>\n<p>Extracts features from a sequential datum.</p>\n<p>A sequence of N-dimensional points is represented as a 2D array with\nshape (nb_points, nb_dimensions).</p>\n<p>The features being extracted are the points of the sequence once resampled.\nThis is useful for metrics requiring a constant number of points for all</p>\n<blockquote>\n<div>streamlines.</div></blockquote>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">extract</span></code></td>\n<td>Extracts features from a sequential datum.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">infer_shape</span></code></td>\n<td>Infers the shape of features extracted from a sequential datum.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.metric.ResampleFeature.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.ResampleFeature.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sumpointwiseeuclideanmetric\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.metric.SumPointwiseEuclideanMetric\" title=\"dipy.segment.metric.SumPointwiseEuclideanMetric\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">SumPointwiseEuclideanMetric</span></code></a><a class=\"headerlink\" href=\"#sumpointwiseeuclideanmetric\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.metric.SumPointwiseEuclideanMetric\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.metric.</code><code class=\"descname\">SumPointwiseEuclideanMetric</code><a class=\"headerlink\" href=\"#dipy.segment.metric.SumPointwiseEuclideanMetric\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.segment.metricspeed.CythonMetric</span></code></p>\n<p>Computes the sum of pointwise Euclidean distances between two\nsequential data.</p>\n<p>A sequence of N-dimensional points is represented as a 2D array with\nshape (nb_points, nb_dimensions). A <cite>feature</cite> object can be specified\nin order to calculate the distance between the features, rather than\ndirectly between the sequential data.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>feature</strong> : <cite>Feature</cite> object, optional</p>\n<blockquote class=\"last\">\n<div><p>It is used to extract features before computing the distance.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The distance between two 2D sequential data:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">s1</span>       <span class=\"n\">s2</span>\n\n<span class=\"mi\">0</span><span class=\"o\">*</span>   <span class=\"n\">a</span>    <span class=\"o\">*</span><span class=\"mi\">0</span>\n  \\       <span class=\"o\">|</span>\n   \\      <span class=\"o\">|</span>\n   <span class=\"mi\">1</span><span class=\"o\">*</span>     <span class=\"o\">|</span>\n    <span class=\"o\">|</span>  <span class=\"n\">b</span>  <span class=\"o\">*</span><span class=\"mi\">1</span>\n    <span class=\"o\">|</span>      \\\n    <span class=\"mi\">2</span><span class=\"o\">*</span>      \\\n        <span class=\"n\">c</span>    <span class=\"o\">*</span><span class=\"mi\">2</span>\n</pre></div>\n</div>\n<p>is equal to <span class=\"math\">\\(a+b+c\\)</span> where <span class=\"math\">\\(a\\)</span> is the Euclidean distance between s1[0] and\ns2[0], <span class=\"math\">\\(b\\)</span> between s1[1] and s2[1] and <span class=\"math\">\\(c\\)</span> between s1[2] and s2[2].</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">are_compatible</span></code></td>\n<td>Checks if features can be used by <cite>metric.dist</cite> based on their shape.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dist</span></code></td>\n<td>Computes a distance between two data points based on their features.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.metric.SumPointwiseEuclideanMetric.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.SumPointwiseEuclideanMetric.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"vectorofendpointsfeature\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.metric.VectorOfEndpointsFeature\" title=\"dipy.segment.metric.VectorOfEndpointsFeature\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">VectorOfEndpointsFeature</span></code></a><a class=\"headerlink\" href=\"#vectorofendpointsfeature\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.metric.VectorOfEndpointsFeature\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.metric.</code><code class=\"descname\">VectorOfEndpointsFeature</code><a class=\"headerlink\" href=\"#dipy.segment.metric.VectorOfEndpointsFeature\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.segment.featurespeed.CythonFeature</span></code></p>\n<p>Extracts features from a sequential datum.</p>\n<p>A sequence of N-dimensional points is represented as a 2D array with\nshape (nb_points, nb_dimensions).</p>\n<p>The feature being extracted consists of one vector in the N-dimensional\nspace pointing from one end-point of the sequence to the other\n(i.e. <cite>S[-1]-S[0]</cite>).</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">extract</span></code></td>\n<td>Extracts features from a sequential datum.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">infer_shape</span></code></td>\n<td>Infers the shape of features extracted from a sequential datum.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.metric.VectorOfEndpointsFeature.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.VectorOfEndpointsFeature.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dist\">\n<h3>dist<a class=\"headerlink\" href=\"#dist\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.metric.dist\">\n<code class=\"descclassname\">dipy.segment.metric.</code><code class=\"descname\">dist</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.dist\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes a distance between <cite>datum1</cite> and <cite>datum2</cite>.</p>\n<p>A sequence of N-dimensional points is represented as a 2D array with\nshape (nb_points, nb_dimensions).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>metric</strong> : <cite>Metric</cite> object</p>\n<blockquote>\n<div><p>Tells how to compute the distance between <cite>datum1</cite> and <cite>datum2</cite>.</p>\n</div></blockquote>\n<p><strong>datum1</strong> : 2D array</p>\n<blockquote>\n<div><p>Sequence of N-dimensional points.</p>\n</div></blockquote>\n<p><strong>datum2</strong> : 2D array</p>\n<blockquote>\n<div><p>Sequence of N-dimensional points.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>double</strong> :</p>\n<blockquote class=\"last\">\n<div><p>Distance between two data points.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"distance-matrix\">\n<h3>distance_matrix<a class=\"headerlink\" href=\"#distance-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.metric.distance_matrix\">\n<code class=\"descclassname\">dipy.segment.metric.</code><code class=\"descname\">distance_matrix</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.distance_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes the distance matrix between two lists of sequential data.</p>\n<p>The distance matrix is obtained by computing the pairwise distance of all\ntuples spawn by the Cartesian product of <cite>data1</cite> with <cite>data2</cite>. If <cite>data2</cite>\nis not provided, the Cartesian product of <cite>data1</cite> with itself is used\ninstead. A sequence of N-dimensional points is represented as a 2D array with\nshape (nb_points, nb_dimensions).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>metric</strong> : <cite>Metric</cite> object</p>\n<blockquote>\n<div><p>Tells how to compute the distance between two sequential data.</p>\n</div></blockquote>\n<p><strong>data1</strong> : list of 2D arrays</p>\n<blockquote>\n<div><p>List of sequences of N-dimensional points.</p>\n</div></blockquote>\n<p><strong>data2</strong> : list of 2D arrays</p>\n<blockquote>\n<div><p>Llist of sequences of N-dimensional points.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>2D array (double)</strong> :</p>\n<blockquote class=\"last\">\n<div><p>Distance matrix.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mdf\">\n<h3>mdf<a class=\"headerlink\" href=\"#mdf\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.metric.mdf\">\n<code class=\"descclassname\">dipy.segment.metric.</code><code class=\"descname\">mdf</code><span class=\"sig-paren\">(</span><em>s1</em>, <em>s2</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.metric.mdf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes the MDF (Minimum average Direct-Flip) distance\n<a class=\"reference internal\" href=\"#id23\" id=\"id18\">[Garyfallidis12]</a> between two streamlines.</p>\n<p>Streamlines must have the same number of points.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>s1</strong> : 2D array</p>\n<blockquote>\n<div><p>A streamline (sequence of N-dimensional points).</p>\n</div></blockquote>\n<p><strong>s2</strong> : 2D array</p>\n<blockquote>\n<div><p>A streamline (sequence of N-dimensional points).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>double</strong> :</p>\n<blockquote class=\"last\">\n<div><p>Distance between two streamlines.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"id19\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Garyfallidis12]</td><td>Garyfallidis E. et al., QuickBundles a method for\ntractography simplification, Frontiers in Neuroscience,\nvol 6, no 175, 2012.</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id21\">\n<h3><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.QuickBundles\" title=\"dipy.segment.quickbundles.QuickBundles\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">QuickBundles</span></code></a><a class=\"headerlink\" href=\"#id21\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.segment.quickbundles.QuickBundles\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.segment.quickbundles.</code><code class=\"descname\">QuickBundles</code><span class=\"sig-paren\">(</span><em>tracks</em>, <em>dist_thr=4.0</em>, <em>pts=12</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.QuickBundles\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.QuickBundles.clusters\" title=\"dipy.segment.quickbundles.QuickBundles.clusters\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">clusters</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.QuickBundles.clusters_sizes\" title=\"dipy.segment.quickbundles.QuickBundles.clusters_sizes\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">clusters_sizes</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.QuickBundles.downsampled_tracks\" title=\"dipy.segment.quickbundles.QuickBundles.downsampled_tracks\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">downsampled_tracks</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.QuickBundles.exemplars\" title=\"dipy.segment.quickbundles.QuickBundles.exemplars\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">exemplars</span></code></a>([tracks])</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.QuickBundles.label2cluster\" title=\"dipy.segment.quickbundles.QuickBundles.label2cluster\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">label2cluster</span></code></a>(id)</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.QuickBundles.label2tracks\" title=\"dipy.segment.quickbundles.QuickBundles.label2tracks\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">label2tracks</span></code></a>(tracks,&nbsp;id)</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.QuickBundles.label2tracksids\" title=\"dipy.segment.quickbundles.QuickBundles.label2tracksids\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">label2tracksids</span></code></a>(id)</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.QuickBundles.partitions\" title=\"dipy.segment.quickbundles.QuickBundles.partitions\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">partitions</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.QuickBundles.points_per_track\" title=\"dipy.segment.quickbundles.QuickBundles.points_per_track\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">points_per_track</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.QuickBundles.remove_cluster\" title=\"dipy.segment.quickbundles.QuickBundles.remove_cluster\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">remove_cluster</span></code></a>(id)</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.QuickBundles.remove_clusters\" title=\"dipy.segment.quickbundles.QuickBundles.remove_clusters\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">remove_clusters</span></code></a>(list_ids)</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.QuickBundles.remove_small_clusters\" title=\"dipy.segment.quickbundles.QuickBundles.remove_small_clusters\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">remove_small_clusters</span></code></a>(size)</td>\n<td>Remove clusters with small size</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.QuickBundles.remove_tracks\" title=\"dipy.segment.quickbundles.QuickBundles.remove_tracks\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">remove_tracks</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.segment.quickbundles.QuickBundles.virtuals\" title=\"dipy.segment.quickbundles.QuickBundles.virtuals\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">virtuals</span></code></a>()</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.segment.quickbundles.QuickBundles.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>tracks</em>, <em>dist_thr=4.0</em>, <em>pts=12</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.QuickBundles.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Highly efficient trajectory clustering <a class=\"reference internal\" href=\"#id23\" id=\"id22\">[Garyfallidis12]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tracks</strong> : sequence of (N,3) ... (M,3) arrays</p>\n<blockquote>\n<div><p>trajectories (or tractography or streamlines)</p>\n</div></blockquote>\n<p><strong>dist_thr</strong> : float</p>\n<blockquote>\n<div><p>distance threshold in the space of the tracks</p>\n</div></blockquote>\n<p><strong>pts</strong> : int</p>\n<blockquote class=\"last\">\n<div><p>number of points for simplifying the tracks</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"id23\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Garyfallidis12]</td><td>Garyfallidis E. et al., QuickBundles a method for\ntractography simplification,\nFrontiers in Neuroscience, vol 6, no 175, 2012.</td></tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"86%\" />\n<col width=\"14%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td>clustering() returns a dict holding with the clustering result</td>\n<td>&nbsp;</td>\n</tr>\n<tr class=\"row-even\"><td>virtuals() gives the virtuals (track centroids) of the clusters</td>\n<td>&nbsp;</td>\n</tr>\n<tr class=\"row-odd\"><td>exemplars() gives the exemplars (track medoids) of the clusters</td>\n<td>&nbsp;</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.segment.quickbundles.QuickBundles.centroids\">\n<code class=\"descname\">centroids</code><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.QuickBundles.centroids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.quickbundles.QuickBundles.clusters\">\n<code class=\"descname\">clusters</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.QuickBundles.clusters\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.quickbundles.QuickBundles.clusters_sizes\">\n<code class=\"descname\">clusters_sizes</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.QuickBundles.clusters_sizes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.quickbundles.QuickBundles.downsampled_tracks\">\n<code class=\"descname\">downsampled_tracks</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.QuickBundles.downsampled_tracks\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.quickbundles.QuickBundles.exemplars\">\n<code class=\"descname\">exemplars</code><span class=\"sig-paren\">(</span><em>tracks=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.QuickBundles.exemplars\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.quickbundles.QuickBundles.label2cluster\">\n<code class=\"descname\">label2cluster</code><span class=\"sig-paren\">(</span><em>id</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.QuickBundles.label2cluster\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.quickbundles.QuickBundles.label2tracks\">\n<code class=\"descname\">label2tracks</code><span class=\"sig-paren\">(</span><em>tracks</em>, <em>id</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.QuickBundles.label2tracks\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.quickbundles.QuickBundles.label2tracksids\">\n<code class=\"descname\">label2tracksids</code><span class=\"sig-paren\">(</span><em>id</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.QuickBundles.label2tracksids\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.quickbundles.QuickBundles.partitions\">\n<code class=\"descname\">partitions</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.QuickBundles.partitions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.quickbundles.QuickBundles.points_per_track\">\n<code class=\"descname\">points_per_track</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.QuickBundles.points_per_track\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.quickbundles.QuickBundles.remove_cluster\">\n<code class=\"descname\">remove_cluster</code><span class=\"sig-paren\">(</span><em>id</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.QuickBundles.remove_cluster\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.quickbundles.QuickBundles.remove_clusters\">\n<code class=\"descname\">remove_clusters</code><span class=\"sig-paren\">(</span><em>list_ids</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.QuickBundles.remove_clusters\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.quickbundles.QuickBundles.remove_small_clusters\">\n<code class=\"descname\">remove_small_clusters</code><span class=\"sig-paren\">(</span><em>size</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.QuickBundles.remove_small_clusters\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Remove clusters with small size</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>size</strong> : int, threshold for minimum number of tracks allowed</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.quickbundles.QuickBundles.remove_tracks\">\n<code class=\"descname\">remove_tracks</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.QuickBundles.remove_tracks\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.segment.quickbundles.QuickBundles.total_clusters\">\n<code class=\"descname\">total_clusters</code><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.QuickBundles.total_clusters\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.segment.quickbundles.QuickBundles.virtuals\">\n<code class=\"descname\">virtuals</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.QuickBundles.virtuals\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"bundles-distances-mdf\">\n<h3>bundles_distances_mdf<a class=\"headerlink\" href=\"#bundles-distances-mdf\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.quickbundles.bundles_distances_mdf\">\n<code class=\"descclassname\">dipy.segment.quickbundles.</code><code class=\"descname\">bundles_distances_mdf</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.bundles_distances_mdf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculate distances between list of tracks A and list of tracks B</p>\n<p>All tracks need to have the same number of points</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tracksA</strong> : sequence</p>\n<blockquote>\n<div><p>of tracks as arrays, [(N,3) .. (N,3)]</p>\n</div></blockquote>\n<p><strong>tracksB</strong> : sequence</p>\n<blockquote>\n<div><p>of tracks as arrays, [(N,3) .. (N,3)]</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>DM</strong> : array, shape (len(tracksA), len(tracksB))</p>\n<blockquote class=\"last\">\n<div><p>distances between tracksA and tracksB according to metric</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dipy.metrics.downsample</span></code></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"downsample\">\n<h3>downsample<a class=\"headerlink\" href=\"#downsample\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.quickbundles.downsample\">\n<code class=\"descclassname\">dipy.segment.quickbundles.</code><code class=\"descname\">downsample</code><span class=\"sig-paren\">(</span><em>xyz</em>, <em>n_pols=3</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.downsample\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>downsample for a specific number of points along the curve/track</p>\n<p>Uses the length of the curve. It works in a similar fashion to\nmidpoint and arbitrarypoint but it also reduces the number of segments\nof a track.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>xyz</strong> : array-like shape (N,3)</p>\n<blockquote>\n<div><p>array representing x,y,z of N points in a track</p>\n</div></blockquote>\n<p><strong>n_pol</strong> : int</p>\n<blockquote>\n<div><p>integer representing number of points (poles) we need along the curve.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>xyz2</strong> : array shape (M,3)</p>\n<blockquote class=\"last\">\n<div><p>array representing x,y,z of M points that where extrapolated. M\nshould be equal to n_pols</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># a semi-circle</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">*</span><span class=\"n\">x</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">((</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyz2</span><span class=\"o\">=</span><span class=\"n\">downsample</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># a cosine</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"o\">*</span><span class=\"n\">y</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">((</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyz2</span><span class=\"o\">=</span><span class=\"n\">downsample</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">xyz2</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">xyz3</span><span class=\"o\">=</span><span class=\"n\">downsample</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">xyz3</span><span class=\"p\">)</span>\n<span class=\"go\">10</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"local-skeleton-clustering\">\n<h3>local_skeleton_clustering<a class=\"headerlink\" href=\"#local-skeleton-clustering\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.quickbundles.local_skeleton_clustering\">\n<code class=\"descclassname\">dipy.segment.quickbundles.</code><code class=\"descname\">local_skeleton_clustering</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.local_skeleton_clustering\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Efficient tractography clustering</p>\n<p>Every track can needs to have the same number of points.\nUse <cite>dipy.tracking.metrics.downsample</cite> to restrict the number of points</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>tracks</strong> : sequence</p>\n<blockquote>\n<div><p>of tracks as arrays, shape (N,3) .. (N,3) where N=points</p>\n</div></blockquote>\n<p><strong>d_thr</strong> : float</p>\n<blockquote>\n<div><p>average euclidean distance threshold</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>C</strong> : dict</p>\n<blockquote class=\"last\">\n<div><p>Clusters.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"../dipy.tracking/#dipy.tracking.metrics.downsample\" title=\"dipy.tracking.metrics.downsample\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dipy.tracking.metrics.downsample</span></code></a></p>\n</div>\n<p class=\"rubric\">Notes</p>\n<p>The distance calculated between two tracks:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">t_1</span>       <span class=\"n\">t_2</span>\n\n<span class=\"mi\">0</span><span class=\"o\">*</span>   <span class=\"n\">a</span>    <span class=\"o\">*</span><span class=\"mi\">0</span>\n  \\       <span class=\"o\">|</span>\n   \\      <span class=\"o\">|</span>\n   <span class=\"mi\">1</span><span class=\"o\">*</span>     <span class=\"o\">|</span>\n    <span class=\"o\">|</span>  <span class=\"n\">b</span>  <span class=\"o\">*</span><span class=\"mi\">1</span>\n    <span class=\"o\">|</span>      \\\n    <span class=\"mi\">2</span><span class=\"o\">*</span>      \\\n        <span class=\"n\">c</span>    <span class=\"o\">*</span><span class=\"mi\">2</span>\n</pre></div>\n</div>\n<p>is equal to <span class=\"math\">\\((a+b+c)/3\\)</span> where <span class=\"math\">\\(a\\)</span> the euclidean distance between <code class=\"docutils literal\"><span class=\"pre\">t_1[0]</span></code>\nand <code class=\"docutils literal\"><span class=\"pre\">t_2[0]</span></code>, <span class=\"math\">\\(b\\)</span> between <code class=\"docutils literal\"><span class=\"pre\">t_1[1]</span></code> and <code class=\"docutils literal\"><span class=\"pre\">t_2[1]</span></code> and <span class=\"math\">\\(c\\)</span> between\n<code class=\"docutils literal\"><span class=\"pre\">t_1[2]</span></code> and <code class=\"docutils literal\"><span class=\"pre\">t_2[2]</span></code>. Also the same with t2 flipped (so <code class=\"docutils literal\"><span class=\"pre\">t_1[0]</span></code>\ncompared to <code class=\"docutils literal\"><span class=\"pre\">t_2[2]</span></code> etc).</p>\n<p>Visualization:</p>\n<p>It is possible to visualize the clustering C from the example\nabove using the fvtk module:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"k\">import</span> <span class=\"n\">fvtk</span>\n<span class=\"n\">r</span><span class=\"o\">=</span><span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">ren</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">C</span><span class=\"p\">:</span>\n    <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">C</span><span class=\"p\">[</span><span class=\"n\">c</span><span class=\"p\">][</span><span class=\"s1\">&#39;indices&#39;</span><span class=\"p\">]:</span>\n        <span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">,</span><span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"n\">tracks</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span><span class=\"n\">color</span><span class=\"p\">))</span>\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">tracks</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,],[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]]),</span>\n<span class=\"gp\">... </span>        <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mf\">3.5</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]]),</span>\n<span class=\"gp\">... </span>        <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">3.2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mf\">3.7</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mf\">4.4</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]]),</span>\n<span class=\"gp\">... </span>        <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">3.4</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mf\">3.9</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mf\">4.6</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]]),</span>\n<span class=\"gp\">... </span>        <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mf\">0.2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mf\">0.2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mf\">0.2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]]),</span>\n<span class=\"gp\">... </span>        <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mf\">0.2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mf\">0.2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mf\">0.2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]]),</span>\n<span class=\"gp\">... </span>        <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]])]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">local_skeleton_clustering</span><span class=\"p\">(</span><span class=\"n\">tracks</span><span class=\"p\">,</span> <span class=\"n\">d_thr</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id25\">\n<h3>warn<a class=\"headerlink\" href=\"#id25\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.quickbundles.warn\">\n<code class=\"descclassname\">dipy.segment.quickbundles.</code><code class=\"descname\">warn</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.quickbundles.warn\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Issue a warning, or maybe ignore it or raise an exception.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id26\">\n<h3>otsu<a class=\"headerlink\" href=\"#id26\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.segment.threshold.otsu\">\n<code class=\"descclassname\">dipy.segment.threshold.</code><code class=\"descname\">otsu</code><span class=\"sig-paren\">(</span><em>image</em>, <em>nbins=256</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.segment.threshold.otsu\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return threshold value based on Otsu&#8217;s method.\nCopied from scikit-image to remove dependency.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>image</strong> : array</p>\n<blockquote>\n<div><p>Input image.</p>\n</div></blockquote>\n<p><strong>nbins</strong> : int</p>\n<blockquote>\n<div><p>Number of bins used to calculate histogram. This value is ignored for\ninteger arrays.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>threshold</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>Threshold value.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n</div>\n</div>\n", "alabaster_version": "0.7.7", "display_toc": true, "title": "<code class=\"docutils literal\"><span class=\"pre\">segment</span></code>", "sourcename": "reference/dipy.segment.txt", "customsidebar": null, "metatags": "", "current_page_name": "reference/dipy.segment", "next": null, "rellinks": [["genindex", "General Index", "I", "index"], ["np-modindex", "Python Module Index", "", "modules"]], "meta": {}, "parents": [{"link": "../../documentation/", "title": "Documentation"}, {"link": "../", "title": "API Reference"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\"><code class=\"docutils literal\"><span class=\"pre\">segment</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#module-dipy.segment.benchmarks\">Module: <code class=\"docutils literal\"><span class=\"pre\">segment.benchmarks</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.segment.benchmarks.bench_quickbundles\">Module: <code class=\"docutils literal\"><span class=\"pre\">segment.benchmarks.bench_quickbundles</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.segment.clustering\">Module: <code class=\"docutils literal\"><span class=\"pre\">segment.clustering</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.segment.mask\">Module: <code class=\"docutils literal\"><span class=\"pre\">segment.mask</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.segment.metric\">Module: <code class=\"docutils literal\"><span class=\"pre\">segment.metric</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.segment.quickbundles\">Module: <code class=\"docutils literal\"><span class=\"pre\">segment.quickbundles</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.segment.threshold\">Module: <code class=\"docutils literal\"><span class=\"pre\">segment.threshold</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#mdfpy\"><code class=\"docutils literal\"><span class=\"pre\">MDFpy</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#metric\"><code class=\"docutils literal\"><span class=\"pre\">Metric</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#qb-new\"><code class=\"docutils literal\"><span class=\"pre\">QB_New</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#qb-old\"><code class=\"docutils literal\"><span class=\"pre\">QB_Old</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#assert-array-equal\">assert_array_equal</a></li>\n<li><a class=\"reference internal\" href=\"#assert-arrays-equal\">assert_arrays_equal</a></li>\n<li><a class=\"reference internal\" href=\"#assert-equal\">assert_equal</a></li>\n<li><a class=\"reference internal\" href=\"#bench-quickbundles\">bench_quickbundles</a></li>\n<li><a class=\"reference internal\" href=\"#get-data\">get_data</a></li>\n<li><a class=\"reference internal\" href=\"#measure\">measure</a></li>\n<li><a class=\"reference internal\" href=\"#abcmeta\"><code class=\"docutils literal\"><span class=\"pre\">ABCMeta</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#averagepointwiseeuclideanmetric\"><code class=\"docutils literal\"><span class=\"pre\">AveragePointwiseEuclideanMetric</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#cluster\"><code class=\"docutils literal\"><span class=\"pre\">Cluster</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#clustercentroid\"><code class=\"docutils literal\"><span class=\"pre\">ClusterCentroid</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#clustermap\"><code class=\"docutils literal\"><span class=\"pre\">ClusterMap</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#clustermapcentroid\"><code class=\"docutils literal\"><span class=\"pre\">ClusterMapCentroid</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#clustering\"><code class=\"docutils literal\"><span class=\"pre\">Clustering</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#identity\"><code class=\"docutils literal\"><span class=\"pre\">Identity</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id3\"><code class=\"docutils literal\"><span class=\"pre\">Metric</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#quickbundles\"><code class=\"docutils literal\"><span class=\"pre\">QuickBundles</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#resamplefeature\"><code class=\"docutils literal\"><span class=\"pre\">ResampleFeature</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#abstractmethod\">abstractmethod</a></li>\n<li><a class=\"reference internal\" href=\"#applymask\">applymask</a></li>\n<li><a class=\"reference internal\" href=\"#binary-dilation\">binary_dilation</a></li>\n<li><a class=\"reference internal\" href=\"#bounding-box\">bounding_box</a></li>\n<li><a class=\"reference internal\" href=\"#clean-cc-mask\">clean_cc_mask</a></li>\n<li><a class=\"reference internal\" href=\"#color-fa\">color_fa</a></li>\n<li><a class=\"reference internal\" href=\"#crop\">crop</a></li>\n<li><a class=\"reference internal\" href=\"#fractional-anisotropy\">fractional_anisotropy</a></li>\n<li><a class=\"reference internal\" href=\"#generate-binary-structure\">generate_binary_structure</a></li>\n<li><a class=\"reference internal\" href=\"#median-filter\">median_filter</a></li>\n<li><a class=\"reference internal\" href=\"#median-otsu\">median_otsu</a></li>\n<li><a class=\"reference internal\" href=\"#multi-median\">multi_median</a></li>\n<li><a class=\"reference internal\" href=\"#otsu\">otsu</a></li>\n<li><a class=\"reference internal\" href=\"#segment-from-cfa\">segment_from_cfa</a></li>\n<li><a class=\"reference internal\" href=\"#warn\">warn</a></li>\n<li><a class=\"reference internal\" href=\"#arclengthfeature\"><code class=\"docutils literal\"><span class=\"pre\">ArcLengthFeature</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id13\"><code class=\"docutils literal\"><span class=\"pre\">AveragePointwiseEuclideanMetric</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#centerofmassfeature\"><code class=\"docutils literal\"><span class=\"pre\">CenterOfMassFeature</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#cosinemetric\"><code class=\"docutils literal\"><span class=\"pre\">CosineMetric</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#euclideanmetric\"><code class=\"docutils literal\"><span class=\"pre\">EuclideanMetric</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#feature\"><code class=\"docutils literal\"><span class=\"pre\">Feature</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#identityfeature\"><code class=\"docutils literal\"><span class=\"pre\">IdentityFeature</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id14\"><code class=\"docutils literal\"><span class=\"pre\">Metric</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#midpointfeature\"><code class=\"docutils literal\"><span class=\"pre\">MidpointFeature</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#minimumaveragedirectflipmetric\"><code class=\"docutils literal\"><span class=\"pre\">MinimumAverageDirectFlipMetric</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id17\"><code class=\"docutils literal\"><span class=\"pre\">ResampleFeature</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#sumpointwiseeuclideanmetric\"><code class=\"docutils literal\"><span class=\"pre\">SumPointwiseEuclideanMetric</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#vectorofendpointsfeature\"><code class=\"docutils literal\"><span class=\"pre\">VectorOfEndpointsFeature</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dist\">dist</a></li>\n<li><a class=\"reference internal\" href=\"#distance-matrix\">distance_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#mdf\">mdf</a></li>\n<li><a class=\"reference internal\" href=\"#id21\"><code class=\"docutils literal\"><span class=\"pre\">QuickBundles</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#bundles-distances-mdf\">bundles_distances_mdf</a></li>\n<li><a class=\"reference internal\" href=\"#downsample\">downsample</a></li>\n<li><a class=\"reference internal\" href=\"#local-skeleton-clustering\">local_skeleton_clustering</a></li>\n<li><a class=\"reference internal\" href=\"#id25\">warn</a></li>\n<li><a class=\"reference internal\" href=\"#id26\">otsu</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "prev": null, "page_source_suffix": ".rst"}