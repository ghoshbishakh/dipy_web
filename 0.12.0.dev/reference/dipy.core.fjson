{"body": "<div class=\"section\" id=\"module-dipy.core\">\n<span id=\"core\"></span><h1><code class=\"xref py py-mod docutils literal\"><span class=\"pre\">core</span></code><a class=\"headerlink\" href=\"#module-dipy.core\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Core objects</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.test\" title=\"dipy.core.test\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">test</span></code></a></td>\n<td>Run tests for module using nose.</td>\n</tr>\n</tbody>\n</table>\n<div class=\"section\" id=\"module-dipy.core.geometry\">\n<span id=\"module-core-geometry\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">core.geometry</span></code><a class=\"headerlink\" href=\"#module-dipy.core.geometry\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Utility functions for algebra etc</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.cart2sphere\" title=\"dipy.core.geometry.cart2sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cart2sphere</span></code></a>(x,&nbsp;y,&nbsp;z)</td>\n<td>Return angles for Cartesian 3D coordinates <cite>x</cite>, <cite>y</cite>, and <cite>z</cite></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.cart_distance\" title=\"dipy.core.geometry.cart_distance\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cart_distance</span></code></a>(pts1,&nbsp;pts2)</td>\n<td>Cartesian distance between <cite>pts1</cite> and <cite>pts2</cite></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.circumradius\" title=\"dipy.core.geometry.circumradius\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">circumradius</span></code></a>(a,&nbsp;b,&nbsp;c)</td>\n<td>a, b and c are 3-dimensional vectors which are the vertices of a</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.compose_matrix\" title=\"dipy.core.geometry.compose_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">compose_matrix</span></code></a>([scale,&nbsp;shear,&nbsp;angles,&nbsp;...])</td>\n<td>Return 4x4 transformation matrix from sequence of transformations.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.compose_transformations\" title=\"dipy.core.geometry.compose_transformations\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">compose_transformations</span></code></a>(*mats)</td>\n<td>Compose multiple 4x4 affine transformations in one 4x4 matrix</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.decompose_matrix\" title=\"dipy.core.geometry.decompose_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">decompose_matrix</span></code></a>(matrix)</td>\n<td>Return sequence of transformations from transformation matrix.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.dist_to_corner\" title=\"dipy.core.geometry.dist_to_corner\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dist_to_corner</span></code></a>(affine)</td>\n<td>Calculate the maximal distance from the center to a corner of a voxel,</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.euler_matrix\" title=\"dipy.core.geometry.euler_matrix\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">euler_matrix</span></code></a>(ai,&nbsp;aj,&nbsp;ak[,&nbsp;axes])</td>\n<td>Return homogeneous rotation matrix from Euler angles and axis sequence.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.lambert_equal_area_projection_cart\" title=\"dipy.core.geometry.lambert_equal_area_projection_cart\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">lambert_equal_area_projection_cart</span></code></a>(x,&nbsp;y,&nbsp;z)</td>\n<td>Lambert Equal Area Projection from cartesian vector to plane</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.lambert_equal_area_projection_polar\" title=\"dipy.core.geometry.lambert_equal_area_projection_polar\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">lambert_equal_area_projection_polar</span></code></a>(theta,&nbsp;phi)</td>\n<td>Lambert Equal Area Projection from polar sphere to plane</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.nearest_pos_semi_def\" title=\"dipy.core.geometry.nearest_pos_semi_def\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">nearest_pos_semi_def</span></code></a>(B)</td>\n<td>Least squares positive semi-definite tensor estimation</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.normalized_vector\" title=\"dipy.core.geometry.normalized_vector\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">normalized_vector</span></code></a>(vec[,&nbsp;axis])</td>\n<td>Return vector divided by its Euclidean (L2) norm</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.perpendicular_directions\" title=\"dipy.core.geometry.perpendicular_directions\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">perpendicular_directions</span></code></a>(v[,&nbsp;num,&nbsp;half])</td>\n<td>Computes n evenly spaced perpendicular directions relative to a given</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.rodrigues_axis_rotation\" title=\"dipy.core.geometry.rodrigues_axis_rotation\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">rodrigues_axis_rotation</span></code></a>(r,&nbsp;theta)</td>\n<td>Rodrigues formula</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.sph2latlon\" title=\"dipy.core.geometry.sph2latlon\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sph2latlon</span></code></a>(theta,&nbsp;phi)</td>\n<td>Convert spherical coordinates to latitude and longitude.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.sphere2cart\" title=\"dipy.core.geometry.sphere2cart\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sphere2cart</span></code></a>(r,&nbsp;theta,&nbsp;phi)</td>\n<td>Spherical to Cartesian coordinates</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.sphere_distance\" title=\"dipy.core.geometry.sphere_distance\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sphere_distance</span></code></a>(pts1,&nbsp;pts2[,&nbsp;radius,&nbsp;...])</td>\n<td>Distance across sphere surface between <cite>pts1</cite> and <cite>pts2</cite></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.vec2vec_rotmat\" title=\"dipy.core.geometry.vec2vec_rotmat\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vec2vec_rotmat</span></code></a>(u,&nbsp;v)</td>\n<td>rotation matrix from 2 unit vectors</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.vector_cosine\" title=\"dipy.core.geometry.vector_cosine\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vector_cosine</span></code></a>(vecs1,&nbsp;vecs2)</td>\n<td>Cosine of angle between two (sets of) vectors</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.geometry.vector_norm\" title=\"dipy.core.geometry.vector_norm\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vector_norm</span></code></a>(vec[,&nbsp;axis,&nbsp;keepdims])</td>\n<td>Return vector Euclidean (L2) norm</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.core.gradients\">\n<span id=\"module-core-gradients\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">core.gradients</span></code><a class=\"headerlink\" href=\"#module-dipy.core.gradients\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable\" title=\"dipy.core.gradients.GradientTable\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">GradientTable</span></code></a>(gradients[,&nbsp;big_delta,&nbsp;...])</td>\n<td>Diffusion gradient information</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.HemiSphere\" title=\"dipy.core.gradients.HemiSphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">HemiSphere</span></code></a>([x,&nbsp;y,&nbsp;z,&nbsp;theta,&nbsp;phi,&nbsp;xyz,&nbsp;...])</td>\n<td>Points on the unit sphere.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.auto_attr\" title=\"dipy.core.gradients.auto_attr\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">auto_attr</span></code></a>(func)</td>\n<td>Decorator to create OneTimeProperty attributes.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.disperse_charges\" title=\"dipy.core.gradients.disperse_charges\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">disperse_charges</span></code></a>(hemi,&nbsp;iters[,&nbsp;const])</td>\n<td>Models electrostatic repulsion on the unit sphere</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.generate_bvecs\" title=\"dipy.core.gradients.generate_bvecs\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">generate_bvecs</span></code></a>(N[,&nbsp;iters])</td>\n<td>Generates N bvectors.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.gradient_table\" title=\"dipy.core.gradients.gradient_table\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">gradient_table</span></code></a>(bvals[,&nbsp;bvecs,&nbsp;big_delta,&nbsp;...])</td>\n<td>A general function for creating diffusion MR gradients.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.gradient_table_from_bvals_bvecs\" title=\"dipy.core.gradients.gradient_table_from_bvals_bvecs\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">gradient_table_from_bvals_bvecs</span></code></a>(bvals,&nbsp;bvecs)</td>\n<td>Creates a GradientTable from a bvals array and a bvecs array</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.inv\" title=\"dipy.core.gradients.inv\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">inv</span></code></a>(a[,&nbsp;overwrite_a,&nbsp;check_finite])</td>\n<td>Compute the inverse of a matrix.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.polar\" title=\"dipy.core.gradients.polar\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">polar</span></code></a>(a[,&nbsp;side])</td>\n<td>Compute the polar decomposition.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.reorient_bvecs\" title=\"dipy.core.gradients.reorient_bvecs\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">reorient_bvecs</span></code></a>(gtab,&nbsp;affines)</td>\n<td>Reorient the directions in a GradientTable.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.vector_norm\" title=\"dipy.core.gradients.vector_norm\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vector_norm</span></code></a>(vec[,&nbsp;axis,&nbsp;keepdims])</td>\n<td>Return vector Euclidean (L2) norm</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.core.graph\">\n<span id=\"module-core-graph\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">core.graph</span></code><a class=\"headerlink\" href=\"#module-dipy.core.graph\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>A simple graph class</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.graph.Graph\" title=\"dipy.core.graph.Graph\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Graph</span></code></a>()</td>\n<td>A simple graph class</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.core.histeq\">\n<span id=\"module-core-histeq\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">core.histeq</span></code><a class=\"headerlink\" href=\"#module-dipy.core.histeq\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.histeq.histeq\" title=\"dipy.core.histeq.histeq\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">histeq</span></code></a>(arr[,&nbsp;num_bins])</td>\n<td>Performs an histogram equalization on <code class=\"docutils literal\"><span class=\"pre\">arr</span></code>.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.core.ndindex\">\n<span id=\"module-core-ndindex\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">core.ndindex</span></code><a class=\"headerlink\" href=\"#module-dipy.core.ndindex\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.ndindex.as_strided\" title=\"dipy.core.ndindex.as_strided\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">as_strided</span></code></a>(x[,&nbsp;shape,&nbsp;strides,&nbsp;subok])</td>\n<td>Make an ndarray from the given array with the given shape and strides.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.ndindex.ndindex\" title=\"dipy.core.ndindex.ndindex\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ndindex</span></code></a>(shape)</td>\n<td>An N-dimensional iterator object to index arrays.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.core.onetime\">\n<span id=\"module-core-onetime\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">core.onetime</span></code><a class=\"headerlink\" href=\"#module-dipy.core.onetime\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Descriptor support for NIPY.</p>\n<p>Copyright (c) 2006-2011, NIPY Developers\nAll rights reserved.</p>\n<p>Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:</p>\n<blockquote>\n<div><ul>\n<li><dl class=\"first docutils\">\n<dt>Redistributions of source code must retain the above copyright</dt>\n<dd><p class=\"first last\">notice, this list of conditions and the following disclaimer.</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"first docutils\">\n<dt>Redistributions in binary form must reproduce the above</dt>\n<dd><p class=\"first last\">copyright notice, this list of conditions and the following\ndisclaimer in the documentation and/or other materials provided\nwith the distribution.</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"first docutils\">\n<dt>Neither the name of the NIPY Developers nor the names of any</dt>\n<dd><p class=\"first last\">contributors may be used to endorse or promote products derived\nfrom this software without specific prior written permission.</p>\n</dd>\n</dl>\n</li>\n</ul>\n</div></blockquote>\n<p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n&#8220;AS IS&#8221; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n<p>Utilities to support special Python descriptors [1,2], in particular the use of\na useful pattern for properties we call &#8216;one time properties&#8217;.  These are\nobject attributes which are declared as properties, but become regular\nattributes once they&#8217;ve been read the first time.  They can thus be evaluated\nlater in the object&#8217;s life cycle, but once evaluated they become normal, static\nattributes with no function call overhead on access or any other constraints.</p>\n<p>A special ResetMixin class is provided to add a .reset() method to users who\nmay want to have their objects capable of resetting these computed properties\nto their &#8216;untriggered&#8217; state.</p>\n<div class=\"section\" id=\"references\">\n<h3>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>[1] How-To Guide for Descriptors, Raymond\nHettinger. <a class=\"reference external\" href=\"http://users.rcn.com/python/download/Descriptor.htm\">http://users.rcn.com/python/download/Descriptor.htm</a></p>\n<p>[2] Python data model, <a class=\"reference external\" href=\"http://docs.python.org/reference/datamodel.html\">http://docs.python.org/reference/datamodel.html</a></p>\n</div>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.onetime.OneTimeProperty\" title=\"dipy.core.onetime.OneTimeProperty\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">OneTimeProperty</span></code></a>(func)</td>\n<td>A descriptor to make special properties that become normal attributes.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.onetime.ResetMixin\" title=\"dipy.core.onetime.ResetMixin\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">ResetMixin</span></code></a></td>\n<td>A Mixin class to add a .reset() method to users of OneTimeProperty.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.onetime.auto_attr\" title=\"dipy.core.onetime.auto_attr\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">auto_attr</span></code></a>(func)</td>\n<td>Decorator to create OneTimeProperty attributes.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.onetime.setattr_on_read\" title=\"dipy.core.onetime.setattr_on_read\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">setattr_on_read</span></code></a>(func)</td>\n<td>Decorator to create OneTimeProperty attributes.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.core.optimize\">\n<span id=\"module-core-optimize\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">core.optimize</span></code><a class=\"headerlink\" href=\"#module-dipy.core.optimize\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>A unified interface for performing and debugging optimization problems.</p>\n<p>Only L-BFGS-B and Powell is supported in this class for versions of\nScipy &lt; 0.12. All optimizers are available for scipy &gt;= 0.12.</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.optimize.LooseVersion\" title=\"dipy.core.optimize.LooseVersion\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">LooseVersion</span></code></a>([vstring])</td>\n<td>Version numbering for anarchists and software realists.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.optimize.NonNegativeLeastSquares\" title=\"dipy.core.optimize.NonNegativeLeastSquares\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">NonNegativeLeastSquares</span></code></a>(*args,&nbsp;**kwargs)</td>\n<td>A sklearn-like interface to scipy.optimize.nnls</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.optimize.Optimizer\" title=\"dipy.core.optimize.Optimizer\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Optimizer</span></code></a>(fun,&nbsp;x0[,&nbsp;args,&nbsp;method,&nbsp;jac,&nbsp;...])</td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.optimize.SKLearnLinearSolver\" title=\"dipy.core.optimize.SKLearnLinearSolver\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">SKLearnLinearSolver</span></code></a>(*args,&nbsp;**kwargs)</td>\n<td>Provide a sklearn-like uniform interface to algorithms that solve problems</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.optimize.minimize\" title=\"dipy.core.optimize.minimize\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">minimize</span></code></a>(fun,&nbsp;x0[,&nbsp;args,&nbsp;method,&nbsp;jac,&nbsp;hess,&nbsp;...])</td>\n<td>Minimization of scalar function of one or more variables.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.optimize.sparse_nnls\" title=\"dipy.core.optimize.sparse_nnls\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sparse_nnls</span></code></a>(y,&nbsp;X[,&nbsp;momentum,&nbsp;step_size,&nbsp;...])</td>\n<td>Solve y=Xh for h, using gradient descent, with X a sparse matrix</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.optimize.spdot\" title=\"dipy.core.optimize.spdot\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">spdot</span></code></a>(A,&nbsp;B)</td>\n<td>The same as np.dot(A, B), except it works even if A or B or both are sparse matrices.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.optimize.with_metaclass\" title=\"dipy.core.optimize.with_metaclass\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">with_metaclass</span></code></a>(meta,&nbsp;*bases)</td>\n<td>Create a base class with a metaclass.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.core.profile\">\n<span id=\"module-core-profile\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">core.profile</span></code><a class=\"headerlink\" href=\"#module-dipy.core.profile\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Class for profiling cython code</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.profile.Profiler\" title=\"dipy.core.profile.Profiler\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Profiler</span></code></a>([call])</td>\n<td>Profile python/cython files or functions</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.profile.optional_package\" title=\"dipy.core.profile.optional_package\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">optional_package</span></code></a>(name[,&nbsp;trip_msg])</td>\n<td>Return package-like thing and module setup for package <cite>name</cite></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.core.rng\">\n<span id=\"module-core-rng\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">core.rng</span></code><a class=\"headerlink\" href=\"#module-dipy.core.rng\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Random number generation utilities</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.rng.LEcuyer\" title=\"dipy.core.rng.LEcuyer\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">LEcuyer</span></code></a>()</td>\n<td>Generate uniformly distributed random numbers using the 32-bit generator from figure 3 of:     L&#8217;Ecuyer, P.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.rng.WichmannHill1982\" title=\"dipy.core.rng.WichmannHill1982\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">WichmannHill1982</span></code></a>()</td>\n<td>Algorithm AS 183 Appl.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.rng.WichmannHill2006\" title=\"dipy.core.rng.WichmannHill2006\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">WichmannHill2006</span></code></a>()</td>\n<td>B.A.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.rng.architecture\" title=\"dipy.core.rng.architecture\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">architecture</span></code></a>([executable,&nbsp;bits,&nbsp;linkage])</td>\n<td>Queries the given executable (defaults to the Python interpreter binary) for various architecture information.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.rng.floor\" title=\"dipy.core.rng.floor\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">floor</span></code></a>(x)</td>\n<td>Return the floor of x as a float.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.core.sphere\">\n<span id=\"module-core-sphere\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">core.sphere</span></code><a class=\"headerlink\" href=\"#module-dipy.core.sphere\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.HemiSphere\" title=\"dipy.core.sphere.HemiSphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">HemiSphere</span></code></a>([x,&nbsp;y,&nbsp;z,&nbsp;theta,&nbsp;phi,&nbsp;xyz,&nbsp;...])</td>\n<td>Points on the unit sphere.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere\" title=\"dipy.core.sphere.Sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Sphere</span></code></a>([x,&nbsp;y,&nbsp;z,&nbsp;theta,&nbsp;phi,&nbsp;xyz,&nbsp;faces,&nbsp;edges])</td>\n<td>Points on the unit sphere.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.xrange\" title=\"dipy.core.sphere.xrange\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">xrange</span></code></a></td>\n<td>xrange(start, stop[, step]) -&gt; xrange object</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.auto_attr\" title=\"dipy.core.sphere.auto_attr\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">auto_attr</span></code></a>(func)</td>\n<td>Decorator to create OneTimeProperty attributes.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.cart2sphere\" title=\"dipy.core.sphere.cart2sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cart2sphere</span></code></a>(x,&nbsp;y,&nbsp;z)</td>\n<td>Return angles for Cartesian 3D coordinates <cite>x</cite>, <cite>y</cite>, and <cite>z</cite></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.disperse_charges\" title=\"dipy.core.sphere.disperse_charges\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">disperse_charges</span></code></a>(hemi,&nbsp;iters[,&nbsp;const])</td>\n<td>Models electrostatic repulsion on the unit sphere</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.euler_characteristic_check\" title=\"dipy.core.sphere.euler_characteristic_check\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">euler_characteristic_check</span></code></a>(sphere[,&nbsp;chi])</td>\n<td>Checks the euler characteristic of a sphere</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.faces_from_sphere_vertices\" title=\"dipy.core.sphere.faces_from_sphere_vertices\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">faces_from_sphere_vertices</span></code></a>(vertices)</td>\n<td>Triangulate a set of vertices on the sphere.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.interp_rbf\" title=\"dipy.core.sphere.interp_rbf\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">interp_rbf</span></code></a>(data,&nbsp;sphere_origin,&nbsp;sphere_target)</td>\n<td>Interpolate data on the sphere, using radial basis functions.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.remove_similar_vertices\" title=\"dipy.core.sphere.remove_similar_vertices\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">remove_similar_vertices</span></code></a></td>\n<td>Remove vertices that are less than <cite>theta</cite> degrees from any other</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.sphere2cart\" title=\"dipy.core.sphere.sphere2cart\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sphere2cart</span></code></a>(r,&nbsp;theta,&nbsp;phi)</td>\n<td>Spherical to Cartesian coordinates</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.unique_edges\" title=\"dipy.core.sphere.unique_edges\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">unique_edges</span></code></a>(faces[,&nbsp;return_mapping])</td>\n<td>Extract all unique edges from given triangular faces.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.unique_sets\" title=\"dipy.core.sphere.unique_sets\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">unique_sets</span></code></a>(sets[,&nbsp;return_inverse])</td>\n<td>Remove duplicate sets.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.vector_norm\" title=\"dipy.core.sphere.vector_norm\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vector_norm</span></code></a>(vec[,&nbsp;axis,&nbsp;keepdims])</td>\n<td>Return vector Euclidean (L2) norm</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.core.sphere_stats\">\n<span id=\"module-core-sphere-stats\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">core.sphere_stats</span></code><a class=\"headerlink\" href=\"#module-dipy.core.sphere_stats\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Statistics on spheres</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere_stats.permutations\" title=\"dipy.core.sphere_stats.permutations\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">permutations</span></code></a></td>\n<td>permutations(iterable[, r]) &#8211;&gt; permutations object</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere_stats.angular_similarity\" title=\"dipy.core.sphere_stats.angular_similarity\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">angular_similarity</span></code></a>(S,&nbsp;T)</td>\n<td>Computes the cosine distance of the best match between</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere_stats.compare_orientation_sets\" title=\"dipy.core.sphere_stats.compare_orientation_sets\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">compare_orientation_sets</span></code></a>(S,&nbsp;T)</td>\n<td>Computes the mean cosine distance of the best match between</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere_stats.eigenstats\" title=\"dipy.core.sphere_stats.eigenstats\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">eigenstats</span></code></a>(points[,&nbsp;alpha])</td>\n<td>Principal direction and confidence ellipse</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere_stats.random_uniform_on_sphere\" title=\"dipy.core.sphere_stats.random_uniform_on_sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">random_uniform_on_sphere</span></code></a>([n,&nbsp;coords])</td>\n<td>Random unit vectors from a uniform distribution on the sphere.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"module-dipy.core.subdivide_octahedron\">\n<span id=\"module-core-subdivide-octahedron\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">core.subdivide_octahedron</span></code><a class=\"headerlink\" href=\"#module-dipy.core.subdivide_octahedron\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Create a unit sphere by subdividing all triangles of an octahedron\nrecursively.</p>\n<p>The unit sphere has a radius of 1, which also means that all points in this\nsphere (assumed to have centre at [0, 0, 0]) have an absolute value (modulus)\nof 1. Another feature of the unit sphere is that the unit normals of this\nsphere are exactly the same as the vertices.</p>\n<p>This recursive method will avoid the common problem of the polar singularity,\nproduced by 2d (lon-lat) parameterization methods.</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.subdivide_octahedron.HemiSphere\" title=\"dipy.core.subdivide_octahedron.HemiSphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">HemiSphere</span></code></a>([x,&nbsp;y,&nbsp;z,&nbsp;theta,&nbsp;phi,&nbsp;xyz,&nbsp;...])</td>\n<td>Points on the unit sphere.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.subdivide_octahedron.create_unit_hemisphere\" title=\"dipy.core.subdivide_octahedron.create_unit_hemisphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">create_unit_hemisphere</span></code></a>([recursion_level])</td>\n<td>Creates a unit sphere by subdividing a unit octahedron, returns half the sphere.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.subdivide_octahedron.create_unit_sphere\" title=\"dipy.core.subdivide_octahedron.create_unit_sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">create_unit_sphere</span></code></a>([recursion_level])</td>\n<td>Creates a unit sphere by subdividing a unit octahedron.</td>\n</tr>\n</tbody>\n</table>\n<div class=\"section\" id=\"test\">\n<h3>test<a class=\"headerlink\" href=\"#test\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.test\">\n<code class=\"descclassname\">dipy.core.</code><code class=\"descname\">test</code><span class=\"sig-paren\">(</span><em>self</em>, <em>label='fast'</em>, <em>verbose=1</em>, <em>extra_argv=None</em>, <em>doctests=False</em>, <em>coverage=False</em>, <em>raise_warnings=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run tests for module using nose.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>label</strong> : {&#8216;fast&#8217;, &#8216;full&#8217;, &#8216;&#8217;, attribute identifier}, optional</p>\n<blockquote>\n<div><p>Identifies the tests to run. This can be a string to pass to\nthe nosetests executable with the &#8216;-A&#8217; option, or one of several\nspecial values.  Special values are:\n* &#8216;fast&#8217; - the default - which corresponds to the <code class=\"docutils literal\"><span class=\"pre\">nosetests</span> <span class=\"pre\">-A</span></code></p>\n<blockquote>\n<div><p>option of &#8216;not slow&#8217;.</p>\n</div></blockquote>\n<ul class=\"simple\">\n<li>&#8216;full&#8217; - fast (as above) and slow tests as in the\n&#8216;no -A&#8217; option to nosetests - this is the same as &#8216;&#8217;.</li>\n<li>None or &#8216;&#8217; - run all tests.</li>\n</ul>\n<p>attribute_identifier - string passed directly to nosetests as &#8216;-A&#8217;.</p>\n</div></blockquote>\n<p><strong>verbose</strong> : int, optional</p>\n<blockquote>\n<div><p>Verbosity value for test outputs, in the range 1-10. Default is 1.</p>\n</div></blockquote>\n<p><strong>extra_argv</strong> : list, optional</p>\n<blockquote>\n<div><p>List with any extra arguments to pass to nosetests.</p>\n</div></blockquote>\n<p><strong>doctests</strong> : bool, optional</p>\n<blockquote>\n<div><p>If True, run doctests in module. Default is False.</p>\n</div></blockquote>\n<p><strong>coverage</strong> : bool, optional</p>\n<blockquote>\n<div><p>If True, report coverage of NumPy code. Default is False.\n(This requires the <a href=\"#id1\"><span class=\"problematic\" id=\"id2\">`</span></a>coverage module:</p>\n<blockquote>\n<div><p>&lt;<a class=\"reference external\" href=\"http://nedbatchelder.com/code/modules/coverage.html\">http://nedbatchelder.com/code/modules/coverage.html</a>&gt;`_).</p>\n</div></blockquote>\n</div></blockquote>\n<p><strong>raise_warnings</strong> : str or sequence of warnings, optional</p>\n<blockquote>\n<div><p>This specifies which warnings to configure as &#8216;raise&#8217; instead\nof &#8216;warn&#8217; during the test execution.  Valid strings are:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>&#8220;develop&#8221; : equals <code class=\"docutils literal\"><span class=\"pre\">(DeprecationWarning,</span> <span class=\"pre\">RuntimeWarning)</span></code></li>\n<li>&#8220;release&#8221; : equals <code class=\"docutils literal\"><span class=\"pre\">()</span></code>, don&#8217;t raise on any warnings.</li>\n</ul>\n</div></blockquote>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>result</strong> : object</p>\n<blockquote class=\"last\">\n<div><p>Returns the result of running the tests as a\n<code class=\"docutils literal\"><span class=\"pre\">nose.result.TextTestResult</span></code> object.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>Each NumPy module exposes <cite>test</cite> in its namespace to run all tests for it.\nFor example, to run all tests for numpy.lib:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">()</span> \n</pre></div>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">()</span> \n<span class=\"go\">Running unit tests for numpy.lib</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">Ran 976 tests in 3.933s</span>\n</pre></div>\n</div>\n<p>OK</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">errors</span> \n<span class=\"go\">[]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">knownfail</span> \n<span class=\"go\">[]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"cart2sphere\">\n<h3>cart2sphere<a class=\"headerlink\" href=\"#cart2sphere\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.cart2sphere\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">cart2sphere</code><span class=\"sig-paren\">(</span><em>x</em>, <em>y</em>, <em>z</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.cart2sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return angles for Cartesian 3D coordinates <cite>x</cite>, <cite>y</cite>, and <cite>z</cite></p>\n<p>See doc for <code class=\"docutils literal\"><span class=\"pre\">sphere2cart</span></code> for angle conventions and derivation\nof the formulae.</p>\n<p><span class=\"math\">\\(0\\le\\theta\\mathrm{(theta)}\\le\\pi\\)</span> and <span class=\"math\">\\(-\\pi\\le\\phi\\mathrm{(phi)}\\le\\pi\\)</span></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x</strong> : array_like</p>\n<blockquote>\n<div><p>x coordinate in Cartesian space</p>\n</div></blockquote>\n<p><strong>y</strong> : array_like</p>\n<blockquote>\n<div><p>y coordinate in Cartesian space</p>\n</div></blockquote>\n<p><strong>z</strong> : array_like</p>\n<blockquote>\n<div><p>z coordinate</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>r</strong> : array</p>\n<blockquote>\n<div><p>radius</p>\n</div></blockquote>\n<p><strong>theta</strong> : array</p>\n<blockquote>\n<div><p>inclination (polar) angle</p>\n</div></blockquote>\n<p><strong>phi</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>azimuth angle</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"cart-distance\">\n<h3>cart_distance<a class=\"headerlink\" href=\"#cart-distance\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.cart_distance\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">cart_distance</code><span class=\"sig-paren\">(</span><em>pts1</em>, <em>pts2</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.cart_distance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Cartesian distance between <cite>pts1</cite> and <cite>pts2</cite></p>\n<p>If either of <cite>pts1</cite> or <cite>pts2</cite> is 2D, then we take the first\ndimension to index points, and the second indexes coordinate.  More\ngenerally, we take the last dimension to be the coordinate\ndimension.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>pts1</strong> : (N,R) or (R,) array_like</p>\n<blockquote>\n<div><p>where N is the number of points and R is the number of\ncoordinates defining a point (<code class=\"docutils literal\"><span class=\"pre\">R==3</span></code> for 3D)</p>\n</div></blockquote>\n<p><strong>pts2</strong> : (N,R) or (R,) array_like</p>\n<blockquote>\n<div><p>where N is the number of points and R is the number of\ncoordinates defining a point (<code class=\"docutils literal\"><span class=\"pre\">R==3</span></code> for 3D).  It should be\npossible to broadcast <cite>pts1</cite> against <cite>pts2</cite></p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>d</strong> : (N,) or (0,) array</p>\n<blockquote class=\"last\">\n<div><p>Cartesian distances between corresponding points in <cite>pts1</cite> and\n<cite>pts2</cite></p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><a class=\"reference internal\" href=\"#dipy.core.geometry.sphere_distance\" title=\"dipy.core.geometry.sphere_distance\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">sphere_distance</span></code></a></dt>\n<dd>distance between points on sphere surface</dd>\n</dl>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cart_distance</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"go\">3.0</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"circumradius\">\n<h3>circumradius<a class=\"headerlink\" href=\"#circumradius\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.circumradius\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">circumradius</code><span class=\"sig-paren\">(</span><em>a</em>, <em>b</em>, <em>c</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.circumradius\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>a, b and c are 3-dimensional vectors which are the vertices of a\ntriangle. The function returns the circumradius of the triangle, i.e\nthe radius of the smallest circle that can contain the triangle. In\nthe degenerate case when the 3 points are collinear it returns\nhalf the distance between the furthest apart points.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>a, b, c</strong> : (3,) array_like</p>\n<blockquote>\n<div><p>the three vertices of the triangle</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>circumradius</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>the desired circumradius</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"compose-matrix\">\n<h3>compose_matrix<a class=\"headerlink\" href=\"#compose-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.compose_matrix\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">compose_matrix</code><span class=\"sig-paren\">(</span><em>scale=None</em>, <em>shear=None</em>, <em>angles=None</em>, <em>translate=None</em>, <em>perspective=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.compose_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return 4x4 transformation matrix from sequence of\ntransformations.</p>\n<p>Code modified from the work of Christoph Gohlke link provided here\n<a class=\"reference external\" href=\"http://www.lfd.uci.edu/~gohlke/code/transformations.py.html\">http://www.lfd.uci.edu/~gohlke/code/transformations.py.html</a></p>\n<p>This is the inverse of the <code class=\"docutils literal\"><span class=\"pre\">decompose_matrix</span></code> function.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>scale</strong> : (3,) array_like</p>\n<blockquote>\n<div><p>Scaling factors.</p>\n</div></blockquote>\n<p><strong>shear</strong> : array_like</p>\n<blockquote>\n<div><p>Shear factors for x-y, x-z, y-z axes.</p>\n</div></blockquote>\n<p><strong>angles</strong> : array_like</p>\n<blockquote>\n<div><p>Euler angles about static x, y, z axes.</p>\n</div></blockquote>\n<p><strong>translate</strong> : array_like</p>\n<blockquote>\n<div><p>Translation vector along x, y, z axes.</p>\n</div></blockquote>\n<p><strong>perspective</strong> : array_like</p>\n<blockquote>\n<div><p>Perspective partition of matrix.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>matrix</strong> : 4x4 array</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">dipy.core.geometry</span> <span class=\"k\">as</span> <span class=\"nn\">gm</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">scale</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">shear</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">angles</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">trans</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">persp</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">M0</span> <span class=\"o\">=</span> <span class=\"n\">gm</span><span class=\"o\">.</span><span class=\"n\">compose_matrix</span><span class=\"p\">(</span><span class=\"n\">scale</span><span class=\"p\">,</span> <span class=\"n\">shear</span><span class=\"p\">,</span> <span class=\"n\">angles</span><span class=\"p\">,</span> <span class=\"n\">trans</span><span class=\"p\">,</span> <span class=\"n\">persp</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"compose-transformations\">\n<h3>compose_transformations<a class=\"headerlink\" href=\"#compose-transformations\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.compose_transformations\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">compose_transformations</code><span class=\"sig-paren\">(</span><em>*mats</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.compose_transformations\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compose multiple 4x4 affine transformations in one 4x4 matrix</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>mat1</strong> : array, (4, 4)</p>\n<p><strong>mat2</strong> : array, (4, 4)</p>\n<p><strong>...</strong> :</p>\n<p><strong>matN</strong> : array, (4, 4)</p>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>matN x ... x mat2 x mat1</strong> : array, (4, 4)</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"decompose-matrix\">\n<h3>decompose_matrix<a class=\"headerlink\" href=\"#decompose-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.decompose_matrix\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">decompose_matrix</code><span class=\"sig-paren\">(</span><em>matrix</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.decompose_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return sequence of transformations from transformation matrix.</p>\n<p>Code modified from the excellent work of Christoph Gohlke link provided\nhere: <a class=\"reference external\" href=\"http://www.lfd.uci.edu/~gohlke/code/transformations.py.html\">http://www.lfd.uci.edu/~gohlke/code/transformations.py.html</a></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>matrix</strong> : array_like</p>\n<blockquote>\n<div><p>Non-degenerative homogeneous transformation matrix</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>scale</strong> : (3,) ndarray</p>\n<blockquote>\n<div><p>Three scaling factors.</p>\n</div></blockquote>\n<p><strong>shear</strong> : (3,) ndarray</p>\n<blockquote>\n<div><p>Shear factors for x-y, x-z, y-z axes.</p>\n</div></blockquote>\n<p><strong>angles</strong> : (3,) ndarray</p>\n<blockquote>\n<div><p>Euler angles about static x, y, z axes.</p>\n</div></blockquote>\n<p><strong>translate</strong> : (3,) ndarray</p>\n<blockquote>\n<div><p>Translation vector along x, y, z axes.</p>\n</div></blockquote>\n<p><strong>perspective</strong> : ndarray</p>\n<blockquote>\n<div><p>Perspective partition of matrix.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Raises:</th><td class=\"field-body\"><p class=\"first\"><strong>ValueError</strong> :</p>\n<blockquote class=\"last\">\n<div><p>If matrix is of wrong type or degenerative.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T0</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">scale</span><span class=\"p\">,</span> <span class=\"n\">shear</span><span class=\"p\">,</span> <span class=\"n\">angles</span><span class=\"p\">,</span> <span class=\"n\">trans</span><span class=\"p\">,</span> <span class=\"n\">persp</span> <span class=\"o\">=</span> <span class=\"n\">decompose_matrix</span><span class=\"p\">(</span><span class=\"n\">T0</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dist-to-corner\">\n<h3>dist_to_corner<a class=\"headerlink\" href=\"#dist-to-corner\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.dist_to_corner\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">dist_to_corner</code><span class=\"sig-paren\">(</span><em>affine</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.dist_to_corner\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Calculate the maximal distance from the center to a corner of a voxel,\ngiven an affine</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>affine</strong> : 4 by 4 array.</p>\n<blockquote>\n<div><p>The spatial transformation from the measurement to the scanner space.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>dist: float</strong> :</p>\n<blockquote class=\"last\">\n<div><p>The maximal distance to the corner of a voxel, given voxel size encoded\nin the affine.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"euler-matrix\">\n<h3>euler_matrix<a class=\"headerlink\" href=\"#euler-matrix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.euler_matrix\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">euler_matrix</code><span class=\"sig-paren\">(</span><em>ai</em>, <em>aj</em>, <em>ak</em>, <em>axes='sxyz'</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.euler_matrix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return homogeneous rotation matrix from Euler angles and axis sequence.</p>\n<p>Code modified from the work of Christoph Gohlke link provided here\n<a class=\"reference external\" href=\"http://www.lfd.uci.edu/~gohlke/code/transformations.py.html\">http://www.lfd.uci.edu/~gohlke/code/transformations.py.html</a></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>ai, aj, ak</strong> : Euler&#8217;s roll, pitch and yaw angles</p>\n<p><strong>axes</strong> : One of 24 axis sequences as string or encoded tuple</p>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>matrix</strong> : ndarray (4, 4)</p>\n<p><strong>Code modified from the work of Christoph Gohlke link provided here</strong> :</p>\n<p class=\"last\"><strong>http://www.lfd.uci.edu/~gohlke/code/transformations.py.html</strong> :</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">R</span> <span class=\"o\">=</span> <span class=\"n\">euler_matrix</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">&#39;syxz&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">allclose</span><span class=\"p\">(</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"o\">-</span><span class=\"mf\">1.34786452</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">R</span> <span class=\"o\">=</span> <span class=\"n\">euler_matrix</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">allclose</span><span class=\"p\">(</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"o\">-</span><span class=\"mf\">0.383436184</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ai</span><span class=\"p\">,</span> <span class=\"n\">aj</span><span class=\"p\">,</span> <span class=\"n\">ak</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">4.0</span><span class=\"o\">*</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">axes</span> <span class=\"ow\">in</span> <span class=\"n\">_AXES2TUPLE</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n<span class=\"gp\">... </span>   <span class=\"n\">R</span> <span class=\"o\">=</span> <span class=\"n\">euler_matrix</span><span class=\"p\">(</span><span class=\"n\">ai</span><span class=\"p\">,</span> <span class=\"n\">aj</span><span class=\"p\">,</span> <span class=\"n\">ak</span><span class=\"p\">,</span> <span class=\"n\">axes</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">axes</span> <span class=\"ow\">in</span> <span class=\"n\">_TUPLE2AXES</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n<span class=\"gp\">... </span>   <span class=\"n\">R</span> <span class=\"o\">=</span> <span class=\"n\">euler_matrix</span><span class=\"p\">(</span><span class=\"n\">ai</span><span class=\"p\">,</span> <span class=\"n\">aj</span><span class=\"p\">,</span> <span class=\"n\">ak</span><span class=\"p\">,</span> <span class=\"n\">axes</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"lambert-equal-area-projection-cart\">\n<h3>lambert_equal_area_projection_cart<a class=\"headerlink\" href=\"#lambert-equal-area-projection-cart\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.lambert_equal_area_projection_cart\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">lambert_equal_area_projection_cart</code><span class=\"sig-paren\">(</span><em>x</em>, <em>y</em>, <em>z</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.lambert_equal_area_projection_cart\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Lambert Equal Area Projection from cartesian vector to plane</p>\n<p>Return positions in <span class=\"math\">\\((y_1,y_2)\\)</span> plane corresponding to the\ndirections of the vectors with cartesian coordinates xyz under the\nLambert Equal Area Projection mapping (see Mardia and Jupp (2000),\nDirectional Statistics, p. 161).</p>\n<p>The Lambert EAP maps the upper hemisphere to the planar disc of radius 1\nand the lower hemisphere to the planar annulus between radii 1 and 2,\nThe Lambert EAP maps the upper hemisphere to the planar disc of radius 1\nand the lower hemisphere to the planar annulus between radii 1 and 2.\nand <em>vice versa</em>.</p>\n<p>See doc for <code class=\"docutils literal\"><span class=\"pre\">sphere2cart</span></code> for angle conventions</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x</strong> : array_like</p>\n<blockquote>\n<div><p>x coordinate in Cartesion space</p>\n</div></blockquote>\n<p><strong>y</strong> : array_like</p>\n<blockquote>\n<div><p>y coordinate in Cartesian space</p>\n</div></blockquote>\n<p><strong>z</strong> : array_like</p>\n<blockquote>\n<div><p>z coordinate</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>y</strong> : (N,2) array</p>\n<blockquote class=\"last\">\n<div><p>planar coordinates of points following mapping by Lambert&#8217;s EAP.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"lambert-equal-area-projection-polar\">\n<h3>lambert_equal_area_projection_polar<a class=\"headerlink\" href=\"#lambert-equal-area-projection-polar\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.lambert_equal_area_projection_polar\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">lambert_equal_area_projection_polar</code><span class=\"sig-paren\">(</span><em>theta</em>, <em>phi</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.lambert_equal_area_projection_polar\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Lambert Equal Area Projection from polar sphere to plane</p>\n<p>Return positions in (y1,y2) plane corresponding to the points\nwith polar coordinates (theta, phi) on the unit sphere, under the\nLambert Equal Area Projection mapping (see Mardia and Jupp (2000),\nDirectional Statistics, p. 161).</p>\n<p>See doc for <code class=\"docutils literal\"><span class=\"pre\">sphere2cart</span></code> for angle conventions</p>\n<ul class=\"simple\">\n<li><span class=\"math\">\\(0 \\le \\theta \\le \\pi\\)</span> and <span class=\"math\">\\(0 \\le \\phi \\le 2 \\pi\\)</span></li>\n<li><span class=\"math\">\\(|(y_1,y_2)| \\le 2\\)</span></li>\n</ul>\n<p>The Lambert EAP maps the upper hemisphere to the planar disc of radius 1\nand the lower hemisphere to the planar annulus between radii 1 and 2,\nand <em>vice versa</em>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>theta</strong> : array_like</p>\n<blockquote>\n<div><p>theta spherical coordinates</p>\n</div></blockquote>\n<p><strong>phi</strong> : array_like</p>\n<blockquote>\n<div><p>phi spherical coordinates</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>y</strong> : (N,2) array</p>\n<blockquote class=\"last\">\n<div><p>planar coordinates of points following mapping by Lambert&#8217;s EAP.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"nearest-pos-semi-def\">\n<h3>nearest_pos_semi_def<a class=\"headerlink\" href=\"#nearest-pos-semi-def\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.nearest_pos_semi_def\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">nearest_pos_semi_def</code><span class=\"sig-paren\">(</span><em>B</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.nearest_pos_semi_def\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Least squares positive semi-definite tensor estimation</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>B</strong> : (3,3) array_like</p>\n<blockquote>\n<div><p>B matrix - symmetric. We do not check the symmetry.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>npds</strong> : (3,3) array</p>\n<blockquote class=\"last\">\n<div><p>Estimated nearest positive semi-definite array to matrix <cite>B</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r14\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id3\">[R14]</a></td><td>Niethammer M, San Jose Estepar R, Bouix S, Shenton M, Westin CF.\nOn diffusion tensor estimation. Conf Proc IEEE Eng Med Biol Soc.\n2006;1:2622-5. PubMed PMID: 17946125; PubMed Central PMCID:\nPMC2791793.</td></tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">diag</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nearest_pos_semi_def</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">)</span>\n<span class=\"go\">array([[ 0.75,  0.  ,  0.  ],</span>\n<span class=\"go\">       [ 0.  ,  0.75,  0.  ],</span>\n<span class=\"go\">       [ 0.  ,  0.  ,  0.  ]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"normalized-vector\">\n<h3>normalized_vector<a class=\"headerlink\" href=\"#normalized-vector\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.normalized_vector\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">normalized_vector</code><span class=\"sig-paren\">(</span><em>vec</em>, <em>axis=-1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.normalized_vector\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return vector divided by its Euclidean (L2) norm</p>\n<p>See <a class=\"reference internal\" href=\"../../glossary/#term-unit-vector\"><span class=\"xref std std-term\">unit vector</span></a> and <a class=\"reference internal\" href=\"../../glossary/#term-euclidean-norm\"><span class=\"xref std std-term\">Euclidean norm</span></a></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>vec</strong> : array_like shape (3,)</p>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>nvec</strong> : array shape (3,)</p>\n<blockquote class=\"last\">\n<div><p>vector divided by L2 norm</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vec</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">l2n</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">,</span> <span class=\"n\">vec</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nvec</span> <span class=\"o\">=</span> <span class=\"n\">normalized_vector</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">allclose</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">l2n</span><span class=\"p\">,</span> <span class=\"n\">nvec</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vec</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vec</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">normalized_vector</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"perpendicular-directions\">\n<h3>perpendicular_directions<a class=\"headerlink\" href=\"#perpendicular-directions\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.perpendicular_directions\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">perpendicular_directions</code><span class=\"sig-paren\">(</span><em>v</em>, <em>num=30</em>, <em>half=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.perpendicular_directions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes n evenly spaced perpendicular directions relative to a given\nvector v</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>v</strong> : array (3,)</p>\n<blockquote>\n<div><p>Array containing the three cartesian coordinates of vector v</p>\n</div></blockquote>\n<p><strong>num</strong> : int, optional</p>\n<blockquote>\n<div><p>Number of perpendicular directions to generate</p>\n</div></blockquote>\n<p><strong>half</strong> : bool, optional</p>\n<blockquote>\n<div><p>If half is True, perpendicular directions are sampled on half of the\nunit circumference perpendicular to v, otherwive perpendicular\ndirections are sampled on the full circumference. Default of half is\nFalse</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>psamples</strong> : array (n, 3)</p>\n<blockquote class=\"last\">\n<div><p>array of vectors perpendicular to v</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>Perpendicular directions are estimated using the following two step\nprocedure:</p>\n<blockquote>\n<div><p>1) the perpendicular directions are first sampled in a unit\ncircumference parallel to the plane normal to the x-axis.</p>\n<p>2) Samples are then rotated and aligned to the plane normal to vector\nv. The rotational matrix for this rotation is constructed as reference\nframe basis which axis are the following:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>The first axis is vector v</li>\n<li>The second axis is defined as the normalized vector given by the</li>\n</ul>\n<p>cross product between vector v and the unit vector aligned to the\nx-axis\n- The third axis is defined as the cross product between the\nprevious computed vector and vector v.</p>\n</div></blockquote>\n</div></blockquote>\n<p>Following this two steps, coordinates of the final perpendicular directions\nare given as:</p>\n<div class=\"math\">\n\\[\\left [ -\\sin(a_{i}) \\sqrt{{v_{y}}^{2}+{v_{z}}^{2}}\n\\; , \\;\n\\frac{v_{x}v_{y}\\sin(a_{i})-v_{z}\\cos(a_{i})}\n{\\sqrt{{v_{y}}^{2}+{v_{z}}^{2}}}\n\\; , \\;\n\\frac{v_{x}v_{z}\\sin(a_{i})-v_{y}\\cos(a_{i})}\n{\\sqrt{{v_{y}}^{2}+{v_{z}}^{2}}} \\right  ]\\]</div>\n<p>This procedure has a singularity when vector v is aligned to the x-axis. To\nsolve this singularity, perpendicular directions in procedure&#8217;s step 1 are\ndefined in the plane normal to y-axis and the second axis of the rotated\nframe of reference is computed as the normalized vector given by the cross\nproduct between vector v and the unit vector aligned to the y-axis.\nFollowing this, the coordinates of the perpendicular directions are given\nas:</p>\n<blockquote>\n<div>left [ -frac{left (v_{x}v_{y}sin(a_{i})+v_{z}cos(a_{i}) right )}\n{sqrt{{v_{x}}^{2}+{v_{z}}^{2}}}\n; , ;\nsin(a_{i}) sqrt{{v_{x}}^{2}+{v_{z}}^{2}}\n; , ;\nfrac{v_{y}v_{z}sin(a_{i})+v_{x}cos(a_{i})}\n{sqrt{{v_{x}}^{2}+{v_{z}}^{2}}} right  ]</div></blockquote>\n<p>For more details on this calculation, see ` here &lt;<a class=\"reference external\" href=\"http://gsoc2015dipydki.blogspot.it/2015/07/rnh-post-8-computing-perpendicular.html\">http://gsoc2015dipydki.blogspot.it/2015/07/rnh-post-8-computing-perpendicular.html</a>&gt;`_.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"rodrigues-axis-rotation\">\n<h3>rodrigues_axis_rotation<a class=\"headerlink\" href=\"#rodrigues-axis-rotation\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.rodrigues_axis_rotation\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">rodrigues_axis_rotation</code><span class=\"sig-paren\">(</span><em>r</em>, <em>theta</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.rodrigues_axis_rotation\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Rodrigues formula</p>\n<p>Rotation matrix for rotation around axis r for angle theta.</p>\n<p>The rotation matrix is given by the Rodrigues formula:</p>\n<p>R = Id + sin(theta)*Sn + (1-cos(theta))*Sn^2</p>\n<p>with:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span>       <span class=\"mi\">0</span>  <span class=\"o\">-</span><span class=\"n\">nz</span>  <span class=\"n\">ny</span>\n<span class=\"n\">Sn</span> <span class=\"o\">=</span>   <span class=\"n\">nz</span>   <span class=\"mi\">0</span> <span class=\"o\">-</span><span class=\"n\">nx</span>\n      <span class=\"o\">-</span><span class=\"n\">ny</span>  <span class=\"n\">nx</span>   <span class=\"mi\">0</span>\n</pre></div>\n</div>\n<p>where n = r / ||r||</p>\n<p>In case the angle ||r|| is very small, the above formula may lead\nto numerical instabilities. We instead use a Taylor expansion\naround theta=0:</p>\n<p>R = I + sin(theta)/tetha Sr + (1-cos(theta))/teta2 Sr^2</p>\n<p>leading to:</p>\n<p>R = I + (1-theta2/6)*Sr + (1/2-theta2/24)*Sr^2</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>r</strong> :  array_like shape (3,), axis</p>\n<p><strong>theta</strong> : float, angle in degrees</p>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>R</strong> : array, shape (3,3), rotation matrix</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.geometry</span> <span class=\"k\">import</span> <span class=\"n\">rodrigues_axis_rotation</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">R</span><span class=\"o\">=</span><span class=\"n\">rodrigues_axis_rotation</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span><span class=\"mi\">40</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ur</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">,</span><span class=\"n\">u</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">round</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">rad2deg</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arccos</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">ur</span><span class=\"p\">,</span><span class=\"n\">u</span><span class=\"p\">))))</span>\n<span class=\"go\">40.0</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sph2latlon\">\n<h3>sph2latlon<a class=\"headerlink\" href=\"#sph2latlon\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.sph2latlon\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">sph2latlon</code><span class=\"sig-paren\">(</span><em>theta</em>, <em>phi</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.sph2latlon\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Convert spherical coordinates to latitude and longitude.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>lat, lon</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>Latitude and longitude.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sphere2cart\">\n<h3>sphere2cart<a class=\"headerlink\" href=\"#sphere2cart\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.sphere2cart\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">sphere2cart</code><span class=\"sig-paren\">(</span><em>r</em>, <em>theta</em>, <em>phi</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.sphere2cart\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Spherical to Cartesian coordinates</p>\n<p>This is the standard physics convention where <cite>theta</cite> is the\ninclination (polar) angle, and <cite>phi</cite> is the azimuth angle.</p>\n<p>Imagine a sphere with center (0,0,0).  Orient it with the z axis\nrunning south-north, the y axis running west-east and the x axis\nfrom posterior to anterior.  <cite>theta</cite> (the inclination angle) is the\nangle to rotate from the z-axis (the zenith) around the y-axis,\ntowards the x axis.  Thus the rotation is counter-clockwise from the\npoint of view of positive y.  <cite>phi</cite> (azimuth) gives the angle of\nrotation around the z-axis towards the y axis.  The rotation is\ncounter-clockwise from the point of view of positive z.</p>\n<p>Equivalently, given a point P on the sphere, with coordinates x, y,\nz, <cite>theta</cite> is the angle between P and the z-axis, and <cite>phi</cite> is\nthe angle between the projection of P onto the XY plane, and the X\naxis.</p>\n<p>Geographical nomenclature designates theta as &#8216;co-latitude&#8217;, and phi\nas &#8216;longitude&#8217;</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>r</strong> : array_like</p>\n<blockquote>\n<div><p>radius</p>\n</div></blockquote>\n<p><strong>theta</strong> : array_like</p>\n<blockquote>\n<div><p>inclination or polar angle</p>\n</div></blockquote>\n<p><strong>phi</strong> : array_like</p>\n<blockquote>\n<div><p>azimuth angle</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>x</strong> : array</p>\n<blockquote>\n<div><p>x coordinate(s) in Cartesion space</p>\n</div></blockquote>\n<p><strong>y</strong> : array</p>\n<blockquote>\n<div><p>y coordinate(s) in Cartesian space</p>\n</div></blockquote>\n<p><strong>z</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>z coordinate</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>See these pages:</p>\n<ul class=\"simple\">\n<li><a class=\"reference external\" href=\"http://en.wikipedia.org/wiki/Spherical_coordinate_system\">http://en.wikipedia.org/wiki/Spherical_coordinate_system</a></li>\n<li><a class=\"reference external\" href=\"http://mathworld.wolfram.com/SphericalCoordinates.html\">http://mathworld.wolfram.com/SphericalCoordinates.html</a></li>\n</ul>\n<p>for excellent discussion of the many different conventions\npossible.  Here we use the physics conventions, used in the\nwikipedia page.</p>\n<p>Derivations of the formulae are simple. Consider a vector x, y, z of\nlength r (norm of x, y, z).  The inclination angle (theta) can be\nfound from: cos(theta) == z / r -&gt; z == r * cos(theta).  This gives\nthe hypotenuse of the projection onto the XY plane, which we will\ncall Q. Q == r*sin(theta). Now x / Q == cos(phi) -&gt; x == r *\nsin(theta) * cos(phi) and so on.</p>\n<p>We have deliberately named this function <code class=\"docutils literal\"><span class=\"pre\">sphere2cart</span></code> rather than\n<code class=\"docutils literal\"><span class=\"pre\">sph2cart</span></code> to distinguish it from the Matlab function of that\nname, because the Matlab function uses an unusual convention for the\nangles that we did not want to replicate.  The Matlab function is\ntrivial to implement with the formulae given in the Matlab help.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sphere-distance\">\n<h3>sphere_distance<a class=\"headerlink\" href=\"#sphere-distance\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.sphere_distance\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">sphere_distance</code><span class=\"sig-paren\">(</span><em>pts1</em>, <em>pts2</em>, <em>radius=None</em>, <em>check_radius=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.sphere_distance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Distance across sphere surface between <cite>pts1</cite> and <cite>pts2</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>pts1</strong> : (N,R) or (R,) array_like</p>\n<blockquote>\n<div><p>where N is the number of points and R is the number of\ncoordinates defining a point (<code class=\"docutils literal\"><span class=\"pre\">R==3</span></code> for 3D)</p>\n</div></blockquote>\n<p><strong>pts2</strong> : (N,R) or (R,) array_like</p>\n<blockquote>\n<div><p>where N is the number of points and R is the number of\ncoordinates defining a point (<code class=\"docutils literal\"><span class=\"pre\">R==3</span></code> for 3D).  It should be\npossible to broadcast <cite>pts1</cite> against <cite>pts2</cite></p>\n</div></blockquote>\n<p><strong>radius</strong> : None or float, optional</p>\n<blockquote>\n<div><p>Radius of sphere.  Default is to work out radius from mean of the\nlength of each point vector</p>\n</div></blockquote>\n<p><strong>check_radius</strong> : bool, optional</p>\n<blockquote>\n<div><p>If True, check if the points are on the sphere surface - i.e\ncheck if the vector lengths in <cite>pts1</cite> and <cite>pts2</cite> are close to\n<cite>radius</cite>.  Default is True.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>d</strong> : (N,) or (0,) array</p>\n<blockquote class=\"last\">\n<div><p>Distances between corresponding points in <cite>pts1</cite> and <cite>pts2</cite>\nacross the spherical surface, i.e. the great circle distance</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><a class=\"reference internal\" href=\"#dipy.core.geometry.cart_distance\" title=\"dipy.core.geometry.cart_distance\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cart_distance</span></code></a></dt>\n<dd>cartesian distance between points</dd>\n<dt><a class=\"reference internal\" href=\"#dipy.core.geometry.vector_cosine\" title=\"dipy.core.geometry.vector_cosine\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vector_cosine</span></code></a></dt>\n<dd>cosine of angle between vectors</dd>\n</dl>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"si\">%.4f</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">sphere_distance</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n<span class=\"go\">1.5708</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"si\">%.4f</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">sphere_distance</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n<span class=\"go\">4.7124</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"vec2vec-rotmat\">\n<h3>vec2vec_rotmat<a class=\"headerlink\" href=\"#vec2vec-rotmat\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.vec2vec_rotmat\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">vec2vec_rotmat</code><span class=\"sig-paren\">(</span><em>u</em>, <em>v</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.vec2vec_rotmat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>rotation matrix from 2 unit vectors</p>\n<p>u, v being unit 3d vectors return a 3x3 rotation matrix R than aligns u to\nv.</p>\n<p>In general there are many rotations that will map u to v. If S is any\nrotation using v as an axis then R.S will also map u to v since (S.R)u =\nS(Ru) = Sv = v.  The rotation R returned by vec2vec_rotmat leaves fixed the\nperpendicular to the plane spanned by u and v.</p>\n<p>The transpose of R will align v to u.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>u</strong> : array, shape(3,)</p>\n<p><strong>v</strong> : array, shape(3,)</p>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>R</strong> : array, shape(3,3)</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.geometry</span> <span class=\"k\">import</span> <span class=\"n\">vec2vec_rotmat</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">R</span><span class=\"o\">=</span><span class=\"n\">vec2vec_rotmat</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">,</span><span class=\"n\">v</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">,</span><span class=\"n\">u</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 0.,  1.,  0.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"n\">v</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 1.,  0.,  0.])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"vector-cosine\">\n<h3>vector_cosine<a class=\"headerlink\" href=\"#vector-cosine\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.vector_cosine\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">vector_cosine</code><span class=\"sig-paren\">(</span><em>vecs1</em>, <em>vecs2</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.vector_cosine\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Cosine of angle between two (sets of) vectors</p>\n<p>The cosine of the angle between two vectors <code class=\"docutils literal\"><span class=\"pre\">v1</span></code> and <code class=\"docutils literal\"><span class=\"pre\">v2</span></code> is\ngiven by the inner product of <code class=\"docutils literal\"><span class=\"pre\">v1</span></code> and <code class=\"docutils literal\"><span class=\"pre\">v2</span></code> divided by the\nproduct of the vector lengths:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">v_cos</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">inner</span><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"p\">,</span> <span class=\"n\">v2</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">))</span> <span class=\"o\">*</span>\n                            <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">v2</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">)))</span>\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>vecs1</strong> : (N, R) or (R,) array_like</p>\n<blockquote>\n<div><p>N vectors (as rows) or single vector.  Vectors have R elements.</p>\n</div></blockquote>\n<p><strong>vecs1</strong> : (N, R) or (R,) array_like</p>\n<blockquote>\n<div><p>N vectors (as rows) or single vector.  Vectors have R elements.\nIt should be possible to broadcast <cite>vecs1</cite> against <cite>vecs2</cite></p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>vcos</strong> : (N,) or (0,) array</p>\n<blockquote class=\"last\">\n<div><p>Vector cosines.  To get the angles you will need <code class=\"docutils literal\"><span class=\"pre\">np.arccos</span></code></p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The vector cosine will be the same as the correlation only if all\nthe input vectors have zero mean.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"vector-norm\">\n<h3>vector_norm<a class=\"headerlink\" href=\"#vector-norm\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.geometry.vector_norm\">\n<code class=\"descclassname\">dipy.core.geometry.</code><code class=\"descname\">vector_norm</code><span class=\"sig-paren\">(</span><em>vec</em>, <em>axis=-1</em>, <em>keepdims=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.geometry.vector_norm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return vector Euclidean (L2) norm</p>\n<p>See <a class=\"reference internal\" href=\"../../glossary/#term-unit-vector\"><span class=\"xref std std-term\">unit vector</span></a> and <a class=\"reference internal\" href=\"../../glossary/#term-euclidean-norm\"><span class=\"xref std std-term\">Euclidean norm</span></a></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>vec</strong> : array_like</p>\n<blockquote>\n<div><p>Vectors to norm.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis over which to norm. By default norm over last axis. If <cite>axis</cite> is\nNone, <cite>vec</cite> is flattened then normed.</p>\n</div></blockquote>\n<p><strong>keepdims</strong> : bool</p>\n<blockquote>\n<div><p>If True, the output will have the same number of dimensions as <cite>vec</cite>,\nwith shape 1 on <cite>axis</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>norm</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Euclidean norms of vectors.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vec</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">36</span><span class=\"p\">,</span> <span class=\"mi\">77</span><span class=\"p\">]]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector_norm</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 17.,  85.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector_norm</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">,</span> <span class=\"n\">keepdims</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"go\">array([[ 17.],</span>\n<span class=\"go\">       [ 85.]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector_norm</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">array([  8.,  39.,  77.])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"gradienttable\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable\" title=\"dipy.core.gradients.GradientTable\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">GradientTable</span></code></a><a class=\"headerlink\" href=\"#gradienttable\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.core.gradients.GradientTable\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.core.gradients.</code><code class=\"descname\">GradientTable</code><span class=\"sig-paren\">(</span><em>gradients</em>, <em>big_delta=None</em>, <em>small_delta=None</em>, <em>b0_threshold=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.GradientTable\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Diffusion gradient information</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gradients</strong> : array_like (N, 3)</p>\n<blockquote>\n<div><p>N diffusion gradients</p>\n</div></blockquote>\n<p><strong>b0_threshold</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>Gradients with b-value less than or equal to <cite>b0_threshold</cite> are\nconsidered as b0s i.e. without diffusion weighting.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"#dipy.core.gradients.gradient_table\" title=\"dipy.core.gradients.gradient_table\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">gradient_table</span></code></a></p>\n</div>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable.bvals\" title=\"dipy.core.gradients.GradientTable.bvals\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bvals</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable.bvecs\" title=\"dipy.core.gradients.GradientTable.bvecs\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bvecs</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable.b0s_mask\" title=\"dipy.core.gradients.GradientTable.b0s_mask\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">b0s_mask</span></code></a>()</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"20%\" />\n<col width=\"14%\" />\n<col width=\"66%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td>gradients</td>\n<td>(N,3) ndarray</td>\n<td>diffusion gradients</td>\n</tr>\n<tr class=\"row-even\"><td>qvals: (N,) ndarray</td>\n<td>&nbsp;</td>\n<td>The q-value for each gradient direction. Needs big and small\ndelta.</td>\n</tr>\n<tr class=\"row-odd\"><td>b0_threshold</td>\n<td>float</td>\n<td>Gradients with b-value less than or equal to <cite>b0_threshold</cite> are\nconsidered to not have diffusion weighting.</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable.b0s_mask\" title=\"dipy.core.gradients.GradientTable.b0s_mask\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">b0s_mask</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable.bvals\" title=\"dipy.core.gradients.GradientTable.bvals\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bvals</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable.bvecs\" title=\"dipy.core.gradients.GradientTable.bvecs\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bvecs</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable.qvals\" title=\"dipy.core.gradients.GradientTable.qvals\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">qvals</span></code></a>()</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.core.gradients.GradientTable.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>gradients</em>, <em>big_delta=None</em>, <em>small_delta=None</em>, <em>b0_threshold=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.GradientTable.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructor for GradientTable class</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.gradients.GradientTable.b0s_mask\">\n<code class=\"descname\">b0s_mask</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.GradientTable.b0s_mask\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.gradients.GradientTable.bvals\">\n<code class=\"descname\">bvals</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.GradientTable.bvals\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.gradients.GradientTable.bvecs\">\n<code class=\"descname\">bvecs</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.GradientTable.bvecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.core.gradients.GradientTable.info\">\n<code class=\"descname\">info</code><a class=\"headerlink\" href=\"#dipy.core.gradients.GradientTable.info\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.gradients.GradientTable.qvals\">\n<code class=\"descname\">qvals</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.GradientTable.qvals\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"hemisphere\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.gradients.HemiSphere\" title=\"dipy.core.gradients.HemiSphere\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">HemiSphere</span></code></a><a class=\"headerlink\" href=\"#hemisphere\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.core.gradients.HemiSphere\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.core.gradients.</code><code class=\"descname\">HemiSphere</code><span class=\"sig-paren\">(</span><em>x=None</em>, <em>y=None</em>, <em>z=None</em>, <em>theta=None</em>, <em>phi=None</em>, <em>xyz=None</em>, <em>faces=None</em>, <em>edges=None</em>, <em>tol=1e-05</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.HemiSphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere\" title=\"dipy.core.sphere.Sphere\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.core.sphere.Sphere</span></code></a></p>\n<p>Points on the unit sphere.</p>\n<p>A HemiSphere is similar to a Sphere but it takes antipodal symmetry into\naccount. Antipodal symmetry means that point v on a HemiSphere is the same\nas the point -v. Duplicate points are discarded when constructing a\nHemiSphere (including antipodal duplicates). <cite>edges</cite> and <cite>faces</cite> are\nremapped to the remaining points as closely as possible.</p>\n<p>The HemiSphere can be constructed using one of three conventions:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n<span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">phi</span><span class=\"o\">=</span><span class=\"n\">phi</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x, y, z</strong> : 1-D array_like</p>\n<blockquote>\n<div><p>Vertices as x-y-z coordinates.</p>\n</div></blockquote>\n<p><strong>theta, phi</strong> : 1-D array_like</p>\n<blockquote>\n<div><p>Vertices as spherical coordinates.  Theta and phi are the inclination\nand azimuth angles respectively.</p>\n</div></blockquote>\n<p><strong>xyz</strong> : (N, 3) ndarray</p>\n<blockquote>\n<div><p>Vertices as x-y-z coordinates.</p>\n</div></blockquote>\n<p><strong>faces</strong> : (N, 3) ndarray</p>\n<blockquote>\n<div><p>Indices into vertices that form triangular faces.  If unspecified,\nthe faces are computed using a Delaunay triangulation.</p>\n</div></blockquote>\n<p><strong>edges</strong> : (N, 2) ndarray</p>\n<blockquote>\n<div><p>Edges between vertices.  If unspecified, the edges are\nderived from the faces.</p>\n</div></blockquote>\n<p><strong>tol</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>Angle in degrees. Vertices that are less than tol degrees apart are\ntreated as duplicates.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Sphere</span></code></p>\n</div>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">edges</span></code>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.HemiSphere.faces\" title=\"dipy.core.gradients.HemiSphere.faces\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">faces</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.HemiSphere.find_closest\" title=\"dipy.core.gradients.HemiSphere.find_closest\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">find_closest</span></code></a>(xyz)</td>\n<td>Find the index of the vertex in the Sphere closest to the input vector,</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.HemiSphere.from_sphere\" title=\"dipy.core.gradients.HemiSphere.from_sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">from_sphere</span></code></a>(klass,&nbsp;sphere[,&nbsp;tol])</td>\n<td>Create instance from a Sphere</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.HemiSphere.mirror\" title=\"dipy.core.gradients.HemiSphere.mirror\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mirror</span></code></a>()</td>\n<td>Create a full Sphere from a HemiSphere</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.gradients.HemiSphere.subdivide\" title=\"dipy.core.gradients.HemiSphere.subdivide\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">subdivide</span></code></a>([n])</td>\n<td>Create a more subdivided HemiSphere</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vertices</span></code>()</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.core.gradients.HemiSphere.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>x=None</em>, <em>y=None</em>, <em>z=None</em>, <em>theta=None</em>, <em>phi=None</em>, <em>xyz=None</em>, <em>faces=None</em>, <em>edges=None</em>, <em>tol=1e-05</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.HemiSphere.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a HemiSphere from points</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.gradients.HemiSphere.faces\">\n<code class=\"descname\">faces</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.HemiSphere.faces\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.gradients.HemiSphere.find_closest\">\n<code class=\"descname\">find_closest</code><span class=\"sig-paren\">(</span><em>xyz</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.HemiSphere.find_closest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Find the index of the vertex in the Sphere closest to the input vector,\ntaking into account antipodal symmetry</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>xyz</strong> : array-like, 3 elements</p>\n<blockquote class=\"last\">\n<div><p>A unit vector</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"dipy.core.gradients.HemiSphere.from_sphere\">\n<em class=\"property\">classmethod </em><code class=\"descname\">from_sphere</code><span class=\"sig-paren\">(</span><em>klass</em>, <em>sphere</em>, <em>tol=1e-05</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.HemiSphere.from_sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create instance from a Sphere</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.gradients.HemiSphere.mirror\">\n<code class=\"descname\">mirror</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.HemiSphere.mirror\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a full Sphere from a HemiSphere</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.gradients.HemiSphere.subdivide\">\n<code class=\"descname\">subdivide</code><span class=\"sig-paren\">(</span><em>n=1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.HemiSphere.subdivide\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a more subdivided HemiSphere</p>\n<p>See Sphere.subdivide for full documentation.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"auto-attr\">\n<h3>auto_attr<a class=\"headerlink\" href=\"#auto-attr\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.gradients.auto_attr\">\n<code class=\"descclassname\">dipy.core.gradients.</code><code class=\"descname\">auto_attr</code><span class=\"sig-paren\">(</span><em>func</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.auto_attr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Decorator to create OneTimeProperty attributes.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>func</strong> : method</p>\n<blockquote class=\"last\">\n<div><p>The method that will be called the first time to compute a value.\nAfterwards, the method&#8217;s name will be a standard attribute holding the\nvalue of this computation.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">MagicProp</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nd\">@auto_attr</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"k\">return</span> <span class=\"mi\">99</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">MagicProp</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">&#39;a&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">__dict__</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">a</span>\n<span class=\"go\">99</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">&#39;a&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">__dict__</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"disperse-charges\">\n<h3>disperse_charges<a class=\"headerlink\" href=\"#disperse-charges\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.gradients.disperse_charges\">\n<code class=\"descclassname\">dipy.core.gradients.</code><code class=\"descname\">disperse_charges</code><span class=\"sig-paren\">(</span><em>hemi</em>, <em>iters</em>, <em>const=0.2</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.disperse_charges\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Models electrostatic repulsion on the unit sphere</p>\n<p>Places charges on a sphere and simulates the repulsive forces felt by each\none. Allows the charges to move for some number of iterations and returns\ntheir final location as well as the total potential of the system at each\nstep.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>hemi</strong> : HemiSphere</p>\n<blockquote>\n<div><p>Points on a unit sphere.</p>\n</div></blockquote>\n<p><strong>iters</strong> : int</p>\n<blockquote>\n<div><p>Number of iterations to run.</p>\n</div></blockquote>\n<p><strong>const</strong> : float</p>\n<blockquote>\n<div><p>Using a smaller const could provide a more accurate result, but will\nneed more iterations to converge.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>hemi</strong> : HemiSphere</p>\n<blockquote>\n<div><p>Distributed points on a unit sphere.</p>\n</div></blockquote>\n<p><strong>potential</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The electrostatic potential at each iteration. This can be useful to\ncheck if the repulsion converged to a minimum.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"generate-bvecs\">\n<h3>generate_bvecs<a class=\"headerlink\" href=\"#generate-bvecs\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.gradients.generate_bvecs\">\n<code class=\"descclassname\">dipy.core.gradients.</code><code class=\"descname\">generate_bvecs</code><span class=\"sig-paren\">(</span><em>N</em>, <em>iters=5000</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.generate_bvecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generates N bvectors.</p>\n<p>Uses dipy.core.sphere.disperse_charges to model electrostatic repulsion on a unit sphere.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>N</strong> : int</p>\n<blockquote>\n<div><p>The number of bvectors to generate. This should be equal to the number of bvals used.</p>\n</div></blockquote>\n<p><strong>iters</strong> : int</p>\n<blockquote>\n<div><p>Number of iterations to run.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>bvecs</strong> : (N,3) ndarray</p>\n<blockquote class=\"last\">\n<div><p>The generated directions, represented as a unit vector, of each gradient.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"gradient-table\">\n<h3>gradient_table<a class=\"headerlink\" href=\"#gradient-table\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.gradients.gradient_table\">\n<code class=\"descclassname\">dipy.core.gradients.</code><code class=\"descname\">gradient_table</code><span class=\"sig-paren\">(</span><em>bvals</em>, <em>bvecs=None</em>, <em>big_delta=None</em>, <em>small_delta=None</em>, <em>b0_threshold=0</em>, <em>atol=0.01</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.gradient_table\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A general function for creating diffusion MR gradients.</p>\n<p>It reads, loads and prepares scanner parameters like the b-values and\nb-vectors so that they can be useful during the reconstruction process.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>bvals</strong> : can be any of the four options</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>an array of shape (N,) or (1, N) or (N, 1) with the b-values.</li>\n<li>a path for the file which contains an array like the above (1).</li>\n<li>an array of shape (N, 4) or (4, N). Then this parameter is\nconsidered to be a b-table which contains both bvals and bvecs. In\nthis case the next parameter is skipped.</li>\n<li>a path for the file which contains an array like the one at (3).</li>\n</ol>\n</div></blockquote>\n<p><strong>bvecs</strong> : can be any of two options</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li>an array of shape (N, 3) or (3, N) with the b-vectors.</li>\n<li>a path for the file which contains an array like the previous.</li>\n</ol>\n</div></blockquote>\n<p><strong>big_delta</strong> : float</p>\n<blockquote>\n<div><p>acquisition timing duration (default None)</p>\n</div></blockquote>\n<p><strong>small_delta</strong> : float</p>\n<blockquote>\n<div><p>acquisition timing duration (default None)</p>\n</div></blockquote>\n<p><strong>b0_threshold</strong> : float</p>\n<blockquote>\n<div><p>All b-values with values less than or equal to <cite>bo_threshold</cite> are\nconsidered as b0s i.e. without diffusion weighting.</p>\n</div></blockquote>\n<p><strong>atol</strong> : float</p>\n<blockquote>\n<div><p>All b-vectors need to be unit vectors up to a tolerance.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>gradients</strong> : GradientTable</p>\n<blockquote class=\"last\">\n<div><p>A GradientTable with all the gradient information.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<ol class=\"arabic simple\">\n<li>Often b0s (b-values which correspond to images without diffusion\nweighting) have 0 values however in some cases the scanner cannot\nprovide b0s of an exact 0 value and it gives a bit higher values\ne.g. 6 or 12. This is the purpose of the b0_threshold in the __init__.</li>\n<li>We assume that the minimum number of b-values is 7.</li>\n<li>B-vectors should be unit vectors.</li>\n</ol>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"k\">import</span> <span class=\"n\">gradient_table</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvals</span><span class=\"o\">=</span><span class=\"mi\">1500</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvals</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sq2</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bvecs</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">,</span> <span class=\"n\">sq2</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt</span><span class=\"o\">.</span><span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">bvals</span><span class=\"p\">,</span> <span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">gt</span><span class=\"o\">.</span><span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"n\">bvecs</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">False</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"gradient-table-from-bvals-bvecs\">\n<h3>gradient_table_from_bvals_bvecs<a class=\"headerlink\" href=\"#gradient-table-from-bvals-bvecs\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.gradients.gradient_table_from_bvals_bvecs\">\n<code class=\"descclassname\">dipy.core.gradients.</code><code class=\"descname\">gradient_table_from_bvals_bvecs</code><span class=\"sig-paren\">(</span><em>bvals</em>, <em>bvecs</em>, <em>b0_threshold=0</em>, <em>atol=0.01</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.gradient_table_from_bvals_bvecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a GradientTable from a bvals array and a bvecs array</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>bvals</strong> : array_like (N,)</p>\n<blockquote>\n<div><p>The b-value, or magnitude, of each gradient direction.</p>\n</div></blockquote>\n<p><strong>bvecs</strong> : array_like (N, 3)</p>\n<blockquote>\n<div><p>The direction, represented as a unit vector, of each gradient.</p>\n</div></blockquote>\n<p><strong>b0_threshold</strong> : float</p>\n<blockquote>\n<div><p>Gradients with b-value less than or equal to <cite>bo_threshold</cite> are\nconsidered to not have diffusion weighting.</p>\n</div></blockquote>\n<p><strong>atol</strong> : float</p>\n<blockquote>\n<div><p>Each vector in <cite>bvecs</cite> must be a unit vectors up to a tolerance of\n<cite>atol</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>gradients</strong> : GradientTable</p>\n<blockquote>\n<div><p>A GradientTable with all the gradient information.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\" colspan=\"2\">Other Parameters:</th></tr>\n<tr class=\"field-odd field\"><td>&nbsp;</td><td class=\"field-body\"><p class=\"first\"><strong>**kwargs</strong> : dict</p>\n<blockquote class=\"last\">\n<div><p>Other keyword inputs are passed to GradientTable.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"#dipy.core.gradients.GradientTable\" title=\"dipy.core.gradients.GradientTable\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">GradientTable</span></code></a>, <a class=\"reference internal\" href=\"#dipy.core.gradients.gradient_table\" title=\"dipy.core.gradients.gradient_table\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">gradient_table</span></code></a></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"inv\">\n<h3>inv<a class=\"headerlink\" href=\"#inv\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.gradients.inv\">\n<code class=\"descclassname\">dipy.core.gradients.</code><code class=\"descname\">inv</code><span class=\"sig-paren\">(</span><em>a</em>, <em>overwrite_a=False</em>, <em>check_finite=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.inv\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the inverse of a matrix.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>a</strong> : array_like</p>\n<blockquote>\n<div><p>Square matrix to be inverted.</p>\n</div></blockquote>\n<p><strong>overwrite_a</strong> : bool, optional</p>\n<blockquote>\n<div><p>Discard data in <cite>a</cite> (may improve performance). Default is False.</p>\n</div></blockquote>\n<p><strong>check_finite</strong> : bool, optional</p>\n<blockquote>\n<div><p>Whether to check that the input matrix contains only finite numbers.\nDisabling may give a performance gain, but may result in problems\n(crashes, non-termination) if the inputs do contain infinities or NaNs.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>ainv</strong> : ndarray</p>\n<blockquote>\n<div><p>Inverse of the matrix <cite>a</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Raises:</th><td class=\"field-body\"><p class=\"first\"><strong>LinAlgError :</strong> :</p>\n<blockquote>\n<div><p>If <cite>a</cite> is singular.</p>\n</div></blockquote>\n<p><strong>ValueError :</strong> :</p>\n<blockquote class=\"last\">\n<div><p>If <cite>a</cite> is not square, or not 2-dimensional.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">scipy</span> <span class=\"k\">import</span> <span class=\"n\">linalg</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">3.</span><span class=\"p\">,</span> <span class=\"mf\">4.</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">inv</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"go\">array([[-2. ,  1. ],</span>\n<span class=\"go\">       [ 1.5, -0.5]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">inv</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span>\n<span class=\"go\">array([[ 1.,  0.],</span>\n<span class=\"go\">       [ 0.,  1.]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"polar\">\n<h3>polar<a class=\"headerlink\" href=\"#polar\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.gradients.polar\">\n<code class=\"descclassname\">dipy.core.gradients.</code><code class=\"descname\">polar</code><span class=\"sig-paren\">(</span><em>a</em>, <em>side='right'</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.polar\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Compute the polar decomposition.</p>\n<p>Returns the factors of the polar decomposition <a class=\"reference internal\" href=\"#r15\" id=\"id4\">[R15]</a> <cite>u</cite> and <cite>p</cite> such\nthat <code class=\"docutils literal\"><span class=\"pre\">a</span> <span class=\"pre\">=</span> <span class=\"pre\">up</span></code> (if <cite>side</cite> is &#8220;right&#8221;) or <code class=\"docutils literal\"><span class=\"pre\">a</span> <span class=\"pre\">=</span> <span class=\"pre\">pu</span></code> (if <cite>side</cite> is\n&#8220;left&#8221;), where <cite>p</cite> is positive semidefinite.  Depending on the shape\nof <cite>a</cite>, either the rows or columns of <cite>u</cite> are orthonormal.  When <cite>a</cite>\nis a square array, <cite>u</cite> is a square unitary array.  When <cite>a</cite> is not\nsquare, the &#8220;canonical polar decomposition&#8221; <a class=\"reference internal\" href=\"#r16\" id=\"id5\">[R16]</a> is computed.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>a</strong> : (m, n) array_like</p>\n<blockquote>\n<div><p>The array to be factored.</p>\n</div></blockquote>\n<p><strong>side</strong> : {&#8216;left&#8217;, &#8216;right&#8217;}, optional</p>\n<blockquote>\n<div><p>Determines whether a right or left polar decomposition is computed.\nIf <cite>side</cite> is &#8220;right&#8221;, then <code class=\"docutils literal\"><span class=\"pre\">a</span> <span class=\"pre\">=</span> <span class=\"pre\">up</span></code>.  If <cite>side</cite> is &#8220;left&#8221;,  then\n<code class=\"docutils literal\"><span class=\"pre\">a</span> <span class=\"pre\">=</span> <span class=\"pre\">pu</span></code>.  The default is &#8220;right&#8221;.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>u</strong> : (m, n) ndarray</p>\n<blockquote>\n<div><p>If <cite>a</cite> is square, then <cite>u</cite> is unitary.  If m &gt; n, then the columns\nof <cite>a</cite> are orthonormal, and if m &lt; n, then the rows of <cite>u</cite> are\northonormal.</p>\n</div></blockquote>\n<p><strong>p</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p><cite>p</cite> is Hermitian positive semidefinite.  If <cite>a</cite> is nonsingular, <cite>p</cite>\nis positive definite.  The shape of <cite>p</cite> is (n, n) or (m, m), depending\non whether <cite>side</cite> is &#8220;right&#8221; or &#8220;left&#8221;, respectively.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r15\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R15]</td><td><em>(<a class=\"fn-backref\" href=\"#id4\">1</a>, <a class=\"fn-backref\" href=\"#id6\">2</a>)</em> R. A. Horn and C. R. Johnson, &#8220;Matrix Analysis&#8221;, Cambridge\nUniversity Press, 1985.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r16\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R16]</td><td><em>(<a class=\"fn-backref\" href=\"#id5\">1</a>, <a class=\"fn-backref\" href=\"#id7\">2</a>)</em> N. J. Higham, &#8220;Functions of Matrices: Theory and Computation&#8221;,\nSIAM, 2008.</td></tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">scipy.linalg</span> <span class=\"k\">import</span> <span class=\"n\">polar</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">polar</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span>\n<span class=\"go\">array([[ 0.85749293, -0.51449576],</span>\n<span class=\"go\">       [ 0.51449576,  0.85749293]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">p</span>\n<span class=\"go\">array([[ 1.88648444,  1.2004901 ],</span>\n<span class=\"go\">       [ 1.2004901 ,  3.94446746]])</span>\n</pre></div>\n</div>\n<p>A non-square example, with m &lt; n:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">1.5</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">polar</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span>\n<span class=\"go\">array([[-0.21196618, -0.42393237,  0.88054056],</span>\n<span class=\"go\">       [ 0.39378971,  0.78757942,  0.4739708 ]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">p</span>\n<span class=\"go\">array([[ 0.48470147,  0.96940295,  1.15122648],</span>\n<span class=\"go\">       [ 0.96940295,  1.9388059 ,  2.30245295],</span>\n<span class=\"go\">       [ 1.15122648,  2.30245295,  3.65696431]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span>   <span class=\"c1\"># Verify the decomposition.</span>\n<span class=\"go\">array([[ 0.5,  1. ,  2. ],</span>\n<span class=\"go\">       [ 1.5,  3. ,  4. ]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">)</span>   <span class=\"c1\"># The rows of u are orthonormal.</span>\n<span class=\"go\">array([[  1.00000000e+00,  -2.07353665e-17],</span>\n<span class=\"go\">       [ -2.07353665e-17,   1.00000000e+00]])</span>\n</pre></div>\n</div>\n<p>Another non-square example, with m &gt; n:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">polar</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span>\n<span class=\"go\">array([[-0.21196618,  0.39378971],</span>\n<span class=\"go\">       [-0.42393237,  0.78757942],</span>\n<span class=\"go\">       [ 0.88054056,  0.4739708 ]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">p</span>\n<span class=\"go\">array([[ 1.23116567,  1.93241587],</span>\n<span class=\"go\">       [ 1.93241587,  4.84930602]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span>   <span class=\"c1\"># Verify the decomposition.</span>\n<span class=\"go\">array([[ 0.5,  1.5],</span>\n<span class=\"go\">       [ 1. ,  3. ],</span>\n<span class=\"go\">       [ 2. ,  4. ]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">)</span>  <span class=\"c1\"># The columns of u are orthonormal.</span>\n<span class=\"go\">array([[  1.00000000e+00,  -1.26363763e-16],</span>\n<span class=\"go\">       [ -1.26363763e-16,   1.00000000e+00]])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"reorient-bvecs\">\n<h3>reorient_bvecs<a class=\"headerlink\" href=\"#reorient-bvecs\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.gradients.reorient_bvecs\">\n<code class=\"descclassname\">dipy.core.gradients.</code><code class=\"descname\">reorient_bvecs</code><span class=\"sig-paren\">(</span><em>gtab</em>, <em>affines</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.reorient_bvecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reorient the directions in a GradientTable.</p>\n<p>When correcting for motion, rotation of the diffusion-weighted volumes\nmight cause systematic bias in rotationally invariant measures, such as FA\nand MD, and also cause characteristic biases in tractography, unless the\ngradient directions are appropriately reoriented to compensate for this\neffect <a class=\"reference internal\" href=\"#leemans2009\" id=\"id8\">[Leemans2009]</a>.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>gtab</strong> : GradientTable</p>\n<blockquote>\n<div><p>The nominal gradient table with which the data were acquired.</p>\n</div></blockquote>\n<p><strong>affines</strong> : list or ndarray of shape (n, 4, 4) or (n, 3, 3)</p>\n<blockquote>\n<div><p>Each entry in this list or array contain either an affine\ntransformation (4,4) or a rotation matrix (3, 3).\nIn both cases, the transformations encode the rotation that was applied\nto the image corresponding to one of the non-zero gradient directions\n(ordered according to their order in <cite>gtab.bvecs[~gtab.b0s_mask]</cite>)</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>gtab</strong> : a GradientTable class instance with the reoriented directions</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"leemans2009\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Leemans2009]</td><td><em>(<a class=\"fn-backref\" href=\"#id8\">1</a>, <a class=\"fn-backref\" href=\"#id9\">2</a>)</em> The B-Matrix Must Be Rotated When Correcting for\nSubject Motion in DTI Data. Leemans, A. and Jones, D.K. (2009).\nMRM, 61: 1336-1349</td></tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id10\">\n<h3>vector_norm<a class=\"headerlink\" href=\"#id10\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.gradients.vector_norm\">\n<code class=\"descclassname\">dipy.core.gradients.</code><code class=\"descname\">vector_norm</code><span class=\"sig-paren\">(</span><em>vec</em>, <em>axis=-1</em>, <em>keepdims=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.gradients.vector_norm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return vector Euclidean (L2) norm</p>\n<p>See <a class=\"reference internal\" href=\"../../glossary/#term-unit-vector\"><span class=\"xref std std-term\">unit vector</span></a> and <a class=\"reference internal\" href=\"../../glossary/#term-euclidean-norm\"><span class=\"xref std std-term\">Euclidean norm</span></a></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>vec</strong> : array_like</p>\n<blockquote>\n<div><p>Vectors to norm.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis over which to norm. By default norm over last axis. If <cite>axis</cite> is\nNone, <cite>vec</cite> is flattened then normed.</p>\n</div></blockquote>\n<p><strong>keepdims</strong> : bool</p>\n<blockquote>\n<div><p>If True, the output will have the same number of dimensions as <cite>vec</cite>,\nwith shape 1 on <cite>axis</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>norm</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Euclidean norms of vectors.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vec</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">36</span><span class=\"p\">,</span> <span class=\"mi\">77</span><span class=\"p\">]]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector_norm</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 17.,  85.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector_norm</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">,</span> <span class=\"n\">keepdims</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"go\">array([[ 17.],</span>\n<span class=\"go\">       [ 85.]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector_norm</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">array([  8.,  39.,  77.])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"graph\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.graph.Graph\" title=\"dipy.core.graph.Graph\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Graph</span></code></a><a class=\"headerlink\" href=\"#graph\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.core.graph.Graph\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.core.graph.</code><code class=\"descname\">Graph</code><a class=\"headerlink\" href=\"#dipy.core.graph.Graph\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>A simple graph class</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.add_edge\" title=\"dipy.core.graph.Graph.add_edge\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">add_edge</span></code></a>(n,&nbsp;m[,&nbsp;ws,&nbsp;wp])</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.add_node\" title=\"dipy.core.graph.Graph.add_node\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">add_node</span></code></a>(n[,&nbsp;attr])</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.all_paths\" title=\"dipy.core.graph.Graph.all_paths\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">all_paths</span></code></a>(graph,&nbsp;start[,&nbsp;end,&nbsp;path])</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.children\" title=\"dipy.core.graph.Graph.children\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">children</span></code></a>(n)</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.del_node\" title=\"dipy.core.graph.Graph.del_node\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">del_node</span></code></a>(n)</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.del_node_and_edges\" title=\"dipy.core.graph.Graph.del_node_and_edges\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">del_node_and_edges</span></code></a>(n)</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.down\" title=\"dipy.core.graph.Graph.down\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">down</span></code></a>(n)</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.down_short\" title=\"dipy.core.graph.Graph.down_short\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">down_short</span></code></a>(n)</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.parents\" title=\"dipy.core.graph.Graph.parents\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">parents</span></code></a>(n)</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.shortest_path\" title=\"dipy.core.graph.Graph.shortest_path\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">shortest_path</span></code></a>(graph,&nbsp;start[,&nbsp;end,&nbsp;path])</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.up\" title=\"dipy.core.graph.Graph.up\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">up</span></code></a>(n)</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.graph.Graph.up_short\" title=\"dipy.core.graph.Graph.up_short\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">up_short</span></code></a>(n)</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.core.graph.Graph.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A graph class with nodes and edges :-)</p>\n<p>This class allows us to:</p>\n<ol class=\"arabic simple\">\n<li>find the shortest path</li>\n<li>find all paths</li>\n<li>add/delete nodes and edges</li>\n<li>get parent &amp; children nodes</li>\n</ol>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.graph</span> <span class=\"k\">import</span> <span class=\"n\">Graph</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">=</span><span class=\"n\">Graph</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"s1\">&#39;c&#39;</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"s1\">&#39;d&#39;</span><span class=\"p\">,</span><span class=\"mi\">11</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;c&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"s1\">&#39;c&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;d&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;d&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">up_short</span><span class=\"p\">(</span><span class=\"s1\">&#39;d&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">[&#39;d&#39;, &#39;b&#39;, &#39;a&#39;]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.graph.Graph.add_edge\">\n<code class=\"descname\">add_edge</code><span class=\"sig-paren\">(</span><em>n</em>, <em>m</em>, <em>ws=True</em>, <em>wp=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.add_edge\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.graph.Graph.add_node\">\n<code class=\"descname\">add_node</code><span class=\"sig-paren\">(</span><em>n</em>, <em>attr=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.add_node\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.graph.Graph.all_paths\">\n<code class=\"descname\">all_paths</code><span class=\"sig-paren\">(</span><em>graph</em>, <em>start</em>, <em>end=None</em>, <em>path=[]</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.all_paths\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.graph.Graph.children\">\n<code class=\"descname\">children</code><span class=\"sig-paren\">(</span><em>n</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.children\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.graph.Graph.del_node\">\n<code class=\"descname\">del_node</code><span class=\"sig-paren\">(</span><em>n</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.del_node\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.graph.Graph.del_node_and_edges\">\n<code class=\"descname\">del_node_and_edges</code><span class=\"sig-paren\">(</span><em>n</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.del_node_and_edges\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.graph.Graph.down\">\n<code class=\"descname\">down</code><span class=\"sig-paren\">(</span><em>n</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.down\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.graph.Graph.down_short\">\n<code class=\"descname\">down_short</code><span class=\"sig-paren\">(</span><em>n</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.down_short\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.graph.Graph.parents\">\n<code class=\"descname\">parents</code><span class=\"sig-paren\">(</span><em>n</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.parents\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.graph.Graph.shortest_path\">\n<code class=\"descname\">shortest_path</code><span class=\"sig-paren\">(</span><em>graph</em>, <em>start</em>, <em>end=None</em>, <em>path=[]</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.shortest_path\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.graph.Graph.up\">\n<code class=\"descname\">up</code><span class=\"sig-paren\">(</span><em>n</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.up\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.graph.Graph.up_short\">\n<code class=\"descname\">up_short</code><span class=\"sig-paren\">(</span><em>n</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.graph.Graph.up_short\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"histeq\">\n<h3>histeq<a class=\"headerlink\" href=\"#histeq\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.histeq.histeq\">\n<code class=\"descclassname\">dipy.core.histeq.</code><code class=\"descname\">histeq</code><span class=\"sig-paren\">(</span><em>arr</em>, <em>num_bins=256</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.histeq.histeq\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Performs an histogram equalization on <code class=\"docutils literal\"><span class=\"pre\">arr</span></code>.\nThis was taken from:\n<a class=\"reference external\" href=\"http://www.janeriksolem.net/2009/06/histogram-equalization-with-python-and.html\">http://www.janeriksolem.net/2009/06/histogram-equalization-with-python-and.html</a></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>arr</strong> : ndarray</p>\n<blockquote>\n<div><p>Image on which to perform histogram equalization.</p>\n</div></blockquote>\n<p><strong>num_bins</strong> : int</p>\n<blockquote>\n<div><p>Number of bins used to construct the histogram.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>result</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>Histogram equalized image.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"as-strided\">\n<h3>as_strided<a class=\"headerlink\" href=\"#as-strided\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.ndindex.as_strided\">\n<code class=\"descclassname\">dipy.core.ndindex.</code><code class=\"descname\">as_strided</code><span class=\"sig-paren\">(</span><em>x</em>, <em>shape=None</em>, <em>strides=None</em>, <em>subok=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.ndindex.as_strided\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Make an ndarray from the given array with the given shape and strides.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"ndindex\">\n<h3>ndindex<a class=\"headerlink\" href=\"#ndindex\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.ndindex.ndindex\">\n<code class=\"descclassname\">dipy.core.ndindex.</code><code class=\"descname\">ndindex</code><span class=\"sig-paren\">(</span><em>shape</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.ndindex.ndindex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An N-dimensional iterator object to index arrays.</p>\n<p>Given the shape of an array, an <cite>ndindex</cite> instance iterates over\nthe N-dimensional index of the array. At each iteration a tuple\nof indices is returned; the last dimension is iterated over first.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>shape</strong> : tuple of ints</p>\n<blockquote class=\"last\">\n<div><p>The dimensions of the array.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.ndindex</span> <span class=\"k\">import</span> <span class=\"n\">ndindex</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">index</span> <span class=\"ow\">in</span> <span class=\"n\">ndindex</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"p\">)</span>\n<span class=\"go\">(0, 0, 0)</span>\n<span class=\"go\">(0, 1, 0)</span>\n<span class=\"go\">(1, 0, 0)</span>\n<span class=\"go\">(1, 1, 0)</span>\n<span class=\"go\">(2, 0, 0)</span>\n<span class=\"go\">(2, 1, 0)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"onetimeproperty\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.onetime.OneTimeProperty\" title=\"dipy.core.onetime.OneTimeProperty\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">OneTimeProperty</span></code></a><a class=\"headerlink\" href=\"#onetimeproperty\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.core.onetime.OneTimeProperty\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.core.onetime.</code><code class=\"descname\">OneTimeProperty</code><span class=\"sig-paren\">(</span><em>func</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.onetime.OneTimeProperty\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>A descriptor to make special properties that become normal attributes.</p>\n<p>This is meant to be used mostly by the auto_attr decorator in this module.</p>\n<dl class=\"method\">\n<dt id=\"dipy.core.onetime.OneTimeProperty.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>func</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.onetime.OneTimeProperty.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a OneTimeProperty instance.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>func</strong> : method</p>\n<blockquote class=\"last\">\n<div><p>The method that will be called the first time to compute a value.\nAfterwards, the method&#8217;s name will be a standard attribute holding\nthe value of this computation.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"resetmixin\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.onetime.ResetMixin\" title=\"dipy.core.onetime.ResetMixin\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">ResetMixin</span></code></a><a class=\"headerlink\" href=\"#resetmixin\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.core.onetime.ResetMixin\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.core.onetime.</code><code class=\"descname\">ResetMixin</code><a class=\"headerlink\" href=\"#dipy.core.onetime.ResetMixin\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>A Mixin class to add a .reset() method to users of OneTimeProperty.</p>\n<p>By default, auto attributes once computed, become static.  If they happen\nto depend on other parts of an object and those parts change, their values\nmay now be invalid.</p>\n<p>This class offers a .reset() method that users can call <em>explicitly</em> when\nthey know the state of their objects may have changed and they want to\nensure that <em>all</em> their special attributes should be invalidated.  Once\nreset() is called, all their auto attributes are reset to their\nOneTimeProperty descriptors, and their accessor functions will be triggered\nagain.</p>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p>If a class has a set of attributes that are OneTimeProperty, but that\ncan be initialized from any one of them, do NOT use this mixin!  For\ninstance, UniformTimeSeries can be initialized with only sampling_rate\nand t0, sampling_interval and time are auto-computed.  But if you were\nto reset() a UniformTimeSeries, it would lose all 4, and there would be\nthen no way to break the circular dependency chains.</p>\n<p class=\"last\">If this becomes a problem in practice (for our analyzer objects it\nisn&#8217;t, as they don&#8217;t have the above pattern), we can extend reset() to\ncheck for a _no_reset set of names in the instance which are meant to be\nkept protected.  But for now this is NOT done, so caveat emptor.</p>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">(</span><span class=\"n\">ResetMixin</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">x</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">... </span>    <span class=\"nd\">@auto_attr</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">y</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;*** y computation executed ***&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">/</span> <span class=\"mf\">2.0</span>\n<span class=\"gp\">...</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">A</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>About to access y twice, the second time no computation is done:\n&gt;&gt;&gt; a.y\n<strong>* y computation executed *</strong>\n5.0\n&gt;&gt;&gt; a.y\n5.0</p>\n<p>Changing x\n&gt;&gt;&gt; a.x = 20</p>\n<p>a.y doesn&#8217;t change to 10, since it is a static attribute:\n&gt;&gt;&gt; a.y\n5.0</p>\n<p>We now reset a, and this will then force all auto attributes to recompute\nthe next time we access them:\n&gt;&gt;&gt; a.reset()</p>\n<p>About to access y twice again after reset():\n&gt;&gt;&gt; a.y\n<strong>* y computation executed *</strong>\n10.0\n&gt;&gt;&gt; a.y\n10.0</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.onetime.ResetMixin.reset\" title=\"dipy.core.onetime.ResetMixin.reset\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">reset</span></code></a>()</td>\n<td>Reset all OneTimeProperty attributes that may have fired already.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.core.onetime.ResetMixin.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.onetime.ResetMixin.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.onetime.ResetMixin.reset\">\n<code class=\"descname\">reset</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.onetime.ResetMixin.reset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Reset all OneTimeProperty attributes that may have fired already.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id11\">\n<h3>auto_attr<a class=\"headerlink\" href=\"#id11\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.onetime.auto_attr\">\n<code class=\"descclassname\">dipy.core.onetime.</code><code class=\"descname\">auto_attr</code><span class=\"sig-paren\">(</span><em>func</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.onetime.auto_attr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Decorator to create OneTimeProperty attributes.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>func</strong> : method</p>\n<blockquote class=\"last\">\n<div><p>The method that will be called the first time to compute a value.\nAfterwards, the method&#8217;s name will be a standard attribute holding the\nvalue of this computation.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">MagicProp</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nd\">@auto_attr</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"k\">return</span> <span class=\"mi\">99</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">MagicProp</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">&#39;a&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">__dict__</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">a</span>\n<span class=\"go\">99</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">&#39;a&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">__dict__</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"setattr-on-read\">\n<h3>setattr_on_read<a class=\"headerlink\" href=\"#setattr-on-read\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.onetime.setattr_on_read\">\n<code class=\"descclassname\">dipy.core.onetime.</code><code class=\"descname\">setattr_on_read</code><span class=\"sig-paren\">(</span><em>func</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.onetime.setattr_on_read\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Decorator to create OneTimeProperty attributes.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>func</strong> : method</p>\n<blockquote class=\"last\">\n<div><p>The method that will be called the first time to compute a value.\nAfterwards, the method&#8217;s name will be a standard attribute holding the\nvalue of this computation.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">MagicProp</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nd\">@auto_attr</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"k\">return</span> <span class=\"mi\">99</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">MagicProp</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">&#39;a&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">__dict__</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">a</span>\n<span class=\"go\">99</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">&#39;a&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">__dict__</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"looseversion\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.optimize.LooseVersion\" title=\"dipy.core.optimize.LooseVersion\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">LooseVersion</span></code></a><a class=\"headerlink\" href=\"#looseversion\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.core.optimize.LooseVersion\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.core.optimize.</code><code class=\"descname\">LooseVersion</code><span class=\"sig-paren\">(</span><em>vstring=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.LooseVersion\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">distutils.version.Version</span></code></p>\n<p>Version numbering for anarchists and software realists.\nImplements the standard interface for version number classes as\ndescribed above.  A version number consists of a series of numbers,\nseparated by either periods or strings of letters.  When comparing\nversion numbers, the numeric components will be compared\nnumerically, and the alphabetic components lexically.  The following\nare all valid version numbers, in no particular order:</p>\n<blockquote>\n<div>1.5.1\n1.5.2b2\n161\n3.10a\n8.02\n3.4j\n1996.07.12\n3.2.pl0\n3.1.1.6\n2g6\n11g\n0.960923\n2.2beta29\n1.13++\n5.5.kw\n2.0b1pl0</div></blockquote>\n<p>In fact, there is no such thing as an invalid version number under\nthis scheme; the rules for comparison are simple and predictable,\nbut may not always give the results you want (for some definition\nof &#8220;want&#8221;).</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.optimize.LooseVersion.parse\" title=\"dipy.core.optimize.LooseVersion.parse\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">parse</span></code></a>(vstring)</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.core.optimize.LooseVersion.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>vstring=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.LooseVersion.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.core.optimize.LooseVersion.component_re\">\n<code class=\"descname\">component_re</code><em class=\"property\"> = &lt;_sre.SRE_Pattern object&gt;</em><a class=\"headerlink\" href=\"#dipy.core.optimize.LooseVersion.component_re\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.optimize.LooseVersion.parse\">\n<code class=\"descname\">parse</code><span class=\"sig-paren\">(</span><em>vstring</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.LooseVersion.parse\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"nonnegativeleastsquares\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.optimize.NonNegativeLeastSquares\" title=\"dipy.core.optimize.NonNegativeLeastSquares\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">NonNegativeLeastSquares</span></code></a><a class=\"headerlink\" href=\"#nonnegativeleastsquares\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.core.optimize.NonNegativeLeastSquares\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.core.optimize.</code><code class=\"descname\">NonNegativeLeastSquares</code><span class=\"sig-paren\">(</span><em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.NonNegativeLeastSquares\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.core.optimize.SKLearnLinearSolver\" title=\"dipy.core.optimize.SKLearnLinearSolver\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.core.optimize.SKLearnLinearSolver</span></code></a></p>\n<p>A sklearn-like interface to scipy.optimize.nnls</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.optimize.NonNegativeLeastSquares.fit\" title=\"dipy.core.optimize.NonNegativeLeastSquares.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(X,&nbsp;y)</td>\n<td>Fit the NonNegativeLeastSquares linear model to data</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code>(X)</td>\n<td>Predict using the result of the model</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.core.optimize.NonNegativeLeastSquares.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.NonNegativeLeastSquares.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.optimize.NonNegativeLeastSquares.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>X</em>, <em>y</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.NonNegativeLeastSquares.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fit the NonNegativeLeastSquares linear model to data</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"optimizer\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.optimize.Optimizer\" title=\"dipy.core.optimize.Optimizer\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Optimizer</span></code></a><a class=\"headerlink\" href=\"#optimizer\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.core.optimize.Optimizer\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.core.optimize.</code><code class=\"descname\">Optimizer</code><span class=\"sig-paren\">(</span><em>fun</em>, <em>x0</em>, <em>args=()</em>, <em>method='L-BFGS-B'</em>, <em>jac=None</em>, <em>hess=None</em>, <em>hessp=None</em>, <em>bounds=None</em>, <em>constraints=()</em>, <em>tol=None</em>, <em>callback=None</em>, <em>options=None</em>, <em>evolution=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.Optimizer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.optimize.Optimizer.print_summary\" title=\"dipy.core.optimize.Optimizer.print_summary\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">print_summary</span></code></a>()</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.core.optimize.Optimizer.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>fun</em>, <em>x0</em>, <em>args=()</em>, <em>method='L-BFGS-B'</em>, <em>jac=None</em>, <em>hess=None</em>, <em>hessp=None</em>, <em>bounds=None</em>, <em>constraints=()</em>, <em>tol=None</em>, <em>callback=None</em>, <em>options=None</em>, <em>evolution=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.Optimizer.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A class for handling minimization of scalar function of one or more\nvariables.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>fun</strong> : callable</p>\n<blockquote>\n<div><p>Objective function.</p>\n</div></blockquote>\n<p><strong>x0</strong> : ndarray</p>\n<blockquote>\n<div><p>Initial guess.</p>\n</div></blockquote>\n<p><strong>args</strong> : tuple, optional</p>\n<blockquote>\n<div><p>Extra arguments passed to the objective function and its\nderivatives (Jacobian, Hessian).</p>\n</div></blockquote>\n<p><strong>method</strong> : str, optional</p>\n<blockquote>\n<div><p>Type of solver.  Should be one of</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>&#8216;Nelder-Mead&#8217;</li>\n<li>&#8216;Powell&#8217;</li>\n<li>&#8216;CG&#8217;</li>\n<li>&#8216;BFGS&#8217;</li>\n<li>&#8216;Newton-CG&#8217;</li>\n<li>&#8216;Anneal&#8217;</li>\n<li>&#8216;L-BFGS-B&#8217;</li>\n<li>&#8216;TNC&#8217;</li>\n<li>&#8216;COBYLA&#8217;</li>\n<li>&#8216;SLSQP&#8217;</li>\n<li>&#8216;dogleg&#8217;</li>\n<li>&#8216;trust-ncg&#8217;</li>\n</ul>\n</div></blockquote>\n</div></blockquote>\n<p><strong>jac</strong> : bool or callable, optional</p>\n<blockquote>\n<div><p>Jacobian of objective function. Only for CG, BFGS, Newton-CG,\ndogleg, trust-ncg.\nIf <cite>jac</cite> is a Boolean and is True, <cite>fun</cite> is assumed to return the\nvalue of Jacobian along with the objective function. If False, the\nJacobian will be estimated numerically.\n<cite>jac</cite> can also be a callable returning the Jacobian of the\nobjective. In this case, it must accept the same arguments\nas <cite>fun</cite>.</p>\n</div></blockquote>\n<p><strong>hess, hessp</strong> : callable, optional</p>\n<blockquote>\n<div><p>Hessian of objective function or Hessian of objective function\ntimes an arbitrary vector p.  Only for Newton-CG,\ndogleg, trust-ncg.\nOnly one of <cite>hessp</cite> or <cite>hess</cite> needs to be given.  If <cite>hess</cite> is\nprovided, then <cite>hessp</cite> will be ignored.  If neither <cite>hess</cite> nor\n<cite>hessp</cite> is provided, then the hessian product will be approximated\nusing finite differences on <cite>jac</cite>. <cite>hessp</cite> must compute the Hessian\ntimes an arbitrary vector.</p>\n</div></blockquote>\n<p><strong>bounds</strong> : sequence, optional</p>\n<blockquote>\n<div><p>Bounds for variables (only for L-BFGS-B, TNC and SLSQP).\n<code class=\"docutils literal\"><span class=\"pre\">(min,</span> <span class=\"pre\">max)</span></code> pairs for each element in <code class=\"docutils literal\"><span class=\"pre\">x</span></code>, defining\nthe bounds on that parameter. Use None for one of <code class=\"docutils literal\"><span class=\"pre\">min</span></code> or\n<code class=\"docutils literal\"><span class=\"pre\">max</span></code> when there is no bound in that direction.</p>\n</div></blockquote>\n<p><strong>constraints</strong> : dict or sequence of dict, optional</p>\n<blockquote>\n<div><p>Constraints definition (only for COBYLA and SLSQP).\nEach constraint is defined in a dictionary with fields:</p>\n<blockquote>\n<div><dl class=\"docutils\">\n<dt>type</dt>\n <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">str</span><dd><p class=\"first last\">Constraint type: &#8216;eq&#8217; for equality, &#8216;ineq&#8217; for inequality.</p>\n</dd>\n<dt>fun</dt>\n <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">callable</span><dd><p class=\"first last\">The function defining the constraint.</p>\n</dd>\n<dt>jac</dt>\n <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">callable, optional</span><dd><p class=\"first last\">The Jacobian of <cite>fun</cite> (only for SLSQP).</p>\n</dd>\n<dt>args</dt>\n <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">sequence, optional</span><dd><p class=\"first last\">Extra arguments to be passed to the function and Jacobian.</p>\n</dd>\n</dl>\n</div></blockquote>\n<p>Equality constraint means that the constraint function result is to\nbe zero whereas inequality means that it is to be non-negative.\nNote that COBYLA only supports inequality constraints.</p>\n</div></blockquote>\n<p><strong>tol</strong> : float, optional</p>\n<blockquote>\n<div><p>Tolerance for termination. For detailed control, use\nsolver-specific options.</p>\n</div></blockquote>\n<p><strong>callback</strong> : callable, optional</p>\n<blockquote>\n<div><p>Called after each iteration, as <code class=\"docutils literal\"><span class=\"pre\">callback(xk)</span></code>, where <code class=\"docutils literal\"><span class=\"pre\">xk</span></code> is\nthe current parameter vector. Only available using Scipy &gt;= 0.12.</p>\n</div></blockquote>\n<p><strong>options</strong> : dict, optional</p>\n<blockquote>\n<div><p>A dictionary of solver options. All methods accept the following\ngeneric options:</p>\n<blockquote>\n<div><dl class=\"docutils\">\n<dt>maxiter</dt>\n <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">int</span><dd><p class=\"first last\">Maximum number of iterations to perform.</p>\n</dd>\n<dt>disp</dt>\n <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">bool</span><dd><p class=\"first last\">Set to True to print convergence messages.</p>\n</dd>\n</dl>\n</div></blockquote>\n<p>For method-specific options, see\n<cite>show_options(&#8216;minimize&#8217;, method)</cite>.</p>\n</div></blockquote>\n<p><strong>evolution</strong> : bool, optional</p>\n<blockquote class=\"last\">\n<div><p>save history of x for each iteration. Only available using Scipy\n&gt;= 0.12.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">scipy.optimize.minimize</span></code></p>\n</div>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.core.optimize.Optimizer.evolution\">\n<code class=\"descname\">evolution</code><a class=\"headerlink\" href=\"#dipy.core.optimize.Optimizer.evolution\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.core.optimize.Optimizer.fopt\">\n<code class=\"descname\">fopt</code><a class=\"headerlink\" href=\"#dipy.core.optimize.Optimizer.fopt\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.core.optimize.Optimizer.message\">\n<code class=\"descname\">message</code><a class=\"headerlink\" href=\"#dipy.core.optimize.Optimizer.message\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.core.optimize.Optimizer.nfev\">\n<code class=\"descname\">nfev</code><a class=\"headerlink\" href=\"#dipy.core.optimize.Optimizer.nfev\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.core.optimize.Optimizer.nit\">\n<code class=\"descname\">nit</code><a class=\"headerlink\" href=\"#dipy.core.optimize.Optimizer.nit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.optimize.Optimizer.print_summary\">\n<code class=\"descname\">print_summary</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.Optimizer.print_summary\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.core.optimize.Optimizer.xopt\">\n<code class=\"descname\">xopt</code><a class=\"headerlink\" href=\"#dipy.core.optimize.Optimizer.xopt\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sklearnlinearsolver\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.optimize.SKLearnLinearSolver\" title=\"dipy.core.optimize.SKLearnLinearSolver\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">SKLearnLinearSolver</span></code></a><a class=\"headerlink\" href=\"#sklearnlinearsolver\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.core.optimize.SKLearnLinearSolver\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.core.optimize.</code><code class=\"descname\">SKLearnLinearSolver</code><span class=\"sig-paren\">(</span><em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.SKLearnLinearSolver\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">abc.NewBase</span></code></p>\n<p>Provide a sklearn-like uniform interface to algorithms that solve problems\nof the form: <span class=\"math\">\\(y = Ax\\)</span> for <span class=\"math\">\\(x\\)</span></p>\n<p>Sub-classes of SKLearnLinearSolver should provide a &#8216;fit&#8217; method that have\nthe following signature: <cite>SKLearnLinearSolver.fit(X, y)</cite>, which would set\nan attribute <cite>SKLearnLinearSolver.coef_</cite>, with the shape (X.shape[1],),\nsuch that an estimate of y can be calculated as:\n<cite>y_hat = np.dot(X, SKLearnLinearSolver.coef_.T)</cite></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.optimize.SKLearnLinearSolver.fit\" title=\"dipy.core.optimize.SKLearnLinearSolver.fit\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">fit</span></code></a>(X,&nbsp;y)</td>\n<td>Implement for all derived classes</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.optimize.SKLearnLinearSolver.predict\" title=\"dipy.core.optimize.SKLearnLinearSolver.predict\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">predict</span></code></a>(X)</td>\n<td>Predict using the result of the model</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.core.optimize.SKLearnLinearSolver.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>*args</em>, <em>**kwargs</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.SKLearnLinearSolver.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.optimize.SKLearnLinearSolver.fit\">\n<code class=\"descname\">fit</code><span class=\"sig-paren\">(</span><em>X</em>, <em>y</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.SKLearnLinearSolver.fit\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Implement for all derived classes</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.optimize.SKLearnLinearSolver.predict\">\n<code class=\"descname\">predict</code><span class=\"sig-paren\">(</span><em>X</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.SKLearnLinearSolver.predict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Predict using the result of the model</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>X</strong> : array-like (n_samples, n_features)</p>\n<blockquote>\n<div><p>Samples.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>C</strong> : array, shape = (n_samples,)</p>\n<blockquote class=\"last\">\n<div><p>Predicted values.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"minimize\">\n<h3>minimize<a class=\"headerlink\" href=\"#minimize\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.optimize.minimize\">\n<code class=\"descclassname\">dipy.core.optimize.</code><code class=\"descname\">minimize</code><span class=\"sig-paren\">(</span><em>fun</em>, <em>x0</em>, <em>args=()</em>, <em>method=None</em>, <em>jac=None</em>, <em>hess=None</em>, <em>hessp=None</em>, <em>bounds=None</em>, <em>constraints=()</em>, <em>tol=None</em>, <em>callback=None</em>, <em>options=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.minimize\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Minimization of scalar function of one or more variables.</p>\n<p>In general, the optimization problems are of the form:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">minimize</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"n\">subject</span> <span class=\"n\">to</span>\n\n<span class=\"n\">g_i</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">,</span>  <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"o\">...</span><span class=\"p\">,</span><span class=\"n\">m</span>\n<span class=\"n\">h_j</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>  <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span>  <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"o\">...</span><span class=\"p\">,</span><span class=\"n\">p</span>\n</pre></div>\n</div>\n<p>where x is a vector of one or more variables.\n<code class=\"docutils literal\"><span class=\"pre\">g_i(x)</span></code> are the inequality constraints.\n<code class=\"docutils literal\"><span class=\"pre\">h_j(x)</span></code> are the equality constrains.</p>\n<p>Optionally, the lower and upper bounds for each element in x can also be specified \nusing the <cite>bounds</cite> argument.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>fun</strong> : callable</p>\n<blockquote>\n<div><p>Objective function.</p>\n</div></blockquote>\n<p><strong>x0</strong> : ndarray</p>\n<blockquote>\n<div><p>Initial guess.</p>\n</div></blockquote>\n<p><strong>args</strong> : tuple, optional</p>\n<blockquote>\n<div><p>Extra arguments passed to the objective function and its\nderivatives (Jacobian, Hessian).</p>\n</div></blockquote>\n<p><strong>method</strong> : str or callable, optional</p>\n<blockquote>\n<div><p>Type of solver.  Should be one of</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>&#8216;Nelder-Mead&#8217; <span class=\"xref std std-ref\">(see here)</span></li>\n<li>&#8216;Powell&#8217;      <span class=\"xref std std-ref\">(see here)</span></li>\n<li>&#8216;CG&#8217;          <span class=\"xref std std-ref\">(see here)</span></li>\n<li>&#8216;BFGS&#8217;        <span class=\"xref std std-ref\">(see here)</span></li>\n<li>&#8216;Newton-CG&#8217;   <span class=\"xref std std-ref\">(see here)</span></li>\n<li>&#8216;L-BFGS-B&#8217;    <span class=\"xref std std-ref\">(see here)</span></li>\n<li>&#8216;TNC&#8217;         <span class=\"xref std std-ref\">(see here)</span></li>\n<li>&#8216;COBYLA&#8217;      <span class=\"xref std std-ref\">(see here)</span></li>\n<li>&#8216;SLSQP&#8217;       <span class=\"xref std std-ref\">(see here)</span></li>\n<li>&#8216;dogleg&#8217;      <span class=\"xref std std-ref\">(see here)</span></li>\n<li>&#8216;trust-ncg&#8217;   <span class=\"xref std std-ref\">(see here)</span></li>\n<li>custom - a callable object (added in version 0.14.0),\nsee below for description.</li>\n</ul>\n</div></blockquote>\n<p>If not given, chosen to be one of <code class=\"docutils literal\"><span class=\"pre\">BFGS</span></code>, <code class=\"docutils literal\"><span class=\"pre\">L-BFGS-B</span></code>, <code class=\"docutils literal\"><span class=\"pre\">SLSQP</span></code>,\ndepending if the problem has constraints or bounds.</p>\n</div></blockquote>\n<p><strong>jac</strong> : bool or callable, optional</p>\n<blockquote>\n<div><p>Jacobian (gradient) of objective function. Only for CG, BFGS,\nNewton-CG, L-BFGS-B, TNC, SLSQP, dogleg, trust-ncg.\nIf <cite>jac</cite> is a Boolean and is True, <cite>fun</cite> is assumed to return the\ngradient along with the objective function. If False, the\ngradient will be estimated numerically.\n<cite>jac</cite> can also be a callable returning the gradient of the\nobjective. In this case, it must accept the same arguments as <cite>fun</cite>.</p>\n</div></blockquote>\n<p><strong>hess, hessp</strong> : callable, optional</p>\n<blockquote>\n<div><p>Hessian (matrix of second-order derivatives) of objective function or\nHessian of objective function times an arbitrary vector p.  Only for\nNewton-CG, dogleg, trust-ncg.\nOnly one of <cite>hessp</cite> or <cite>hess</cite> needs to be given.  If <cite>hess</cite> is\nprovided, then <cite>hessp</cite> will be ignored.  If neither <cite>hess</cite> nor\n<cite>hessp</cite> is provided, then the Hessian product will be approximated\nusing finite differences on <cite>jac</cite>. <cite>hessp</cite> must compute the Hessian\ntimes an arbitrary vector.</p>\n</div></blockquote>\n<p><strong>bounds</strong> : sequence, optional</p>\n<blockquote>\n<div><p>Bounds for variables (only for L-BFGS-B, TNC and SLSQP).\n<code class=\"docutils literal\"><span class=\"pre\">(min,</span> <span class=\"pre\">max)</span></code> pairs for each element in <code class=\"docutils literal\"><span class=\"pre\">x</span></code>, defining\nthe bounds on that parameter. Use None for one of <code class=\"docutils literal\"><span class=\"pre\">min</span></code> or\n<code class=\"docutils literal\"><span class=\"pre\">max</span></code> when there is no bound in that direction.</p>\n</div></blockquote>\n<p><strong>constraints</strong> : dict or sequence of dict, optional</p>\n<blockquote>\n<div><p>Constraints definition (only for COBYLA and SLSQP).\nEach constraint is defined in a dictionary with fields:</p>\n<blockquote>\n<div><dl class=\"docutils\">\n<dt>type</dt>\n <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">str</span><dd><p class=\"first last\">Constraint type: &#8216;eq&#8217; for equality, &#8216;ineq&#8217; for inequality.</p>\n</dd>\n<dt>fun</dt>\n <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">callable</span><dd><p class=\"first last\">The function defining the constraint.</p>\n</dd>\n<dt>jac</dt>\n <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">callable, optional</span><dd><p class=\"first last\">The Jacobian of <cite>fun</cite> (only for SLSQP).</p>\n</dd>\n<dt>args</dt>\n <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">sequence, optional</span><dd><p class=\"first last\">Extra arguments to be passed to the function and Jacobian.</p>\n</dd>\n</dl>\n</div></blockquote>\n<p>Equality constraint means that the constraint function result is to\nbe zero whereas inequality means that it is to be non-negative.\nNote that COBYLA only supports inequality constraints.</p>\n</div></blockquote>\n<p><strong>tol</strong> : float, optional</p>\n<blockquote>\n<div><p>Tolerance for termination. For detailed control, use solver-specific\noptions.</p>\n</div></blockquote>\n<p><strong>options</strong> : dict, optional</p>\n<blockquote>\n<div><p>A dictionary of solver options. All methods accept the following\ngeneric options:</p>\n<blockquote>\n<div><dl class=\"docutils\">\n<dt>maxiter</dt>\n <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">int</span><dd><p class=\"first last\">Maximum number of iterations to perform.</p>\n</dd>\n<dt>disp</dt>\n <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">bool</span><dd><p class=\"first last\">Set to True to print convergence messages.</p>\n</dd>\n</dl>\n</div></blockquote>\n<p>For method-specific options, see <code class=\"xref py py-func docutils literal\"><span class=\"pre\">show_options()</span></code>.</p>\n</div></blockquote>\n<p><strong>callback</strong> : callable, optional</p>\n<blockquote>\n<div><p>Called after each iteration, as <code class=\"docutils literal\"><span class=\"pre\">callback(xk)</span></code>, where <code class=\"docutils literal\"><span class=\"pre\">xk</span></code> is the\ncurrent parameter vector.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>res</strong> : OptimizeResult</p>\n<blockquote class=\"last\">\n<div><p>The optimization result represented as a <code class=\"docutils literal\"><span class=\"pre\">OptimizeResult</span></code> object.\nImportant attributes are: <code class=\"docutils literal\"><span class=\"pre\">x</span></code> the solution array, <code class=\"docutils literal\"><span class=\"pre\">success</span></code> a\nBoolean flag indicating if the optimizer exited successfully and\n<code class=\"docutils literal\"><span class=\"pre\">message</span></code> which describes the cause of the termination. See\n<cite>OptimizeResult</cite> for a description of other attributes.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">minimize_scalar</span></code></dt>\n<dd>Interface to minimization algorithms for scalar univariate functions</dd>\n<dt><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">show_options</span></code></dt>\n<dd>Additional options accepted by the solvers</dd>\n</dl>\n</div>\n<p class=\"rubric\">Notes</p>\n<p>This section describes the available solvers that can be selected by the\n&#8216;method&#8217; parameter. The default method is <em>BFGS</em>.</p>\n<p><strong>Unconstrained minimization</strong></p>\n<p>Method <span class=\"xref std std-ref\">Nelder-Mead</span> uses the\nSimplex algorithm <a class=\"reference internal\" href=\"#r17\" id=\"id12\">[R17]</a>, <a class=\"reference internal\" href=\"#r18\" id=\"id13\">[R18]</a>. This algorithm is robust in many\napplications. However, if numerical computation of derivative can be\ntrusted, other algorithms using the first and/or second derivatives\ninformation might be preferred for their better performance in\ngeneral.</p>\n<p>Method <span class=\"xref std std-ref\">Powell</span> is a modification\nof Powell&#8217;s method <a class=\"reference internal\" href=\"#r19\" id=\"id14\">[R19]</a>, <a class=\"reference internal\" href=\"#r20\" id=\"id15\">[R20]</a> which is a conjugate direction\nmethod. It performs sequential one-dimensional minimizations along\neach vector of the directions set (<cite>direc</cite> field in <cite>options</cite> and\n<cite>info</cite>), which is updated at each iteration of the main\nminimization loop. The function need not be differentiable, and no\nderivatives are taken.</p>\n<p>Method <span class=\"xref std std-ref\">CG</span> uses a nonlinear conjugate\ngradient algorithm by Polak and Ribiere, a variant of the\nFletcher-Reeves method described in <a class=\"reference internal\" href=\"#r21\" id=\"id16\">[R21]</a> pp.  120-122. Only the\nfirst derivatives are used.</p>\n<p>Method <span class=\"xref std std-ref\">BFGS</span> uses the quasi-Newton\nmethod of Broyden, Fletcher, Goldfarb, and Shanno (BFGS) <a class=\"reference internal\" href=\"#r21\" id=\"id17\">[R21]</a>\npp. 136. It uses the first derivatives only. BFGS has proven good\nperformance even for non-smooth optimizations. This method also\nreturns an approximation of the Hessian inverse, stored as\n<cite>hess_inv</cite> in the OptimizeResult object.</p>\n<p>Method <span class=\"xref std std-ref\">Newton-CG</span> uses a\nNewton-CG algorithm <a class=\"reference internal\" href=\"#r21\" id=\"id18\">[R21]</a> pp. 168 (also known as the truncated\nNewton method). It uses a CG method to the compute the search\ndirection. See also <em>TNC</em> method for a box-constrained\nminimization with a similar algorithm.</p>\n<p>Method <span class=\"xref std std-ref\">dogleg</span> uses the dog-leg\ntrust-region algorithm <a class=\"reference internal\" href=\"#r21\" id=\"id19\">[R21]</a> for unconstrained minimization. This\nalgorithm requires the gradient and Hessian; furthermore the\nHessian is required to be positive definite.</p>\n<p>Method <span class=\"xref std std-ref\">trust-ncg</span> uses the\nNewton conjugate gradient trust-region algorithm <a class=\"reference internal\" href=\"#r21\" id=\"id20\">[R21]</a> for\nunconstrained minimization. This algorithm requires the gradient\nand either the Hessian or a function that computes the product of\nthe Hessian with a given vector.</p>\n<p><strong>Constrained minimization</strong></p>\n<p>Method <span class=\"xref std std-ref\">L-BFGS-B</span> uses the L-BFGS-B\nalgorithm <a class=\"reference internal\" href=\"#r22\" id=\"id21\">[R22]</a>, <a class=\"reference internal\" href=\"#r23\" id=\"id22\">[R23]</a> for bound constrained minimization.</p>\n<p>Method <span class=\"xref std std-ref\">TNC</span> uses a truncated Newton\nalgorithm <a class=\"reference internal\" href=\"#r21\" id=\"id23\">[R21]</a>, <a class=\"reference internal\" href=\"#r24\" id=\"id24\">[R24]</a> to minimize a function with variables subject\nto bounds. This algorithm uses gradient information; it is also\ncalled Newton Conjugate-Gradient. It differs from the <em>Newton-CG</em>\nmethod described above as it wraps a C implementation and allows\neach variable to be given upper and lower bounds.</p>\n<p>Method <span class=\"xref std std-ref\">COBYLA</span> uses the\nConstrained Optimization BY Linear Approximation (COBYLA) method\n<a class=\"reference internal\" href=\"#r25\" id=\"id25\">[R25]</a>, <a class=\"footnote-reference\" href=\"#id29\" id=\"id26\">[10]</a>, <a class=\"footnote-reference\" href=\"#id30\" id=\"id27\">[11]</a>. The algorithm is based on linear\napproximations to the objective function and each constraint. The\nmethod wraps a FORTRAN implementation of the algorithm. The\nconstraints functions &#8216;fun&#8217; may return either a single number\nor an array or list of numbers.</p>\n<p>Method <span class=\"xref std std-ref\">SLSQP</span> uses Sequential\nLeast SQuares Programming to minimize a function of several\nvariables with any combination of bounds, equality and inequality\nconstraints. The method wraps the SLSQP Optimization subroutine\noriginally implemented by Dieter Kraft <a class=\"footnote-reference\" href=\"#id31\" id=\"id28\">[12]</a>. Note that the\nwrapper handles infinite values in bounds by converting them into\nlarge floating values.</p>\n<p><strong>Custom minimizers</strong></p>\n<p>It may be useful to pass a custom minimization method, for example\nwhen using a frontend to this method such as <cite>scipy.optimize.basinhopping</cite>\nor a different library.  You can simply pass a callable as the <code class=\"docutils literal\"><span class=\"pre\">method</span></code>\nparameter.</p>\n<p>The callable is called as <code class=\"docutils literal\"><span class=\"pre\">method(fun,</span> <span class=\"pre\">x0,</span> <span class=\"pre\">args,</span> <span class=\"pre\">**kwargs,</span> <span class=\"pre\">**options)</span></code>\nwhere <code class=\"docutils literal\"><span class=\"pre\">kwargs</span></code> corresponds to any other parameters passed to <cite>minimize</cite>\n(such as <cite>callback</cite>, <cite>hess</cite>, etc.), except the <cite>options</cite> dict, which has\nits contents also passed as <cite>method</cite> parameters pair by pair.  Also, if\n<cite>jac</cite> has been passed as a bool type, <cite>jac</cite> and <cite>fun</cite> are mangled so that\n<cite>fun</cite> returns just the function values and <cite>jac</cite> is converted to a function\nreturning the Jacobian.  The method shall return an <code class=\"docutils literal\"><span class=\"pre\">OptimizeResult</span></code>\nobject.</p>\n<p>The provided <cite>method</cite> callable must be able to accept (and possibly ignore)\narbitrary parameters; the set of parameters accepted by <cite>minimize</cite> may\nexpand in future versions and then these parameters will be passed to\nthe method.  You can find an example in the scipy.optimize tutorial.</p>\n<div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 0.11.0.</span></p>\n</div>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r17\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R17]</td><td><em>(<a class=\"fn-backref\" href=\"#id12\">1</a>, <a class=\"fn-backref\" href=\"#id32\">2</a>)</em> Nelder, J A, and R Mead. 1965. A Simplex Method for Function\nMinimization. The Computer Journal 7: 308-13.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r18\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R18]</td><td><em>(<a class=\"fn-backref\" href=\"#id13\">1</a>, <a class=\"fn-backref\" href=\"#id33\">2</a>)</em> Wright M H. 1996. Direct search methods: Once scorned, now\nrespectable, in Numerical Analysis 1995: Proceedings of the 1995\nDundee Biennial Conference in Numerical Analysis (Eds. D F\nGriffiths and G A Watson). Addison Wesley Longman, Harlow, UK.\n191-208.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r19\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R19]</td><td><em>(<a class=\"fn-backref\" href=\"#id14\">1</a>, <a class=\"fn-backref\" href=\"#id34\">2</a>)</em> Powell, M J D. 1964. An efficient method for finding the minimum of\na function of several variables without calculating derivatives. The\nComputer Journal 7: 155-162.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r20\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R20]</td><td><em>(<a class=\"fn-backref\" href=\"#id15\">1</a>, <a class=\"fn-backref\" href=\"#id35\">2</a>)</em> Press W, S A Teukolsky, W T Vetterling and B P Flannery.\nNumerical Recipes (any edition), Cambridge University Press.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r21\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R21]</td><td><em>(<a class=\"fn-backref\" href=\"#id16\">1</a>, <a class=\"fn-backref\" href=\"#id17\">2</a>, <a class=\"fn-backref\" href=\"#id18\">3</a>, <a class=\"fn-backref\" href=\"#id19\">4</a>, <a class=\"fn-backref\" href=\"#id20\">5</a>, <a class=\"fn-backref\" href=\"#id23\">6</a>, <a class=\"fn-backref\" href=\"#id36\">7</a>, <a class=\"fn-backref\" href=\"#id44\">8</a>)</em> Nocedal, J, and S J Wright. 2006. Numerical Optimization.\nSpringer New York.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r22\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R22]</td><td><em>(<a class=\"fn-backref\" href=\"#id21\">1</a>, <a class=\"fn-backref\" href=\"#id37\">2</a>)</em> Byrd, R H and P Lu and J. Nocedal. 1995. A Limited Memory\nAlgorithm for Bound Constrained Optimization. SIAM Journal on\nScientific and Statistical Computing 16 (5): 1190-1208.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r23\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R23]</td><td><em>(<a class=\"fn-backref\" href=\"#id22\">1</a>, <a class=\"fn-backref\" href=\"#id38\">2</a>)</em> Zhu, C and R H Byrd and J Nocedal. 1997. L-BFGS-B: Algorithm\n778: L-BFGS-B, FORTRAN routines for large scale bound constrained\noptimization. ACM Transactions on Mathematical Software 23 (4):\n550-560.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r24\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R24]</td><td><em>(<a class=\"fn-backref\" href=\"#id24\">1</a>, <a class=\"fn-backref\" href=\"#id39\">2</a>)</em> Nash, S G. Newton-Type Minimization Via the Lanczos Method.\n1984. SIAM Journal of Numerical Analysis 21: 770-778.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"r25\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[R25]</td><td><em>(<a class=\"fn-backref\" href=\"#id25\">1</a>, <a class=\"fn-backref\" href=\"#id40\">2</a>)</em> Powell, M J D. A direct search optimization method that models\nthe objective and constraint functions by linear interpolation.\n1994. Advances in Optimization and Numerical Analysis, eds. S. Gomez\nand J-P Hennart, Kluwer Academic (Dordrecht), 51-67.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils footnote\" frame=\"void\" id=\"id29\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[10]</td><td><em>(<a class=\"fn-backref\" href=\"#id26\">1</a>, <a class=\"fn-backref\" href=\"#id41\">2</a>)</em> Powell M J D. Direct search algorithms for optimization\ncalculations. 1998. Acta Numerica 7: 287-336.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils footnote\" frame=\"void\" id=\"id30\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[11]</td><td><em>(<a class=\"fn-backref\" href=\"#id27\">1</a>, <a class=\"fn-backref\" href=\"#id42\">2</a>)</em> Powell M J D. A view of algorithms for optimization without\nderivatives. 2007.Cambridge University Technical Report DAMTP\n2007/NA03</td></tr>\n</tbody>\n</table>\n<table class=\"docutils footnote\" frame=\"void\" id=\"id31\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[12]</td><td><em>(<a class=\"fn-backref\" href=\"#id28\">1</a>, <a class=\"fn-backref\" href=\"#id43\">2</a>)</em> Kraft, D. A software package for sequential quadratic\nprogramming. 1988. Tech. Rep. DFVLR-FB 88-28, DLR German Aerospace\nCenter &#8211; Institute for Flight Mechanics, Koln, Germany.</td></tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<p>Let us consider the problem of minimizing the Rosenbrock function. This\nfunction (and its respective derivatives) is implemented in <cite>rosen</cite>\n(resp. <cite>rosen_der</cite>, <cite>rosen_hess</cite>) in the <cite>scipy.optimize</cite>.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">scipy.optimize</span> <span class=\"k\">import</span> <span class=\"n\">minimize</span><span class=\"p\">,</span> <span class=\"n\">rosen</span><span class=\"p\">,</span> <span class=\"n\">rosen_der</span>\n</pre></div>\n</div>\n<p>A simple application of the <em>Nelder-Mead</em> method is:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x0</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">1.3</span><span class=\"p\">,</span> <span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">1.9</span><span class=\"p\">,</span> <span class=\"mf\">1.2</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">minimize</span><span class=\"p\">(</span><span class=\"n\">rosen</span><span class=\"p\">,</span> <span class=\"n\">x0</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;Nelder-Mead&#39;</span><span class=\"p\">,</span> <span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"n\">e</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">x</span>\n<span class=\"go\">array([ 1.,  1.,  1.,  1.,  1.])</span>\n</pre></div>\n</div>\n<p>Now using the <em>BFGS</em> algorithm, using the first derivative and a few\noptions:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">minimize</span><span class=\"p\">(</span><span class=\"n\">rosen</span><span class=\"p\">,</span> <span class=\"n\">x0</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;BFGS&#39;</span><span class=\"p\">,</span> <span class=\"n\">jac</span><span class=\"o\">=</span><span class=\"n\">rosen_der</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>               <span class=\"n\">options</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;gtol&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"n\">e</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"s1\">&#39;disp&#39;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">})</span>\n<span class=\"go\">Optimization terminated successfully.</span>\n<span class=\"go\">         Current function value: 0.000000</span>\n<span class=\"go\">         Iterations: 52</span>\n<span class=\"go\">         Function evaluations: 64</span>\n<span class=\"go\">         Gradient evaluations: 64</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">x</span>\n<span class=\"go\">array([ 1.,  1.,  1.,  1.,  1.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n<span class=\"go\">Optimization terminated successfully.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">hess_inv</span>\n<span class=\"go\">array([[ 0.00749589,  0.01255155,  0.02396251,  0.04750988,  0.09495377],  # may vary</span>\n<span class=\"go\">       [ 0.01255155,  0.02510441,  0.04794055,  0.09502834,  0.18996269],</span>\n<span class=\"go\">       [ 0.02396251,  0.04794055,  0.09631614,  0.19092151,  0.38165151],</span>\n<span class=\"go\">       [ 0.04750988,  0.09502834,  0.19092151,  0.38341252,  0.7664427 ],</span>\n<span class=\"go\">       [ 0.09495377,  0.18996269,  0.38165151,  0.7664427,   1.53713523]])</span>\n</pre></div>\n</div>\n<p>Next, consider a minimization problem with several constraints (namely\nExample 16.4 from <a class=\"reference internal\" href=\"#r21\" id=\"id44\">[R21]</a>). The objective function is:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fun</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mf\">2.5</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">2</span>\n</pre></div>\n</div>\n<p>There are three constraints defined as:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cons</span> <span class=\"o\">=</span> <span class=\"p\">({</span><span class=\"s1\">&#39;type&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;ineq&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fun&#39;</span><span class=\"p\">:</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span>  <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">},</span>\n<span class=\"gp\">... </span>        <span class=\"p\">{</span><span class=\"s1\">&#39;type&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;ineq&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fun&#39;</span><span class=\"p\">:</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">6</span><span class=\"p\">},</span>\n<span class=\"gp\">... </span>        <span class=\"p\">{</span><span class=\"s1\">&#39;type&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;ineq&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fun&#39;</span><span class=\"p\">:</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">})</span>\n</pre></div>\n</div>\n<p>And variables must be positive, hence the following bounds:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bnds</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<p>The optimization problem is solved using the SLSQP method as:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">minimize</span><span class=\"p\">(</span><span class=\"n\">fun</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;SLSQP&#39;</span><span class=\"p\">,</span> <span class=\"n\">bounds</span><span class=\"o\">=</span><span class=\"n\">bnds</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>               <span class=\"n\">constraints</span><span class=\"o\">=</span><span class=\"n\">cons</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>It should converge to the theoretical solution (1.4 ,1.7).</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sparse-nnls\">\n<h3>sparse_nnls<a class=\"headerlink\" href=\"#sparse-nnls\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.optimize.sparse_nnls\">\n<code class=\"descclassname\">dipy.core.optimize.</code><code class=\"descname\">sparse_nnls</code><span class=\"sig-paren\">(</span><em>y</em>, <em>X</em>, <em>momentum=1</em>, <em>step_size=0.01</em>, <em>non_neg=True</em>, <em>check_error_iter=10</em>, <em>max_error_checks=10</em>, <em>converge_on_sse=0.99</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.sparse_nnls\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Solve y=Xh for h, using gradient descent, with X a sparse matrix</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>y</strong> : 1-d array of shape (N)</p>\n<blockquote>\n<div><p>The data. Needs to be dense.</p>\n</div></blockquote>\n<p><strong>X</strong> : ndarray. May be either sparse or dense. Shape (N, M)</p>\n<blockquote>\n<div><p>The regressors</p>\n</div></blockquote>\n<p><strong>momentum</strong> : float, optional (default: 1).</p>\n<blockquote>\n<div><p>The persistence of the gradient.</p>\n</div></blockquote>\n<p><strong>step_size</strong> : float, optional (default: 0.01).</p>\n<blockquote>\n<div><p>The increment of parameter update in each iteration</p>\n</div></blockquote>\n<p><strong>non_neg</strong> : Boolean, optional (default: True)</p>\n<blockquote>\n<div><p>Whether to enforce non-negativity of the solution.</p>\n</div></blockquote>\n<p><strong>check_error_iter</strong> : int (default:10)</p>\n<blockquote>\n<div><p>How many rounds to run between error evaluation for\nconvergence-checking.</p>\n</div></blockquote>\n<p><strong>max_error_checks</strong> : int (default: 10)</p>\n<blockquote>\n<div><p>Don&#8217;t check errors more than this number of times if no improvement in\nr-squared is seen.</p>\n</div></blockquote>\n<p><strong>converge_on_sse</strong> : float (default: 0.99)</p>\n<blockquote>\n<div><p>a percentage improvement in SSE that is required each time to say\nthat things are still going well.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>h_best</strong> : The best estimate of the parameters.</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"spdot\">\n<h3>spdot<a class=\"headerlink\" href=\"#spdot\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.optimize.spdot\">\n<code class=\"descclassname\">dipy.core.optimize.</code><code class=\"descname\">spdot</code><span class=\"sig-paren\">(</span><em>A</em>, <em>B</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.spdot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The same as np.dot(A, B), except it works even if A or B or both\nare sparse matrices.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>A, B</strong> : arrays of shape (m, n), (n, k)</p>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>The matrix product AB. If both A and B are sparse, the result will be a</strong> :</p>\n<p><strong>sparse matrix. Otherwise, a dense result is returned</strong> :</p>\n<p><strong>See discussion here:</strong> :</p>\n<p class=\"last\"><strong>http://mail.scipy.org/pipermail/scipy-user/2010-November/027700.html</strong> :</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"with-metaclass\">\n<h3>with_metaclass<a class=\"headerlink\" href=\"#with-metaclass\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.optimize.with_metaclass\">\n<code class=\"descclassname\">dipy.core.optimize.</code><code class=\"descname\">with_metaclass</code><span class=\"sig-paren\">(</span><em>meta</em>, <em>*bases</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.optimize.with_metaclass\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a base class with a metaclass.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"profiler\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.profile.Profiler\" title=\"dipy.core.profile.Profiler\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Profiler</span></code></a><a class=\"headerlink\" href=\"#profiler\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.core.profile.Profiler\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.core.profile.</code><code class=\"descname\">Profiler</code><span class=\"sig-paren\">(</span><em>call=None</em>, <em>*args</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.profile.Profiler\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Profile python/cython files or functions</p>\n<p>If you are profiling cython code you need to add\n# cython: profile=True on the top of your .pyx file</p>\n<p>and for the functions that you do not want to profile you can use\nthis decorator in your cython files</p>\n<p>&#64;cython.profile(False)</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>caller</strong> : file or function call</p>\n<p class=\"last\"><strong>args</strong> : function arguments</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">References</p>\n<p><a class=\"reference external\" href=\"http://docs.cython.org/src/tutorial/profiling_tutorial.html\">http://docs.cython.org/src/tutorial/profiling_tutorial.html</a>\n<a class=\"reference external\" href=\"http://docs.python.org/library/profile.html\">http://docs.python.org/library/profile.html</a>\n<a class=\"reference external\" href=\"http://packages.python.org/line_profiler/\">http://packages.python.org/line_profiler/</a></p>\n<p class=\"rubric\">Examples</p>\n<p>from dipy.core.profile import Profiler\nimport numpy as np\np=Profiler(np.sum,np.random.rand(1000000,3))\nfname=&#8217;test.py&#8217;\np=Profiler(fname)\np.print_stats(10)\np.print_stats(&#8216;det&#8217;)</p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"6%\" />\n<col width=\"81%\" />\n<col width=\"13%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td>stats</td>\n<td>function, stats.print_stats(10) will prin the 10 slower functions</td>\n<td>&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.profile.Profiler.print_stats\" title=\"dipy.core.profile.Profiler.print_stats\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">print_stats</span></code></a>([N])</td>\n<td>Print stats for profiling</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.core.profile.Profiler.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>call=None</em>, <em>*args</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.profile.Profiler.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.profile.Profiler.print_stats\">\n<code class=\"descname\">print_stats</code><span class=\"sig-paren\">(</span><em>N=10</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.profile.Profiler.print_stats\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Print stats for profiling</p>\n<p>You can use it in all different ways developed in pstats\nfor example\nprint_stats(10) will give you the 10 slowest calls\nor\nprint_stats(&#8216;function_name&#8217;)\nwill give you the stats for all the calls with name &#8216;function_name&#8217;</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>N</strong> : stats.print_stats argument</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"optional-package\">\n<h3>optional_package<a class=\"headerlink\" href=\"#optional-package\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.profile.optional_package\">\n<code class=\"descclassname\">dipy.core.profile.</code><code class=\"descname\">optional_package</code><span class=\"sig-paren\">(</span><em>name</em>, <em>trip_msg=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.profile.optional_package\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return package-like thing and module setup for package <cite>name</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>name</strong> : str</p>\n<blockquote>\n<div><p>package name</p>\n</div></blockquote>\n<p><strong>trip_msg</strong> : None or str</p>\n<blockquote>\n<div><p>message to give when someone tries to use the return package, but we\ncould not import it, and have returned a TripWire object instead.\nDefault message if None.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>pkg_like</strong> : module or <code class=\"docutils literal\"><span class=\"pre\">TripWire</span></code> instance</p>\n<blockquote>\n<div><p>If we can import the package, return it.  Otherwise return an object\nraising an error when accessed</p>\n</div></blockquote>\n<p><strong>have_pkg</strong> : bool</p>\n<blockquote>\n<div><p>True if import for package was successful, false otherwise</p>\n</div></blockquote>\n<p><strong>module_setup</strong> : function</p>\n<blockquote class=\"last\">\n<div><p>callable usually set as <code class=\"docutils literal\"><span class=\"pre\">setup_module</span></code> in calling namespace, to allow\nskipping tests.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"lecuyer\">\n<h3>LEcuyer<a class=\"headerlink\" href=\"#lecuyer\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.rng.LEcuyer\">\n<code class=\"descclassname\">dipy.core.rng.</code><code class=\"descname\">LEcuyer</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.rng.LEcuyer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Generate uniformly distributed random numbers using the 32-bit\ngenerator from figure 3 of:</p>\n<blockquote>\n<div>L&#8217;Ecuyer, P. Efficient and portable combined random number\ngenerators, C.A.C.M., vol. 31, 742-749 &amp; 774-?, June 1988.</div></blockquote>\n<p>The cycle length is claimed to be 2.30584E+18</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"wichmannhill1982\">\n<h3>WichmannHill1982<a class=\"headerlink\" href=\"#wichmannhill1982\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.rng.WichmannHill1982\">\n<code class=\"descclassname\">dipy.core.rng.</code><code class=\"descname\">WichmannHill1982</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.rng.WichmannHill1982\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Algorithm AS 183 Appl. Statist. (1982) vol.31, no.2</p>\n<p>Returns a pseudo-random number rectangularly distributed\nbetween 0 and 1.   The cycle length is 6.95E+12 (See page 123\nof Applied Statistics (1984) vol.33), not as claimed in the\noriginal article.</p>\n<p>ix, iy and iz should be set to integer values between 1 and\n30000 before the first entry.</p>\n<p>Integer arithmetic up to 5212632 is required.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"wichmannhill2006\">\n<h3>WichmannHill2006<a class=\"headerlink\" href=\"#wichmannhill2006\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.rng.WichmannHill2006\">\n<code class=\"descclassname\">dipy.core.rng.</code><code class=\"descname\">WichmannHill2006</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.rng.WichmannHill2006\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>B.A. Wichmann, I.D. Hill, Generating good pseudo-random numbers,\nComputational Statistics &amp; Data Analysis, Volume 51, Issue 3, 1\nDecember 2006, Pages 1614-1622, ISSN 0167-9473, DOI:\n10.1016/j.csda.2006.05.019.\n(<a class=\"reference external\" href=\"http://www.sciencedirect.com/science/article/B6V8V-4K7F86W-2/2/a3a33291b8264e4c882a8f21b6e43351\">http://www.sciencedirect.com/science/article/B6V8V-4K7F86W-2/2/a3a33291b8264e4c882a8f21b6e43351</a>)\nfor advice on generating many sequences for use together, and on\nalternative algorithms and codes</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core</span> <span class=\"k\">import</span> <span class=\"n\">rng</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">rng</span><span class=\"o\">.</span><span class=\"n\">ix</span><span class=\"p\">,</span> <span class=\"n\">rng</span><span class=\"o\">.</span><span class=\"n\">iy</span><span class=\"p\">,</span> <span class=\"n\">rng</span><span class=\"o\">.</span><span class=\"n\">iz</span><span class=\"p\">,</span> <span class=\"n\">rng</span><span class=\"o\">.</span><span class=\"n\">it</span> <span class=\"o\">=</span> <span class=\"mi\">100001</span><span class=\"p\">,</span> <span class=\"mi\">200002</span><span class=\"p\">,</span> <span class=\"mi\">300003</span><span class=\"p\">,</span> <span class=\"mi\">400004</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">N</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">rng</span><span class=\"o\">.</span><span class=\"n\">WichmannHill2006</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">N</span><span class=\"p\">)]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"architecture\">\n<h3>architecture<a class=\"headerlink\" href=\"#architecture\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.rng.architecture\">\n<code class=\"descclassname\">dipy.core.rng.</code><code class=\"descname\">architecture</code><span class=\"sig-paren\">(</span><em>executable='/usr/bin/python2'</em>, <em>bits=''</em>, <em>linkage=''</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.rng.architecture\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Queries the given executable (defaults to the Python interpreter\nbinary) for various architecture information.</p>\n<p>Returns a tuple (bits,linkage) which contains information about\nthe bit architecture and the linkage format used for the\nexecutable. Both values are returned as strings.</p>\n<p>Values that cannot be determined are returned as given by the\nparameter presets. If bits is given as &#8216;&#8217;, the sizeof(pointer)\n(or sizeof(long) on Python version &lt; 1.5.2) is used as\nindicator for the supported pointer size.</p>\n<p>The function relies on the system&#8217;s &#8220;file&#8221; command to do the\nactual work. This is available on most if not all Unix\nplatforms. On some non-Unix platforms where the &#8220;file&#8221; command\ndoes not exist and the executable is set to the Python interpreter\nbinary defaults from _default_architecture are used.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"floor\">\n<h3>floor<a class=\"headerlink\" href=\"#floor\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.rng.floor\">\n<code class=\"descclassname\">dipy.core.rng.</code><code class=\"descname\">floor</code><span class=\"sig-paren\">(</span><em>x</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.rng.floor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return the floor of x as a float.\nThis is the largest integral value &lt;= x.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id45\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.sphere.HemiSphere\" title=\"dipy.core.sphere.HemiSphere\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">HemiSphere</span></code></a><a class=\"headerlink\" href=\"#id45\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.core.sphere.HemiSphere\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.core.sphere.</code><code class=\"descname\">HemiSphere</code><span class=\"sig-paren\">(</span><em>x=None</em>, <em>y=None</em>, <em>z=None</em>, <em>theta=None</em>, <em>phi=None</em>, <em>xyz=None</em>, <em>faces=None</em>, <em>edges=None</em>, <em>tol=1e-05</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.HemiSphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere\" title=\"dipy.core.sphere.Sphere\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.core.sphere.Sphere</span></code></a></p>\n<p>Points on the unit sphere.</p>\n<p>A HemiSphere is similar to a Sphere but it takes antipodal symmetry into\naccount. Antipodal symmetry means that point v on a HemiSphere is the same\nas the point -v. Duplicate points are discarded when constructing a\nHemiSphere (including antipodal duplicates). <cite>edges</cite> and <cite>faces</cite> are\nremapped to the remaining points as closely as possible.</p>\n<p>The HemiSphere can be constructed using one of three conventions:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n<span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">phi</span><span class=\"o\">=</span><span class=\"n\">phi</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x, y, z</strong> : 1-D array_like</p>\n<blockquote>\n<div><p>Vertices as x-y-z coordinates.</p>\n</div></blockquote>\n<p><strong>theta, phi</strong> : 1-D array_like</p>\n<blockquote>\n<div><p>Vertices as spherical coordinates.  Theta and phi are the inclination\nand azimuth angles respectively.</p>\n</div></blockquote>\n<p><strong>xyz</strong> : (N, 3) ndarray</p>\n<blockquote>\n<div><p>Vertices as x-y-z coordinates.</p>\n</div></blockquote>\n<p><strong>faces</strong> : (N, 3) ndarray</p>\n<blockquote>\n<div><p>Indices into vertices that form triangular faces.  If unspecified,\nthe faces are computed using a Delaunay triangulation.</p>\n</div></blockquote>\n<p><strong>edges</strong> : (N, 2) ndarray</p>\n<blockquote>\n<div><p>Edges between vertices.  If unspecified, the edges are\nderived from the faces.</p>\n</div></blockquote>\n<p><strong>tol</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>Angle in degrees. Vertices that are less than tol degrees apart are\ntreated as duplicates.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere\" title=\"dipy.core.sphere.Sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Sphere</span></code></a></p>\n</div>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">edges</span></code>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.HemiSphere.faces\" title=\"dipy.core.sphere.HemiSphere.faces\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">faces</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.HemiSphere.find_closest\" title=\"dipy.core.sphere.HemiSphere.find_closest\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">find_closest</span></code></a>(xyz)</td>\n<td>Find the index of the vertex in the Sphere closest to the input vector,</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.HemiSphere.from_sphere\" title=\"dipy.core.sphere.HemiSphere.from_sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">from_sphere</span></code></a>(klass,&nbsp;sphere[,&nbsp;tol])</td>\n<td>Create instance from a Sphere</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.HemiSphere.mirror\" title=\"dipy.core.sphere.HemiSphere.mirror\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mirror</span></code></a>()</td>\n<td>Create a full Sphere from a HemiSphere</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.HemiSphere.subdivide\" title=\"dipy.core.sphere.HemiSphere.subdivide\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">subdivide</span></code></a>([n])</td>\n<td>Create a more subdivided HemiSphere</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vertices</span></code>()</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.core.sphere.HemiSphere.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>x=None</em>, <em>y=None</em>, <em>z=None</em>, <em>theta=None</em>, <em>phi=None</em>, <em>xyz=None</em>, <em>faces=None</em>, <em>edges=None</em>, <em>tol=1e-05</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.HemiSphere.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a HemiSphere from points</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.sphere.HemiSphere.faces\">\n<code class=\"descname\">faces</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.HemiSphere.faces\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.sphere.HemiSphere.find_closest\">\n<code class=\"descname\">find_closest</code><span class=\"sig-paren\">(</span><em>xyz</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.HemiSphere.find_closest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Find the index of the vertex in the Sphere closest to the input vector,\ntaking into account antipodal symmetry</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>xyz</strong> : array-like, 3 elements</p>\n<blockquote class=\"last\">\n<div><p>A unit vector</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"dipy.core.sphere.HemiSphere.from_sphere\">\n<em class=\"property\">classmethod </em><code class=\"descname\">from_sphere</code><span class=\"sig-paren\">(</span><em>klass</em>, <em>sphere</em>, <em>tol=1e-05</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.HemiSphere.from_sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create instance from a Sphere</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.sphere.HemiSphere.mirror\">\n<code class=\"descname\">mirror</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.HemiSphere.mirror\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a full Sphere from a HemiSphere</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.sphere.HemiSphere.subdivide\">\n<code class=\"descname\">subdivide</code><span class=\"sig-paren\">(</span><em>n=1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.HemiSphere.subdivide\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a more subdivided HemiSphere</p>\n<p>See Sphere.subdivide for full documentation.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"sphere\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere\" title=\"dipy.core.sphere.Sphere\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Sphere</span></code></a><a class=\"headerlink\" href=\"#sphere\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.core.sphere.Sphere\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.core.sphere.</code><code class=\"descname\">Sphere</code><span class=\"sig-paren\">(</span><em>x=None</em>, <em>y=None</em>, <em>z=None</em>, <em>theta=None</em>, <em>phi=None</em>, <em>xyz=None</em>, <em>faces=None</em>, <em>edges=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>Points on the unit sphere.</p>\n<p>The sphere can be constructed using one of three conventions:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n<span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"n\">Sphere</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">phi</span><span class=\"o\">=</span><span class=\"n\">phi</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x, y, z</strong> : 1-D array_like</p>\n<blockquote>\n<div><p>Vertices as x-y-z coordinates.</p>\n</div></blockquote>\n<p><strong>theta, phi</strong> : 1-D array_like</p>\n<blockquote>\n<div><p>Vertices as spherical coordinates.  Theta and phi are the inclination\nand azimuth angles respectively.</p>\n</div></blockquote>\n<p><strong>xyz</strong> : (N, 3) ndarray</p>\n<blockquote>\n<div><p>Vertices as x-y-z coordinates.</p>\n</div></blockquote>\n<p><strong>faces</strong> : (N, 3) ndarray</p>\n<blockquote>\n<div><p>Indices into vertices that form triangular faces.  If unspecified,\nthe faces are computed using a Delaunay triangulation.</p>\n</div></blockquote>\n<p><strong>edges</strong> : (N, 2) ndarray</p>\n<blockquote class=\"last\">\n<div><p>Edges between vertices.  If unspecified, the edges are\nderived from the faces.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere.edges\" title=\"dipy.core.sphere.Sphere.edges\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">edges</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere.faces\" title=\"dipy.core.sphere.Sphere.faces\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">faces</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere.find_closest\" title=\"dipy.core.sphere.Sphere.find_closest\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">find_closest</span></code></a>(xyz)</td>\n<td>Find the index of the vertex in the Sphere closest to the input vector</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere.subdivide\" title=\"dipy.core.sphere.Sphere.subdivide\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">subdivide</span></code></a>([n])</td>\n<td>Subdivides each face of the sphere into four new faces.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere.vertices\" title=\"dipy.core.sphere.Sphere.vertices\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vertices</span></code></a>()</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.core.sphere.Sphere.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>x=None</em>, <em>y=None</em>, <em>z=None</em>, <em>theta=None</em>, <em>phi=None</em>, <em>xyz=None</em>, <em>faces=None</em>, <em>edges=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.sphere.Sphere.edges\">\n<code class=\"descname\">edges</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere.edges\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.sphere.Sphere.faces\">\n<code class=\"descname\">faces</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere.faces\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.sphere.Sphere.find_closest\">\n<code class=\"descname\">find_closest</code><span class=\"sig-paren\">(</span><em>xyz</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere.find_closest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Find the index of the vertex in the Sphere closest to the input vector</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>xyz</strong> : array-like, 3 elements</p>\n<blockquote class=\"last\">\n<div><p>A unit vector</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.sphere.Sphere.subdivide\">\n<code class=\"descname\">subdivide</code><span class=\"sig-paren\">(</span><em>n=1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere.subdivide\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Subdivides each face of the sphere into four new faces.</p>\n<p>New vertices are created at a, b, and c. Then each face [x, y, z] is\ndivided into faces [x, a, c], [y, a, b], [z, b, c], and [a, b, c].</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span>   y\n   /               /               a/____\b\n/\\    /            /  \\  /             /____\\/____          x      c     z\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>n</strong> : int, optional</p>\n<blockquote>\n<div><p>The number of subdivisions to preform.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>new_sphere</strong> : Sphere</p>\n<blockquote class=\"last\">\n<div><p>The subdivided sphere.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.sphere.Sphere.vertices\">\n<code class=\"descname\">vertices</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere.vertices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.core.sphere.Sphere.x\">\n<code class=\"descname\">x</code><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere.x\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.core.sphere.Sphere.y\">\n<code class=\"descname\">y</code><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere.y\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.core.sphere.Sphere.z\">\n<code class=\"descname\">z</code><a class=\"headerlink\" href=\"#dipy.core.sphere.Sphere.z\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"xrange\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.sphere.xrange\" title=\"dipy.core.sphere.xrange\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">xrange</span></code></a><a class=\"headerlink\" href=\"#xrange\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.core.sphere.xrange\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.core.sphere.</code><code class=\"descname\">xrange</code><a class=\"headerlink\" href=\"#dipy.core.sphere.xrange\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>xrange(start, stop[, step]) -&gt; xrange object</p>\n<p>Like range(), but instead of returning a list, returns an object that\ngenerates the numbers in the range on demand.  For looping, this is \nslightly faster than range() and more memory efficient.</p>\n<dl class=\"method\">\n<dt id=\"dipy.core.sphere.xrange.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.xrange.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id46\">\n<h3>auto_attr<a class=\"headerlink\" href=\"#id46\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.sphere.auto_attr\">\n<code class=\"descclassname\">dipy.core.sphere.</code><code class=\"descname\">auto_attr</code><span class=\"sig-paren\">(</span><em>func</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.auto_attr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Decorator to create OneTimeProperty attributes.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>func</strong> : method</p>\n<blockquote class=\"last\">\n<div><p>The method that will be called the first time to compute a value.\nAfterwards, the method&#8217;s name will be a standard attribute holding the\nvalue of this computation.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">MagicProp</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"nd\">@auto_attr</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"k\">return</span> <span class=\"mi\">99</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">MagicProp</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">&#39;a&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">__dict__</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">a</span>\n<span class=\"go\">99</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">&#39;a&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">__dict__</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id47\">\n<h3>cart2sphere<a class=\"headerlink\" href=\"#id47\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.sphere.cart2sphere\">\n<code class=\"descclassname\">dipy.core.sphere.</code><code class=\"descname\">cart2sphere</code><span class=\"sig-paren\">(</span><em>x</em>, <em>y</em>, <em>z</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.cart2sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return angles for Cartesian 3D coordinates <cite>x</cite>, <cite>y</cite>, and <cite>z</cite></p>\n<p>See doc for <code class=\"docutils literal\"><span class=\"pre\">sphere2cart</span></code> for angle conventions and derivation\nof the formulae.</p>\n<p><span class=\"math\">\\(0\\le\\theta\\mathrm{(theta)}\\le\\pi\\)</span> and <span class=\"math\">\\(-\\pi\\le\\phi\\mathrm{(phi)}\\le\\pi\\)</span></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x</strong> : array_like</p>\n<blockquote>\n<div><p>x coordinate in Cartesian space</p>\n</div></blockquote>\n<p><strong>y</strong> : array_like</p>\n<blockquote>\n<div><p>y coordinate in Cartesian space</p>\n</div></blockquote>\n<p><strong>z</strong> : array_like</p>\n<blockquote>\n<div><p>z coordinate</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>r</strong> : array</p>\n<blockquote>\n<div><p>radius</p>\n</div></blockquote>\n<p><strong>theta</strong> : array</p>\n<blockquote>\n<div><p>inclination (polar) angle</p>\n</div></blockquote>\n<p><strong>phi</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>azimuth angle</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id48\">\n<h3>disperse_charges<a class=\"headerlink\" href=\"#id48\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.sphere.disperse_charges\">\n<code class=\"descclassname\">dipy.core.sphere.</code><code class=\"descname\">disperse_charges</code><span class=\"sig-paren\">(</span><em>hemi</em>, <em>iters</em>, <em>const=0.2</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.disperse_charges\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Models electrostatic repulsion on the unit sphere</p>\n<p>Places charges on a sphere and simulates the repulsive forces felt by each\none. Allows the charges to move for some number of iterations and returns\ntheir final location as well as the total potential of the system at each\nstep.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>hemi</strong> : HemiSphere</p>\n<blockquote>\n<div><p>Points on a unit sphere.</p>\n</div></blockquote>\n<p><strong>iters</strong> : int</p>\n<blockquote>\n<div><p>Number of iterations to run.</p>\n</div></blockquote>\n<p><strong>const</strong> : float</p>\n<blockquote>\n<div><p>Using a smaller const could provide a more accurate result, but will\nneed more iterations to converge.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>hemi</strong> : HemiSphere</p>\n<blockquote>\n<div><p>Distributed points on a unit sphere.</p>\n</div></blockquote>\n<p><strong>potential</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The electrostatic potential at each iteration. This can be useful to\ncheck if the repulsion converged to a minimum.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"euler-characteristic-check\">\n<h3>euler_characteristic_check<a class=\"headerlink\" href=\"#euler-characteristic-check\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.sphere.euler_characteristic_check\">\n<code class=\"descclassname\">dipy.core.sphere.</code><code class=\"descname\">euler_characteristic_check</code><span class=\"sig-paren\">(</span><em>sphere</em>, <em>chi=2</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.euler_characteristic_check\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Checks the euler characteristic of a sphere</p>\n<p>If <span class=\"math\">\\(f\\)</span> = number of faces, <span class=\"math\">\\(e\\)</span> = number_of_edges and <span class=\"math\">\\(v\\)</span> = number of\nvertices, the Euler formula says <span class=\"math\">\\(f-e+v = 2\\)</span> for a mesh on a sphere. More\ngenerally, whether <span class=\"math\">\\(f -e + v == \\chi\\)</span> where <span class=\"math\">\\(\\chi\\)</span> is the Euler\ncharacteristic of the mesh.</p>\n<ul class=\"simple\">\n<li>Open chain (track) has <span class=\"math\">\\(\\chi=1\\)</span></li>\n<li>Closed chain (loop) has <span class=\"math\">\\(\\chi=0\\)</span></li>\n<li>Disk has <span class=\"math\">\\(\\chi=1\\)</span></li>\n<li>Sphere has <span class=\"math\">\\(\\chi=2\\)</span></li>\n<li>HemiSphere has <span class=\"math\">\\(\\chi=1\\)</span></li>\n</ul>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sphere</strong> : Sphere</p>\n<blockquote>\n<div><p>A Sphere instance with vertices, edges and faces attributes.</p>\n</div></blockquote>\n<p><strong>chi</strong> : int, optional</p>\n<blockquote>\n<div><p>The Euler characteristic of the mesh to be checked</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>check</strong> : bool</p>\n<blockquote class=\"last\">\n<div><p>True if the mesh has Euler characteristic <span class=\"math\">\\(\\chi\\)</span></p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">euler_characteristic_check</span><span class=\"p\">(</span><span class=\"n\">unit_octahedron</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">hemisphere</span> <span class=\"o\">=</span> <span class=\"n\">HemiSphere</span><span class=\"o\">.</span><span class=\"n\">from_sphere</span><span class=\"p\">(</span><span class=\"n\">unit_icosahedron</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">euler_characteristic_check</span><span class=\"p\">(</span><span class=\"n\">hemisphere</span><span class=\"p\">,</span> <span class=\"n\">chi</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"faces-from-sphere-vertices\">\n<h3>faces_from_sphere_vertices<a class=\"headerlink\" href=\"#faces-from-sphere-vertices\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.sphere.faces_from_sphere_vertices\">\n<code class=\"descclassname\">dipy.core.sphere.</code><code class=\"descname\">faces_from_sphere_vertices</code><span class=\"sig-paren\">(</span><em>vertices</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.faces_from_sphere_vertices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Triangulate a set of vertices on the sphere.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>vertices</strong> : (M, 3) ndarray</p>\n<blockquote>\n<div><p>XYZ coordinates of vertices on the sphere.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>faces</strong> : (N, 3) ndarray</p>\n<blockquote class=\"last\">\n<div><p>Indices into vertices; forms triangular faces.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"interp-rbf\">\n<h3>interp_rbf<a class=\"headerlink\" href=\"#interp-rbf\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.sphere.interp_rbf\">\n<code class=\"descclassname\">dipy.core.sphere.</code><code class=\"descname\">interp_rbf</code><span class=\"sig-paren\">(</span><em>data</em>, <em>sphere_origin</em>, <em>sphere_target</em>, <em>function='multiquadric'</em>, <em>epsilon=None</em>, <em>smooth=0.1</em>, <em>norm='angle'</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.interp_rbf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Interpolate data on the sphere, using radial basis functions.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>data</strong> : (N,) ndarray</p>\n<blockquote>\n<div><p>Function values on the unit sphere.</p>\n</div></blockquote>\n<p><strong>sphere_origin</strong> : Sphere</p>\n<blockquote>\n<div><p>Positions of data values.</p>\n</div></blockquote>\n<p><strong>sphere_target</strong> : Sphere</p>\n<blockquote>\n<div><p>M target positions for which to interpolate.</p>\n</div></blockquote>\n<p><strong>function</strong> : {&#8216;multiquadric&#8217;, &#8216;inverse&#8217;, &#8216;gaussian&#8217;}</p>\n<blockquote>\n<div><p>Radial basis function.</p>\n</div></blockquote>\n<p><strong>epsilon</strong> : float</p>\n<blockquote>\n<div><p>Radial basis function spread parameter. Defaults to approximate average\ndistance between nodes.</p>\n</div></blockquote>\n<p><strong>a good start</strong> :</p>\n<p><strong>smooth</strong> : float</p>\n<blockquote>\n<div><p>values greater than zero increase the smoothness of the\napproximation with 0 as pure interpolation. Default: 0.1</p>\n</div></blockquote>\n<p><strong>norm</strong> : str</p>\n<blockquote>\n<div><p>A string indicating the function that returns the\n&#8220;distance&#8221; between two points.\n&#8216;angle&#8217; - The angle between two vectors\n&#8216;euclidean_norm&#8217; - The Euclidean distance</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>v</strong> : (M,) ndarray</p>\n<blockquote class=\"last\">\n<div><p>Interpolated values.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">scipy.interpolate.Rbf</span></code></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"remove-similar-vertices\">\n<h3>remove_similar_vertices<a class=\"headerlink\" href=\"#remove-similar-vertices\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.sphere.remove_similar_vertices\">\n<code class=\"descclassname\">dipy.core.sphere.</code><code class=\"descname\">remove_similar_vertices</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.remove_similar_vertices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Remove vertices that are less than <cite>theta</cite> degrees from any other</p>\n<p>Returns vertices that are at least theta degrees from any other vertex.\nVertex v and -v are considered the same so if v and -v are both in\n<cite>vertices</cite> only one is kept. Also if v and w are both in vertices, w must\nbe separated by theta degrees from both v and -v to be unique.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>vertices</strong> : (N, 3) ndarray</p>\n<blockquote>\n<div><p>N unit vectors.</p>\n</div></blockquote>\n<p><strong>theta</strong> : float</p>\n<blockquote>\n<div><p>The minimum separation between vertices in degrees.</p>\n</div></blockquote>\n<p><strong>return_mapping</strong> : {False, True}, optional</p>\n<blockquote>\n<div><p>If True, return <cite>mapping</cite> as well as <cite>vertices</cite> and maybe <cite>indices</cite>\n(see below).</p>\n</div></blockquote>\n<p><strong>return_indices</strong> : {False, True}, optional</p>\n<blockquote>\n<div><p>If True, return <cite>indices</cite> as well as <cite>vertices</cite> and maybe <cite>mapping</cite>\n(see below).</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>unique_vertices</strong> : (M, 3) ndarray</p>\n<blockquote>\n<div><p>Vertices sufficiently separated from one another.</p>\n</div></blockquote>\n<p><strong>mapping</strong> : (N,) ndarray</p>\n<blockquote>\n<div><p>For each element <code class=\"docutils literal\"><span class=\"pre\">vertices[i]</span></code> (<span class=\"math\">\\(i \\in 0..N-1\\)</span>), the index <span class=\"math\">\\(j\\)</span> to a\nvertex in <cite>unique_vertices</cite> that is less than <cite>theta</cite> degrees from\n<code class=\"docutils literal\"><span class=\"pre\">vertices[i]</span></code>.  Only returned if <cite>return_mapping</cite> is True.</p>\n</div></blockquote>\n<p><strong>indices</strong> : (N,) ndarray</p>\n<blockquote class=\"last\">\n<div><p><cite>indices</cite> gives the reverse of <cite>mapping</cite>.  For each element\n<code class=\"docutils literal\"><span class=\"pre\">unique_vertices[j]</span></code> (<span class=\"math\">\\(j \\in 0..M-1\\)</span>), the index <span class=\"math\">\\(i\\)</span> to a vertex in\n<cite>vertices</cite> that is less than <cite>theta</cite> degrees from\n<code class=\"docutils literal\"><span class=\"pre\">unique_vertices[j]</span></code>.  If there is more than one element of\n<cite>vertices</cite> that is less than theta degrees from <cite>unique_vertices[j]</cite>,\nreturn the first (lowest index) matching value.  Only return if\n<cite>return_indices</cite> is True.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id49\">\n<h3>sphere2cart<a class=\"headerlink\" href=\"#id49\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.sphere.sphere2cart\">\n<code class=\"descclassname\">dipy.core.sphere.</code><code class=\"descname\">sphere2cart</code><span class=\"sig-paren\">(</span><em>r</em>, <em>theta</em>, <em>phi</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.sphere2cart\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Spherical to Cartesian coordinates</p>\n<p>This is the standard physics convention where <cite>theta</cite> is the\ninclination (polar) angle, and <cite>phi</cite> is the azimuth angle.</p>\n<p>Imagine a sphere with center (0,0,0).  Orient it with the z axis\nrunning south-north, the y axis running west-east and the x axis\nfrom posterior to anterior.  <cite>theta</cite> (the inclination angle) is the\nangle to rotate from the z-axis (the zenith) around the y-axis,\ntowards the x axis.  Thus the rotation is counter-clockwise from the\npoint of view of positive y.  <cite>phi</cite> (azimuth) gives the angle of\nrotation around the z-axis towards the y axis.  The rotation is\ncounter-clockwise from the point of view of positive z.</p>\n<p>Equivalently, given a point P on the sphere, with coordinates x, y,\nz, <cite>theta</cite> is the angle between P and the z-axis, and <cite>phi</cite> is\nthe angle between the projection of P onto the XY plane, and the X\naxis.</p>\n<p>Geographical nomenclature designates theta as &#8216;co-latitude&#8217;, and phi\nas &#8216;longitude&#8217;</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>r</strong> : array_like</p>\n<blockquote>\n<div><p>radius</p>\n</div></blockquote>\n<p><strong>theta</strong> : array_like</p>\n<blockquote>\n<div><p>inclination or polar angle</p>\n</div></blockquote>\n<p><strong>phi</strong> : array_like</p>\n<blockquote>\n<div><p>azimuth angle</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>x</strong> : array</p>\n<blockquote>\n<div><p>x coordinate(s) in Cartesion space</p>\n</div></blockquote>\n<p><strong>y</strong> : array</p>\n<blockquote>\n<div><p>y coordinate(s) in Cartesian space</p>\n</div></blockquote>\n<p><strong>z</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>z coordinate</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>See these pages:</p>\n<ul class=\"simple\">\n<li><a class=\"reference external\" href=\"http://en.wikipedia.org/wiki/Spherical_coordinate_system\">http://en.wikipedia.org/wiki/Spherical_coordinate_system</a></li>\n<li><a class=\"reference external\" href=\"http://mathworld.wolfram.com/SphericalCoordinates.html\">http://mathworld.wolfram.com/SphericalCoordinates.html</a></li>\n</ul>\n<p>for excellent discussion of the many different conventions\npossible.  Here we use the physics conventions, used in the\nwikipedia page.</p>\n<p>Derivations of the formulae are simple. Consider a vector x, y, z of\nlength r (norm of x, y, z).  The inclination angle (theta) can be\nfound from: cos(theta) == z / r -&gt; z == r * cos(theta).  This gives\nthe hypotenuse of the projection onto the XY plane, which we will\ncall Q. Q == r*sin(theta). Now x / Q == cos(phi) -&gt; x == r *\nsin(theta) * cos(phi) and so on.</p>\n<p>We have deliberately named this function <code class=\"docutils literal\"><span class=\"pre\">sphere2cart</span></code> rather than\n<code class=\"docutils literal\"><span class=\"pre\">sph2cart</span></code> to distinguish it from the Matlab function of that\nname, because the Matlab function uses an unusual convention for the\nangles that we did not want to replicate.  The Matlab function is\ntrivial to implement with the formulae given in the Matlab help.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"unique-edges\">\n<h3>unique_edges<a class=\"headerlink\" href=\"#unique-edges\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.sphere.unique_edges\">\n<code class=\"descclassname\">dipy.core.sphere.</code><code class=\"descname\">unique_edges</code><span class=\"sig-paren\">(</span><em>faces</em>, <em>return_mapping=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.unique_edges\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Extract all unique edges from given triangular faces.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>faces</strong> : (N, 3) ndarray</p>\n<blockquote>\n<div><p>Vertex indices forming triangular faces.</p>\n</div></blockquote>\n<p><strong>return_mapping</strong> : bool</p>\n<blockquote>\n<div><p>If true, a mapping to the edges of each face is returned.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>edges</strong> : (N, 2) ndarray</p>\n<blockquote>\n<div><p>Unique edges.</p>\n</div></blockquote>\n<p><strong>mapping</strong> : (N, 3)</p>\n<blockquote class=\"last\">\n<div><p>For each face, [x, y, z], a mapping to it&#8217;s edges [a, b, c].</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span>   y\n   /               /               a/    \b\n/                  /                   /__________          x      c     z\n</pre></div>\n</div>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"unique-sets\">\n<h3>unique_sets<a class=\"headerlink\" href=\"#unique-sets\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.sphere.unique_sets\">\n<code class=\"descclassname\">dipy.core.sphere.</code><code class=\"descname\">unique_sets</code><span class=\"sig-paren\">(</span><em>sets</em>, <em>return_inverse=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.unique_sets\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Remove duplicate sets.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>sets</strong> : array (N, k)</p>\n<blockquote>\n<div><p>N sets of size k.</p>\n</div></blockquote>\n<p><strong>return_inverse</strong> : bool</p>\n<blockquote class=\"last\">\n<div><p>If True, also returns the indices of unique_sets that can be used\nto reconstruct <cite>sets</cite> (the original ordering of each set may not be\npreserved).</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id50\">\n<h3>vector_norm<a class=\"headerlink\" href=\"#id50\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.sphere.vector_norm\">\n<code class=\"descclassname\">dipy.core.sphere.</code><code class=\"descname\">vector_norm</code><span class=\"sig-paren\">(</span><em>vec</em>, <em>axis=-1</em>, <em>keepdims=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere.vector_norm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return vector Euclidean (L2) norm</p>\n<p>See <a class=\"reference internal\" href=\"../../glossary/#term-unit-vector\"><span class=\"xref std std-term\">unit vector</span></a> and <a class=\"reference internal\" href=\"../../glossary/#term-euclidean-norm\"><span class=\"xref std std-term\">Euclidean norm</span></a></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>vec</strong> : array_like</p>\n<blockquote>\n<div><p>Vectors to norm.</p>\n</div></blockquote>\n<p><strong>axis</strong> : int</p>\n<blockquote>\n<div><p>Axis over which to norm. By default norm over last axis. If <cite>axis</cite> is\nNone, <cite>vec</cite> is flattened then normed.</p>\n</div></blockquote>\n<p><strong>keepdims</strong> : bool</p>\n<blockquote>\n<div><p>If True, the output will have the same number of dimensions as <cite>vec</cite>,\nwith shape 1 on <cite>axis</cite>.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>norm</strong> : array</p>\n<blockquote class=\"last\">\n<div><p>Euclidean norms of vectors.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vec</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">36</span><span class=\"p\">,</span> <span class=\"mi\">77</span><span class=\"p\">]]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector_norm</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 17.,  85.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector_norm</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">,</span> <span class=\"n\">keepdims</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"go\">array([[ 17.],</span>\n<span class=\"go\">       [ 85.]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector_norm</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">array([  8.,  39.,  77.])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"permutations\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.sphere_stats.permutations\" title=\"dipy.core.sphere_stats.permutations\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">permutations</span></code></a><a class=\"headerlink\" href=\"#permutations\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.core.sphere_stats.permutations\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.core.sphere_stats.</code><code class=\"descname\">permutations</code><a class=\"headerlink\" href=\"#dipy.core.sphere_stats.permutations\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p>permutations(iterable[, r]) &#8211;&gt; permutations object</p>\n<p>Return successive r-length permutations of elements in the iterable.</p>\n<p>permutations(range(3), 2) &#8211;&gt; (0,1), (0,2), (1,0), (1,2), (2,0), (2,1)</p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.sphere_stats.permutations.next\" title=\"dipy.core.sphere_stats.permutations.next\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">next</span></code></a></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.core.sphere_stats.permutations.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere_stats.permutations.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>x.__init__(...) initializes x; see help(type(x)) for signature</p>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dipy.core.sphere_stats.permutations.next\">\n<code class=\"descname\">next</code><a class=\"headerlink\" href=\"#dipy.core.sphere_stats.permutations.next\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"angular-similarity\">\n<h3>angular_similarity<a class=\"headerlink\" href=\"#angular-similarity\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.sphere_stats.angular_similarity\">\n<code class=\"descclassname\">dipy.core.sphere_stats.</code><code class=\"descname\">angular_similarity</code><span class=\"sig-paren\">(</span><em>S</em>, <em>T</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere_stats.angular_similarity\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes the cosine distance of the best match between\npoints of two sets of vectors S and T</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>S</strong> : array, shape (m,d)</p>\n<p><strong>T</strong> : array, shape (n,d)</p>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first last\"><strong>max_cosine_distance:float</strong> :</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.sphere_stats</span> <span class=\"k\">import</span> <span class=\"n\">angular_similarity</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">2.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">2.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">2.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">3.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">2.</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">2.</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">2.7071067811865475</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">1.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">0.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">2.</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">2.</span><span class=\"p\">]])</span>\n</pre></div>\n</div>\n<p>Now we use <code class=\"docutils literal\"><span class=\"pre\">print</span></code> to reduce the precision of of the printed output\n(so the doctests don&#8217;t detect unimportant differences)</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"si\">%.12f</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">))</span>\n<span class=\"go\">0.707106781187</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">2.</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">2.</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"si\">%.12f</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">))</span>\n<span class=\"go\">0.707106781187</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">2.</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">2.</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;</span><span class=\"si\">%.12f</span><span class=\"s1\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">angular_similarity</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">))</span>\n<span class=\"go\">0.707106781187</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"compare-orientation-sets\">\n<h3>compare_orientation_sets<a class=\"headerlink\" href=\"#compare-orientation-sets\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.sphere_stats.compare_orientation_sets\">\n<code class=\"descclassname\">dipy.core.sphere_stats.</code><code class=\"descname\">compare_orientation_sets</code><span class=\"sig-paren\">(</span><em>S</em>, <em>T</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere_stats.compare_orientation_sets\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Computes the mean cosine distance of the best match between\npoints of two sets of vectors S and T (angular similarity)</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>S</strong> : array, shape (m,d)</p>\n<blockquote>\n<div><p>First set of vectors.</p>\n</div></blockquote>\n<p><strong>T</strong> : array, shape (n,d)</p>\n<blockquote>\n<div><p>Second set of vectors.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>max_mean_cosine</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>Maximum mean cosine distance.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.sphere_stats</span> <span class=\"k\">import</span> <span class=\"n\">compare_orientation_sets</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">compare_orientation_sets</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">1.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">compare_orientation_sets</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">1.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.sphere_stats</span> <span class=\"k\">import</span> <span class=\"n\">compare_orientation_sets</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">compare_orientation_sets</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">,</span><span class=\"n\">T</span><span class=\"p\">)</span>\n<span class=\"go\">1.0</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"eigenstats\">\n<h3>eigenstats<a class=\"headerlink\" href=\"#eigenstats\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.sphere_stats.eigenstats\">\n<code class=\"descclassname\">dipy.core.sphere_stats.</code><code class=\"descname\">eigenstats</code><span class=\"sig-paren\">(</span><em>points</em>, <em>alpha=0.05</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere_stats.eigenstats\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Principal direction and confidence ellipse</p>\n<p>Implements equations in section 6.3.1(ii) of Fisher, Lewis and\nEmbleton, supplemented by equations in section 3.2.5.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>points</strong> : arraey_like (N,3)</p>\n<blockquote>\n<div><p>array of points on the sphere of radius 1 in <span class=\"math\">\\(\\mathbb{R}^3\\)</span></p>\n</div></blockquote>\n<p><strong>alpha</strong> : real or None</p>\n<blockquote>\n<div><p>1 minus the coverage for the confidence ellipsoid, e.g. 0.05 for 95%\ncoverage.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>centre</strong> : vector (3,)</p>\n<blockquote>\n<div><p>centre of ellipsoid</p>\n</div></blockquote>\n<p><strong>b1</strong> : vector (2,)</p>\n<blockquote class=\"last\">\n<div><p>lengths of semi-axes of ellipsoid</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"random-uniform-on-sphere\">\n<h3>random_uniform_on_sphere<a class=\"headerlink\" href=\"#random-uniform-on-sphere\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.sphere_stats.random_uniform_on_sphere\">\n<code class=\"descclassname\">dipy.core.sphere_stats.</code><code class=\"descname\">random_uniform_on_sphere</code><span class=\"sig-paren\">(</span><em>n=1</em>, <em>coords='xyz'</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.sphere_stats.random_uniform_on_sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Random unit vectors from a uniform distribution on the sphere.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>n</strong> : int</p>\n<blockquote>\n<div><p>Number of random vectors</p>\n</div></blockquote>\n<p><strong>coords</strong> : {&#8216;xyz&#8217;, &#8216;radians&#8217;, &#8216;degrees&#8217;}</p>\n<blockquote>\n<div><p>&#8216;xyz&#8217; for cartesian form\n&#8216;radians&#8217; for spherical form in rads\n&#8216;degrees&#8217; for spherical form in degrees</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>X</strong> : array, shape (n,3) if coords=&#8217;xyz&#8217; or shape (n,2) otherwise</p>\n<blockquote class=\"last\">\n<div><p>Uniformly distributed vectors on the unit sphere.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>The uniform distribution on the sphere, parameterized by spherical\ncoordinates <span class=\"math\">\\((\\theta, \\phi)\\)</span>, should verify <span class=\"math\">\\(\\phi\\sim U[0,2\\pi]\\)</span>, while\n<span class=\"math\">\\(z=\\cos(\\theta)\\sim U[-1,1]\\)</span>.</p>\n<p class=\"rubric\">References</p>\n<table class=\"docutils citation\" frame=\"void\" id=\"r26\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id51\">[R26]</a></td><td><a class=\"reference external\" href=\"http://mathworld.wolfram.com/SpherePointPicking.html\">http://mathworld.wolfram.com/SpherePointPicking.html</a>.</td></tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.core.sphere_stats</span> <span class=\"k\">import</span> <span class=\"n\">random_uniform_on_sphere</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">random_uniform_on_sphere</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;radians&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">random_uniform_on_sphere</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">&#39;xyz&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"id52\">\n<h3><a class=\"reference internal\" href=\"#dipy.core.subdivide_octahedron.HemiSphere\" title=\"dipy.core.subdivide_octahedron.HemiSphere\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">HemiSphere</span></code></a><a class=\"headerlink\" href=\"#id52\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.core.subdivide_octahedron.HemiSphere\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.core.subdivide_octahedron.</code><code class=\"descname\">HemiSphere</code><span class=\"sig-paren\">(</span><em>x=None</em>, <em>y=None</em>, <em>z=None</em>, <em>theta=None</em>, <em>phi=None</em>, <em>xyz=None</em>, <em>faces=None</em>, <em>edges=None</em>, <em>tol=1e-05</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.subdivide_octahedron.HemiSphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"#dipy.core.sphere.Sphere\" title=\"dipy.core.sphere.Sphere\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">dipy.core.sphere.Sphere</span></code></a></p>\n<p>Points on the unit sphere.</p>\n<p>A HemiSphere is similar to a Sphere but it takes antipodal symmetry into\naccount. Antipodal symmetry means that point v on a HemiSphere is the same\nas the point -v. Duplicate points are discarded when constructing a\nHemiSphere (including antipodal duplicates). <cite>edges</cite> and <cite>faces</cite> are\nremapped to the remaining points as closely as possible.</p>\n<p>The HemiSphere can be constructed using one of three conventions:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n<span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"n\">xyz</span><span class=\"p\">)</span>\n<span class=\"n\">HemiSphere</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">phi</span><span class=\"o\">=</span><span class=\"n\">phi</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>x, y, z</strong> : 1-D array_like</p>\n<blockquote>\n<div><p>Vertices as x-y-z coordinates.</p>\n</div></blockquote>\n<p><strong>theta, phi</strong> : 1-D array_like</p>\n<blockquote>\n<div><p>Vertices as spherical coordinates.  Theta and phi are the inclination\nand azimuth angles respectively.</p>\n</div></blockquote>\n<p><strong>xyz</strong> : (N, 3) ndarray</p>\n<blockquote>\n<div><p>Vertices as x-y-z coordinates.</p>\n</div></blockquote>\n<p><strong>faces</strong> : (N, 3) ndarray</p>\n<blockquote>\n<div><p>Indices into vertices that form triangular faces.  If unspecified,\nthe faces are computed using a Delaunay triangulation.</p>\n</div></blockquote>\n<p><strong>edges</strong> : (N, 2) ndarray</p>\n<blockquote>\n<div><p>Edges between vertices.  If unspecified, the edges are\nderived from the faces.</p>\n</div></blockquote>\n<p><strong>tol</strong> : float</p>\n<blockquote class=\"last\">\n<div><p>Angle in degrees. Vertices that are less than tol degrees apart are\ntreated as duplicates.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Sphere</span></code></p>\n</div>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">edges</span></code>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.subdivide_octahedron.HemiSphere.faces\" title=\"dipy.core.subdivide_octahedron.HemiSphere.faces\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">faces</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.subdivide_octahedron.HemiSphere.find_closest\" title=\"dipy.core.subdivide_octahedron.HemiSphere.find_closest\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">find_closest</span></code></a>(xyz)</td>\n<td>Find the index of the vertex in the Sphere closest to the input vector,</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.subdivide_octahedron.HemiSphere.from_sphere\" title=\"dipy.core.subdivide_octahedron.HemiSphere.from_sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">from_sphere</span></code></a>(klass,&nbsp;sphere[,&nbsp;tol])</td>\n<td>Create instance from a Sphere</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.core.subdivide_octahedron.HemiSphere.mirror\" title=\"dipy.core.subdivide_octahedron.HemiSphere.mirror\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mirror</span></code></a>()</td>\n<td>Create a full Sphere from a HemiSphere</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.core.subdivide_octahedron.HemiSphere.subdivide\" title=\"dipy.core.subdivide_octahedron.HemiSphere.subdivide\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">subdivide</span></code></a>([n])</td>\n<td>Create a more subdivided HemiSphere</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">vertices</span></code>()</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.core.subdivide_octahedron.HemiSphere.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>x=None</em>, <em>y=None</em>, <em>z=None</em>, <em>theta=None</em>, <em>phi=None</em>, <em>xyz=None</em>, <em>faces=None</em>, <em>edges=None</em>, <em>tol=1e-05</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.subdivide_octahedron.HemiSphere.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a HemiSphere from points</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.subdivide_octahedron.HemiSphere.faces\">\n<code class=\"descname\">faces</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.subdivide_octahedron.HemiSphere.faces\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.subdivide_octahedron.HemiSphere.find_closest\">\n<code class=\"descname\">find_closest</code><span class=\"sig-paren\">(</span><em>xyz</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.subdivide_octahedron.HemiSphere.find_closest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Find the index of the vertex in the Sphere closest to the input vector,\ntaking into account antipodal symmetry</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>xyz</strong> : array-like, 3 elements</p>\n<blockquote class=\"last\">\n<div><p>A unit vector</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"dipy.core.subdivide_octahedron.HemiSphere.from_sphere\">\n<em class=\"property\">classmethod </em><code class=\"descname\">from_sphere</code><span class=\"sig-paren\">(</span><em>klass</em>, <em>sphere</em>, <em>tol=1e-05</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.subdivide_octahedron.HemiSphere.from_sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create instance from a Sphere</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.subdivide_octahedron.HemiSphere.mirror\">\n<code class=\"descname\">mirror</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.subdivide_octahedron.HemiSphere.mirror\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a full Sphere from a HemiSphere</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.core.subdivide_octahedron.HemiSphere.subdivide\">\n<code class=\"descname\">subdivide</code><span class=\"sig-paren\">(</span><em>n=1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.subdivide_octahedron.HemiSphere.subdivide\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a more subdivided HemiSphere</p>\n<p>See Sphere.subdivide for full documentation.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"create-unit-hemisphere\">\n<h3>create_unit_hemisphere<a class=\"headerlink\" href=\"#create-unit-hemisphere\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.subdivide_octahedron.create_unit_hemisphere\">\n<code class=\"descclassname\">dipy.core.subdivide_octahedron.</code><code class=\"descname\">create_unit_hemisphere</code><span class=\"sig-paren\">(</span><em>recursion_level=2</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.subdivide_octahedron.create_unit_hemisphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a unit sphere by subdividing a unit octahedron, returns half\nthe sphere.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>recursion_level</strong> : int</p>\n<blockquote>\n<div><p>Level of subdivision, recursion_level=1 will return an octahedron,\nanything bigger will return a more subdivided sphere. The sphere will\nhave <span class=\"math\">\\((4^recursion_level+2)/2\\)</span> vertices.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>HemiSphere :</strong> :</p>\n<blockquote class=\"last\">\n<div><p>Half of a unit sphere.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"#dipy.core.subdivide_octahedron.create_unit_sphere\" title=\"dipy.core.subdivide_octahedron.create_unit_sphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">create_unit_sphere</span></code></a>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Sphere</span></code>, <a class=\"reference internal\" href=\"#dipy.core.subdivide_octahedron.HemiSphere\" title=\"dipy.core.subdivide_octahedron.HemiSphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">HemiSphere</span></code></a></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"create-unit-sphere\">\n<h3>create_unit_sphere<a class=\"headerlink\" href=\"#create-unit-sphere\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.core.subdivide_octahedron.create_unit_sphere\">\n<code class=\"descclassname\">dipy.core.subdivide_octahedron.</code><code class=\"descname\">create_unit_sphere</code><span class=\"sig-paren\">(</span><em>recursion_level=2</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.core.subdivide_octahedron.create_unit_sphere\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a unit sphere by subdividing a unit octahedron.</p>\n<p>Starts with a unit octahedron and subdivides the faces, projecting the\nresulting points onto the surface of a unit sphere.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>recursion_level</strong> : int</p>\n<blockquote>\n<div><p>Level of subdivision, recursion_level=1 will return an octahedron,\nanything bigger will return a more subdivided sphere. The sphere will\nhave <span class=\"math\">\\(4^recursion_level+2\\)</span> vertices.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>Sphere :</strong> :</p>\n<blockquote class=\"last\">\n<div><p>The unit sphere.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"#dipy.core.subdivide_octahedron.create_unit_hemisphere\" title=\"dipy.core.subdivide_octahedron.create_unit_hemisphere\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">create_unit_hemisphere</span></code></a>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Sphere</span></code></p>\n</div>\n</dd></dl>\n\n</div>\n</div>\n</div>\n", "alabaster_version": "0.7.7", "display_toc": true, "title": "<code class=\"docutils literal\"><span class=\"pre\">core</span></code>", "sourcename": "reference/dipy.core.txt", "customsidebar": null, "metatags": "", "current_page_name": "reference/dipy.core", "next": null, "rellinks": [["genindex", "General Index", "I", "index"], ["np-modindex", "Python Module Index", "", "modules"], ["reference/dipy.boots", "<code class=\"docutils literal\"><span class=\"pre\">boots</span></code>", "P", "previous"]], "meta": {}, "parents": [{"link": "../../documentation/", "title": "Documentation"}, {"link": "../", "title": "API Reference"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\"><code class=\"docutils literal\"><span class=\"pre\">core</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.geometry\">Module: <code class=\"docutils literal\"><span class=\"pre\">core.geometry</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.gradients\">Module: <code class=\"docutils literal\"><span class=\"pre\">core.gradients</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.graph\">Module: <code class=\"docutils literal\"><span class=\"pre\">core.graph</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.histeq\">Module: <code class=\"docutils literal\"><span class=\"pre\">core.histeq</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.ndindex\">Module: <code class=\"docutils literal\"><span class=\"pre\">core.ndindex</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.onetime\">Module: <code class=\"docutils literal\"><span class=\"pre\">core.onetime</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.optimize\">Module: <code class=\"docutils literal\"><span class=\"pre\">core.optimize</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.profile\">Module: <code class=\"docutils literal\"><span class=\"pre\">core.profile</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.rng\">Module: <code class=\"docutils literal\"><span class=\"pre\">core.rng</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.sphere\">Module: <code class=\"docutils literal\"><span class=\"pre\">core.sphere</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.sphere_stats\">Module: <code class=\"docutils literal\"><span class=\"pre\">core.sphere_stats</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-dipy.core.subdivide_octahedron\">Module: <code class=\"docutils literal\"><span class=\"pre\">core.subdivide_octahedron</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#test\">test</a></li>\n<li><a class=\"reference internal\" href=\"#cart2sphere\">cart2sphere</a></li>\n<li><a class=\"reference internal\" href=\"#cart-distance\">cart_distance</a></li>\n<li><a class=\"reference internal\" href=\"#circumradius\">circumradius</a></li>\n<li><a class=\"reference internal\" href=\"#compose-matrix\">compose_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#compose-transformations\">compose_transformations</a></li>\n<li><a class=\"reference internal\" href=\"#decompose-matrix\">decompose_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#dist-to-corner\">dist_to_corner</a></li>\n<li><a class=\"reference internal\" href=\"#euler-matrix\">euler_matrix</a></li>\n<li><a class=\"reference internal\" href=\"#lambert-equal-area-projection-cart\">lambert_equal_area_projection_cart</a></li>\n<li><a class=\"reference internal\" href=\"#lambert-equal-area-projection-polar\">lambert_equal_area_projection_polar</a></li>\n<li><a class=\"reference internal\" href=\"#nearest-pos-semi-def\">nearest_pos_semi_def</a></li>\n<li><a class=\"reference internal\" href=\"#normalized-vector\">normalized_vector</a></li>\n<li><a class=\"reference internal\" href=\"#perpendicular-directions\">perpendicular_directions</a></li>\n<li><a class=\"reference internal\" href=\"#rodrigues-axis-rotation\">rodrigues_axis_rotation</a></li>\n<li><a class=\"reference internal\" href=\"#sph2latlon\">sph2latlon</a></li>\n<li><a class=\"reference internal\" href=\"#sphere2cart\">sphere2cart</a></li>\n<li><a class=\"reference internal\" href=\"#sphere-distance\">sphere_distance</a></li>\n<li><a class=\"reference internal\" href=\"#vec2vec-rotmat\">vec2vec_rotmat</a></li>\n<li><a class=\"reference internal\" href=\"#vector-cosine\">vector_cosine</a></li>\n<li><a class=\"reference internal\" href=\"#vector-norm\">vector_norm</a></li>\n<li><a class=\"reference internal\" href=\"#gradienttable\"><code class=\"docutils literal\"><span class=\"pre\">GradientTable</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#hemisphere\"><code class=\"docutils literal\"><span class=\"pre\">HemiSphere</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#auto-attr\">auto_attr</a></li>\n<li><a class=\"reference internal\" href=\"#disperse-charges\">disperse_charges</a></li>\n<li><a class=\"reference internal\" href=\"#generate-bvecs\">generate_bvecs</a></li>\n<li><a class=\"reference internal\" href=\"#gradient-table\">gradient_table</a></li>\n<li><a class=\"reference internal\" href=\"#gradient-table-from-bvals-bvecs\">gradient_table_from_bvals_bvecs</a></li>\n<li><a class=\"reference internal\" href=\"#inv\">inv</a></li>\n<li><a class=\"reference internal\" href=\"#polar\">polar</a></li>\n<li><a class=\"reference internal\" href=\"#reorient-bvecs\">reorient_bvecs</a></li>\n<li><a class=\"reference internal\" href=\"#id10\">vector_norm</a></li>\n<li><a class=\"reference internal\" href=\"#graph\"><code class=\"docutils literal\"><span class=\"pre\">Graph</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#histeq\">histeq</a></li>\n<li><a class=\"reference internal\" href=\"#as-strided\">as_strided</a></li>\n<li><a class=\"reference internal\" href=\"#ndindex\">ndindex</a></li>\n<li><a class=\"reference internal\" href=\"#onetimeproperty\"><code class=\"docutils literal\"><span class=\"pre\">OneTimeProperty</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#resetmixin\"><code class=\"docutils literal\"><span class=\"pre\">ResetMixin</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id11\">auto_attr</a></li>\n<li><a class=\"reference internal\" href=\"#setattr-on-read\">setattr_on_read</a></li>\n<li><a class=\"reference internal\" href=\"#looseversion\"><code class=\"docutils literal\"><span class=\"pre\">LooseVersion</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#nonnegativeleastsquares\"><code class=\"docutils literal\"><span class=\"pre\">NonNegativeLeastSquares</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#optimizer\"><code class=\"docutils literal\"><span class=\"pre\">Optimizer</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#sklearnlinearsolver\"><code class=\"docutils literal\"><span class=\"pre\">SKLearnLinearSolver</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#minimize\">minimize</a></li>\n<li><a class=\"reference internal\" href=\"#sparse-nnls\">sparse_nnls</a></li>\n<li><a class=\"reference internal\" href=\"#spdot\">spdot</a></li>\n<li><a class=\"reference internal\" href=\"#with-metaclass\">with_metaclass</a></li>\n<li><a class=\"reference internal\" href=\"#profiler\"><code class=\"docutils literal\"><span class=\"pre\">Profiler</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#optional-package\">optional_package</a></li>\n<li><a class=\"reference internal\" href=\"#lecuyer\">LEcuyer</a></li>\n<li><a class=\"reference internal\" href=\"#wichmannhill1982\">WichmannHill1982</a></li>\n<li><a class=\"reference internal\" href=\"#wichmannhill2006\">WichmannHill2006</a></li>\n<li><a class=\"reference internal\" href=\"#architecture\">architecture</a></li>\n<li><a class=\"reference internal\" href=\"#floor\">floor</a></li>\n<li><a class=\"reference internal\" href=\"#id45\"><code class=\"docutils literal\"><span class=\"pre\">HemiSphere</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#sphere\"><code class=\"docutils literal\"><span class=\"pre\">Sphere</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#xrange\"><code class=\"docutils literal\"><span class=\"pre\">xrange</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id46\">auto_attr</a></li>\n<li><a class=\"reference internal\" href=\"#id47\">cart2sphere</a></li>\n<li><a class=\"reference internal\" href=\"#id48\">disperse_charges</a></li>\n<li><a class=\"reference internal\" href=\"#euler-characteristic-check\">euler_characteristic_check</a></li>\n<li><a class=\"reference internal\" href=\"#faces-from-sphere-vertices\">faces_from_sphere_vertices</a></li>\n<li><a class=\"reference internal\" href=\"#interp-rbf\">interp_rbf</a></li>\n<li><a class=\"reference internal\" href=\"#remove-similar-vertices\">remove_similar_vertices</a></li>\n<li><a class=\"reference internal\" href=\"#id49\">sphere2cart</a></li>\n<li><a class=\"reference internal\" href=\"#unique-edges\">unique_edges</a></li>\n<li><a class=\"reference internal\" href=\"#unique-sets\">unique_sets</a></li>\n<li><a class=\"reference internal\" href=\"#id50\">vector_norm</a></li>\n<li><a class=\"reference internal\" href=\"#permutations\"><code class=\"docutils literal\"><span class=\"pre\">permutations</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#angular-similarity\">angular_similarity</a></li>\n<li><a class=\"reference internal\" href=\"#compare-orientation-sets\">compare_orientation_sets</a></li>\n<li><a class=\"reference internal\" href=\"#eigenstats\">eigenstats</a></li>\n<li><a class=\"reference internal\" href=\"#random-uniform-on-sphere\">random_uniform_on_sphere</a></li>\n<li><a class=\"reference internal\" href=\"#id52\"><code class=\"docutils literal\"><span class=\"pre\">HemiSphere</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#create-unit-hemisphere\">create_unit_hemisphere</a></li>\n<li><a class=\"reference internal\" href=\"#create-unit-sphere\">create_unit_sphere</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../dipy.boots/", "title": "<code class=\"docutils literal\"><span class=\"pre\">boots</span></code>"}, "page_source_suffix": ".rst"}