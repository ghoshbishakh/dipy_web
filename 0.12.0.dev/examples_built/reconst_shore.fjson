<<<<<<< HEAD
{"body": "<div class=\"section\" id=\"continuous-and-analytical-diffusion-signal-modelling-with-3d-shore\">\n<span id=\"example-reconst-shore\"></span><h1>Continuous and analytical diffusion signal modelling with 3D-SHORE<a class=\"headerlink\" href=\"#continuous-and-analytical-diffusion-signal-modelling-with-3d-shore\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>We show how to model the diffusion signal as a linear combination\nof continuous functions from the SHORE basis <a class=\"reference internal\" href=\"#merlet2013\" id=\"id1\">[Merlet2013]</a>.\nWe also compute the analytical Orientation Distribution Function (ODF).</p>\n<p>First import the necessary modules:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.shore</span> <span class=\"k\">import</span> <span class=\"n\">ShoreModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.shm</span> <span class=\"k\">import</span> <span class=\"n\">sh_to_sf</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"k\">import</span> <span class=\"n\">fvtk</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">fetch_isbi2013_2shell</span><span class=\"p\">,</span> <span class=\"n\">read_isbi2013_2shell</span><span class=\"p\">,</span> <span class=\"n\">get_sphere</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"k\">import</span> <span class=\"n\">gradient_table</span>\n</pre></div>\n</div>\n<p>Download and read the data for this tutorial.</p>\n<p>fetch_isbi2013_2shell() provides data from the ISBI HARDI contest 2013 acquired\nfor two shells at b-values 1500 and 2500.</p>\n<p>The six parameters of these two functions define the ROI where to reconstruct\nthe data. They respectively correspond to (xmin,xmax,ymin,ymax,zmin,zmax)\nwith x, y, z and the three axis defining the spatial positions of the voxels.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fetch_isbi2013_2shell</span><span class=\"p\">()</span>\n<span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">read_isbi2013_2shell</span><span class=\"p\">()</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n<span class=\"n\">data_small</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">]</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;data.shape (</span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">)&#39;</span> <span class=\"o\">%</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>data contains the voxel data and gtab contains a GradientTable\nobject (gradient information e.g. b-values). For example, to show the b-values\nit is possible to write print(gtab.bvals).</p>\n<p>Instantiate the SHORE Model.</p>\n<p>radial_order is the radial order of the SHORE basis.</p>\n<p>zeta is the scale factor of the SHORE basis.</p>\n<p>lambdaN and lambdaL are the radial and angular regularization constants,\nrespectively.</p>\n<p>For details regarding these four parameters see <a class=\"reference internal\" href=\"#cheng2011\" id=\"id2\">[Cheng2011]</a> and <a class=\"reference internal\" href=\"#merlet2013\" id=\"id3\">[Merlet2013]</a>.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">radial_order</span> <span class=\"o\">=</span> <span class=\"mi\">6</span>\n<span class=\"n\">zeta</span> <span class=\"o\">=</span> <span class=\"mi\">700</span>\n<span class=\"n\">lambdaN</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"n\">e</span><span class=\"o\">-</span><span class=\"mi\">8</span>\n<span class=\"n\">lambdaL</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"n\">e</span><span class=\"o\">-</span><span class=\"mi\">8</span>\n<span class=\"n\">asm</span> <span class=\"o\">=</span> <span class=\"n\">ShoreModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">radial_order</span><span class=\"o\">=</span><span class=\"n\">radial_order</span><span class=\"p\">,</span>\n                 <span class=\"n\">zeta</span><span class=\"o\">=</span><span class=\"n\">zeta</span><span class=\"p\">,</span> <span class=\"n\">lambdaN</span><span class=\"o\">=</span><span class=\"n\">lambdaN</span><span class=\"p\">,</span> <span class=\"n\">lambdaL</span><span class=\"o\">=</span><span class=\"n\">lambdaL</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Fit the SHORE model to the data</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">asmfit</span> <span class=\"o\">=</span> <span class=\"n\">asm</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data_small</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Load an odf reconstruction sphere</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;symmetric724&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Compute the ODFs</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">odf</span> <span class=\"o\">=</span> <span class=\"n\">asmfit</span><span class=\"o\">.</span><span class=\"n\">odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;odf.shape (</span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">)&#39;</span> <span class=\"o\">%</span> <span class=\"n\">odf</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Display the ODFs</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">ren</span><span class=\"p\">()</span>\n<span class=\"n\">sfu</span> <span class=\"o\">=</span> <span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">sphere_funcs</span><span class=\"p\">(</span><span class=\"n\">odf</span><span class=\"p\">[:,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">:],</span> <span class=\"n\">sphere</span><span class=\"p\">,</span> <span class=\"n\">colormap</span><span class=\"o\">=</span><span class=\"s1\">&#39;jet&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">sfu</span><span class=\"o\">.</span><span class=\"n\">RotateX</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">90</span><span class=\"p\">)</span>\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">sfu</span><span class=\"p\">)</span>\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">n_frames</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;odfs.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id5\">\n<img alt=\"../../_images/odfs.png\" src=\"../../_images/odfs.png\" />\n<p class=\"caption\"><span class=\"caption-text\"><strong>Orientation distribution functions</strong>.</span></p>\n</div>\n<table class=\"docutils citation\" frame=\"void\" id=\"merlet2013\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Merlet2013]</td><td><em>(<a class=\"fn-backref\" href=\"#id1\">1</a>, <a class=\"fn-backref\" href=\"#id3\">2</a>)</em> Merlet S. et. al, &#8220;Continuous diffusion signal, EAP and ODF\nestimation via Compressive Sensing in diffusion MRI&#8221;, Medical\nImage Analysis, 2013.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"cheng2011\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id2\">[Cheng2011]</a></td><td>Cheng J. et. al, &#8220;Theoretical Analysis and Pratical Insights\non EAP Estimation via Unified HARDI Framework&#8221;, MICCAI\nworkshop on Computational Diffusion MRI, 2011.</td></tr>\n</tbody>\n</table>\n<div class=\"admonition-example-source-code admonition\">\n<p class=\"first admonition-title\">Example source code</p>\n<p class=\"last\">You can download <a class=\"reference download internal\" href=\"../../_downloads/reconst_shore.py\" download=\"\"><code class=\"xref download docutils literal\"><span class=\"pre\">the</span> <span class=\"pre\">full</span> <span class=\"pre\">source</span> <span class=\"pre\">code</span> <span class=\"pre\">of</span> <span class=\"pre\">this</span> <span class=\"pre\">example</span></code></a>.\nThis same script is also included in the dipy source distribution under the\n<code class=\"file docutils literal\"><span class=\"pre\">doc/examples/</span></code> directory.</p>\n</div>\n</div>\n", "alabaster_version": "0.7.8", "display_toc": false, "title": "Continuous and analytical diffusion signal modelling with 3D-SHORE", "sourcename": "examples_built/reconst_shore.txt", "customsidebar": null, "metatags": "", "current_page_name": "examples_built/reconst_shore", "next": null, "rellinks": [["genindex", "General Index", "I", "index"], ["np-modindex", "Python Module Index", "", "modules"]], "meta": {}, "parents": [], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Continuous and analytical diffusion signal modelling with 3D-SHORE</a></li>\n</ul>\n", "prev": null, "page_source_suffix": ".rst"}
=======
{"body": "<div class=\"section\" id=\"continuous-and-analytical-diffusion-signal-modelling-with-3d-shore\">\n<span id=\"example-reconst-shore\"></span><h1>Continuous and analytical diffusion signal modelling with 3D-SHORE<a class=\"headerlink\" href=\"#continuous-and-analytical-diffusion-signal-modelling-with-3d-shore\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>We show how to model the diffusion signal as a linear combination\nof continuous functions from the SHORE basis <a class=\"reference internal\" href=\"#merlet2013\" id=\"id1\">[Merlet2013]</a>.\nWe also compute the analytical Orientation Distribution Function (ODF).</p>\n<p>First import the necessary modules:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.shore</span> <span class=\"k\">import</span> <span class=\"n\">ShoreModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.shm</span> <span class=\"k\">import</span> <span class=\"n\">sh_to_sf</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"k\">import</span> <span class=\"n\">fvtk</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">fetch_isbi2013_2shell</span><span class=\"p\">,</span> <span class=\"n\">read_isbi2013_2shell</span><span class=\"p\">,</span> <span class=\"n\">get_sphere</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"k\">import</span> <span class=\"n\">gradient_table</span>\n</pre></div>\n</div>\n<p>Download and read the data for this tutorial.</p>\n<p>fetch_isbi2013_2shell() provides data from the ISBI HARDI contest 2013 acquired\nfor two shells at b-values 1500 and 2500.</p>\n<p>The six parameters of these two functions define the ROI where to reconstruct\nthe data. They respectively correspond to (xmin,xmax,ymin,ymax,zmin,zmax)\nwith x, y, z and the three axis defining the spatial positions of the voxels.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">fetch_isbi2013_2shell</span><span class=\"p\">()</span>\n<span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">read_isbi2013_2shell</span><span class=\"p\">()</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n<span class=\"n\">data_small</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">40</span><span class=\"p\">]</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;data.shape (</span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">)&#39;</span> <span class=\"o\">%</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>data contains the voxel data and gtab contains a GradientTable\nobject (gradient information e.g. b-values). For example, to show the b-values\nit is possible to write print(gtab.bvals).</p>\n<p>Instantiate the SHORE Model.</p>\n<p>radial_order is the radial order of the SHORE basis.</p>\n<p>zeta is the scale factor of the SHORE basis.</p>\n<p>lambdaN and lambdaL are the radial and angular regularization constants,\nrespectively.</p>\n<p>For details regarding these four parameters see <a class=\"reference internal\" href=\"#cheng2011\" id=\"id2\">[Cheng2011]</a> and <a class=\"reference internal\" href=\"#merlet2013\" id=\"id3\">[Merlet2013]</a>.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">radial_order</span> <span class=\"o\">=</span> <span class=\"mi\">6</span>\n<span class=\"n\">zeta</span> <span class=\"o\">=</span> <span class=\"mi\">700</span>\n<span class=\"n\">lambdaN</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"n\">e</span><span class=\"o\">-</span><span class=\"mi\">8</span>\n<span class=\"n\">lambdaL</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"n\">e</span><span class=\"o\">-</span><span class=\"mi\">8</span>\n<span class=\"n\">asm</span> <span class=\"o\">=</span> <span class=\"n\">ShoreModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">radial_order</span><span class=\"o\">=</span><span class=\"n\">radial_order</span><span class=\"p\">,</span>\n                 <span class=\"n\">zeta</span><span class=\"o\">=</span><span class=\"n\">zeta</span><span class=\"p\">,</span> <span class=\"n\">lambdaN</span><span class=\"o\">=</span><span class=\"n\">lambdaN</span><span class=\"p\">,</span> <span class=\"n\">lambdaL</span><span class=\"o\">=</span><span class=\"n\">lambdaL</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Fit the SHORE model to the data</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">asmfit</span> <span class=\"o\">=</span> <span class=\"n\">asm</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data_small</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Load an odf reconstruction sphere</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;symmetric724&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Compute the ODFs</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">odf</span> <span class=\"o\">=</span> <span class=\"n\">asmfit</span><span class=\"o\">.</span><span class=\"n\">odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;odf.shape (</span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">, </span><span class=\"si\">%d</span><span class=\"s1\">)&#39;</span> <span class=\"o\">%</span> <span class=\"n\">odf</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Display the ODFs</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">ren</span><span class=\"p\">()</span>\n<span class=\"n\">sfu</span> <span class=\"o\">=</span> <span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">sphere_funcs</span><span class=\"p\">(</span><span class=\"n\">odf</span><span class=\"p\">[:,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">:],</span> <span class=\"n\">sphere</span><span class=\"p\">,</span> <span class=\"n\">colormap</span><span class=\"o\">=</span><span class=\"s1\">&#39;jet&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">sfu</span><span class=\"o\">.</span><span class=\"n\">RotateX</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">90</span><span class=\"p\">)</span>\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">sfu</span><span class=\"p\">)</span>\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">n_frames</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;odfs.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id5\">\n<img alt=\"examples_built/odfs.png\" src=\"examples_built/odfs.png\" />\n<p class=\"caption\"><span class=\"caption-text\"><strong>Orientation distribution functions</strong>.</span></p>\n</div>\n<table class=\"docutils citation\" frame=\"void\" id=\"merlet2013\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Merlet2013]</td><td><em>(<a class=\"fn-backref\" href=\"#id1\">1</a>, <a class=\"fn-backref\" href=\"#id3\">2</a>)</em> Merlet S. et. al, &#8220;Continuous diffusion signal, EAP and ODF\nestimation via Compressive Sensing in diffusion MRI&#8221;, Medical\nImage Analysis, 2013.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"cheng2011\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id2\">[Cheng2011]</a></td><td>Cheng J. et. al, &#8220;Theoretical Analysis and Pratical Insights\non EAP Estimation via Unified HARDI Framework&#8221;, MICCAI\nworkshop on Computational Diffusion MRI, 2011.</td></tr>\n</tbody>\n</table>\n<div class=\"admonition-example-source-code admonition\">\n<p class=\"first admonition-title\">Example source code</p>\n<p class=\"last\">You can download <a class=\"reference download internal\" href=\"../../_downloads/reconst_shore.py\" download=\"\"><code class=\"xref download docutils literal\"><span class=\"pre\">the</span> <span class=\"pre\">full</span> <span class=\"pre\">source</span> <span class=\"pre\">code</span> <span class=\"pre\">of</span> <span class=\"pre\">this</span> <span class=\"pre\">example</span></code></a>.\nThis same script is also included in the dipy source distribution under the\n<code class=\"file docutils literal\"><span class=\"pre\">doc/examples/</span></code> directory.</p>\n</div>\n</div>\n", "alabaster_version": "0.7.7", "display_toc": false, "title": "Continuous and analytical diffusion signal modelling with 3D-SHORE", "sourcename": "examples_built/reconst_shore.txt", "customsidebar": null, "metatags": "", "current_page_name": "examples_built/reconst_shore", "next": null, "rellinks": [["genindex", "General Index", "I", "index"], ["np-modindex", "Python Module Index", "", "modules"]], "meta": {}, "parents": [], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Continuous and analytical diffusion signal modelling with 3D-SHORE</a></li>\n</ul>\n", "prev": null, "page_source_suffix": ".rst"}
>>>>>>> 1d6fdcf4511dbcfabbc73c3aa39a5e508df24b6c
