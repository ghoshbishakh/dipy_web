{"body": "<div class=\"section\" id=\"dsi-deconvolution-vs-dsi\">\n<span id=\"example-reconst-dsid\"></span><h1>DSI Deconvolution vs DSI<a class=\"headerlink\" href=\"#dsi-deconvolution-vs-dsi\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>An alternative method to DSI is the method proposed by <a class=\"reference internal\" href=\"#canales10\" id=\"id1\">[Canales10]</a> which is\ncalled DSI with Deconvolution. This algorithm is using Lucy-Richardson\ndeconvolution in the diffusion propagator with the goal to create sharper ODFs\nwith higher angular resolution.</p>\n<p>In this example we will show with simulated data how this method&#8217;s ODF performs\nagainst standard DSI ODF and a ground truth multi tensor ODF.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.sims.voxel</span> <span class=\"k\">import</span> <span class=\"n\">multi_tensor</span><span class=\"p\">,</span> <span class=\"n\">multi_tensor_odf</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">get_data</span><span class=\"p\">,</span> <span class=\"n\">get_sphere</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.core.gradients</span> <span class=\"k\">import</span> <span class=\"n\">gradient_table</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.dsi</span> <span class=\"k\">import</span> <span class=\"p\">(</span><span class=\"n\">DiffusionSpectrumDeconvModel</span><span class=\"p\">,</span>\n                              <span class=\"n\">DiffusionSpectrumModel</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>For the simulation we will use a standard DSI acqusition scheme with 514\ngradient directions and 1 S0.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">btable</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span><span class=\"n\">get_data</span><span class=\"p\">(</span><span class=\"s1\">&#39;dsi515btable&#39;</span><span class=\"p\">))</span>\n\n<span class=\"n\">gtab</span> <span class=\"o\">=</span> <span class=\"n\">gradient_table</span><span class=\"p\">(</span><span class=\"n\">btable</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">btable</span><span class=\"p\">[:,</span> <span class=\"mi\">1</span><span class=\"p\">:])</span>\n</pre></div>\n</div>\n<p>Let&#8217;s create a multi tensor with 2 fiber directions at 60 degrees.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">evals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">0.0015</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">],</span>\n                  <span class=\"p\">[</span><span class=\"mf\">0.0015</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">,</span> <span class=\"mf\">0.0003</span><span class=\"p\">]])</span>\n\n<span class=\"n\">directions</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"o\">-</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)]</span>\n\n<span class=\"n\">fractions</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">]</span>\n\n<span class=\"n\">signal</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">multi_tensor</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">evals</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">angles</span><span class=\"o\">=</span><span class=\"n\">directions</span><span class=\"p\">,</span>\n                         <span class=\"n\">fractions</span><span class=\"o\">=</span><span class=\"n\">fractions</span><span class=\"p\">,</span> <span class=\"n\">snr</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n\n<span class=\"n\">sphere</span> <span class=\"o\">=</span> <span class=\"n\">get_sphere</span><span class=\"p\">(</span><span class=\"s1\">&#39;symmetric724&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">subdivide</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">odf_gt</span> <span class=\"o\">=</span> <span class=\"n\">multi_tensor_odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">,</span> <span class=\"n\">evals</span><span class=\"p\">,</span> <span class=\"n\">angles</span><span class=\"o\">=</span><span class=\"n\">directions</span><span class=\"p\">,</span>\n                          <span class=\"n\">fractions</span><span class=\"o\">=</span><span class=\"n\">fractions</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Perform the reconstructions with standard DSI and DSI with deconvolution.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dsi_model</span> <span class=\"o\">=</span> <span class=\"n\">DiffusionSpectrumModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">)</span>\n\n<span class=\"n\">dsi_odf</span> <span class=\"o\">=</span> <span class=\"n\">dsi_model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">signal</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n\n<span class=\"n\">dsid_model</span> <span class=\"o\">=</span> <span class=\"n\">DiffusionSpectrumDeconvModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">)</span>\n\n<span class=\"n\">dsid_odf</span> <span class=\"o\">=</span> <span class=\"n\">dsid_model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">signal</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">odf</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Finally, we can visualize the ground truth ODF, together with the DSI and DSI\nwith deconvolution ODFs and observe that with the deconvolved method it is\neasier to resolve the correct fiber directions because the ODF is sharper.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"k\">import</span> <span class=\"n\">fvtk</span>\n\n<span class=\"n\">ren</span> <span class=\"o\">=</span> <span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">ren</span><span class=\"p\">()</span>\n\n<span class=\"n\">odfs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">((</span><span class=\"n\">odf_gt</span><span class=\"p\">,</span> <span class=\"n\">dsi_odf</span><span class=\"p\">,</span> <span class=\"n\">dsid_odf</span><span class=\"p\">))[:,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">]</span>\n\n<span class=\"n\">odf_actor</span> <span class=\"o\">=</span> <span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">sphere_funcs</span><span class=\"p\">(</span><span class=\"n\">odfs</span><span class=\"p\">,</span> <span class=\"n\">sphere</span><span class=\"p\">)</span>\n<span class=\"n\">odf_actor</span><span class=\"o\">.</span><span class=\"n\">RotateX</span><span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">)</span>\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">,</span> <span class=\"n\">odf_actor</span><span class=\"p\">)</span>\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;dsid.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id2\">\n<img alt=\"examples_built/dsid.png\" src=\"examples_built/dsid.png\" />\n<p class=\"caption\"><span class=\"caption-text\"><strong>Ground truth ODF (left), DSI ODF (middle), DSI with Deconvolution ODF(right)</strong></span></p>\n</div>\n<table class=\"docutils citation\" frame=\"void\" id=\"canales10\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id1\">[Canales10]</a></td><td>Canales-Rodriguez et al., Deconvolution in Diffusion Spectrum Imaging,\nNeuroimage, vol 50, no 1, 136-149, 2010.</td></tr>\n</tbody>\n</table>\n<div class=\"admonition-example-source-code admonition\">\n<p class=\"first admonition-title\">Example source code</p>\n<p class=\"last\">You can download <a class=\"reference download internal\" href=\"../../_downloads/reconst_dsid.py\" download=\"\"><code class=\"xref download docutils literal\"><span class=\"pre\">the</span> <span class=\"pre\">full</span> <span class=\"pre\">source</span> <span class=\"pre\">code</span> <span class=\"pre\">of</span> <span class=\"pre\">this</span> <span class=\"pre\">example</span></code></a>.\nThis same script is also included in the dipy source distribution under the\n<code class=\"file docutils literal\"><span class=\"pre\">doc/examples/</span></code> directory.</p>\n</div>\n</div>\n", "alabaster_version": "0.7.7", "display_toc": false, "title": "DSI Deconvolution vs DSI", "sourcename": "examples_built/reconst_dsid.txt", "customsidebar": null, "metatags": "", "current_page_name": "examples_built/reconst_dsid", "next": null, "rellinks": [["genindex", "General Index", "I", "index"], ["np-modindex", "Python Module Index", "", "modules"]], "meta": {}, "parents": [], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">DSI Deconvolution vs DSI</a></li>\n</ul>\n", "prev": null, "page_source_suffix": ".rst"}