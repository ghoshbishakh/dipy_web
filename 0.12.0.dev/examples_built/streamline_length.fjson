{"body": "<div class=\"section\" id=\"streamline-length-and-size-reduction\">\n<span id=\"example-streamline-length\"></span><h1>Streamline length and size reduction<a class=\"headerlink\" href=\"#streamline-length-and-size-reduction\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This example shows how to calculate the lengths of a set of streamlines and\nalso how to compress the streamlines without considerably reducing their\nlengths or overall shape.</p>\n<p>A streamline in Dipy is represented as a numpy array of size\n<span class=\"math\">\\((N \\times 3)\\)</span> where each row of the array represent a 3D point of the\nstreamline. A set of streamlines is represented with a list of\nnumpy arrays of size <span class=\"math\">\\((N_i \\times 3)\\)</span> for <span class=\"math\">\\(i=1:M\\)</span> where <span class=\"math\">\\(M\\)</span> is the\nnumber of streamlines in the set.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.utils</span> <span class=\"k\">import</span> <span class=\"n\">length</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.metrics</span> <span class=\"k\">import</span> <span class=\"n\">downsample</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.distances</span> <span class=\"k\">import</span> <span class=\"n\">approx_polygon_track</span>\n</pre></div>\n</div>\n<p>Let&#8217;s first create a simple simulation of a bundle of streamlines using\na cosine function.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">simulated_bundles</span><span class=\"p\">(</span><span class=\"n\">no_streamlines</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">n_pts</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n    <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">n_pts</span><span class=\"p\">)</span>\n\n    <span class=\"n\">bundle</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">no_streamlines</span><span class=\"p\">):</span>\n        <span class=\"n\">pts</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">((</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">t</span><span class=\"o\">/</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">t</span> <span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">T</span>\n        <span class=\"n\">bundle</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">pts</span><span class=\"p\">)</span>\n\n    <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"n\">no_streamlines</span><span class=\"p\">)</span>\n    <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">no_streamlines</span><span class=\"p\">)</span>\n\n    <span class=\"n\">bundle</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">10</span> <span class=\"o\">*</span> <span class=\"n\">streamline</span><span class=\"p\">[</span><span class=\"n\">start</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]:</span><span class=\"n\">end</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]]</span>\n              <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">streamline</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">bundle</span><span class=\"p\">)]</span>\n    <span class=\"n\">bundle</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ascontiguousarray</span><span class=\"p\">(</span><span class=\"n\">streamline</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">streamline</span> <span class=\"ow\">in</span> <span class=\"n\">bundle</span><span class=\"p\">]</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">bundle</span>\n\n\n<span class=\"n\">bundle</span> <span class=\"o\">=</span> <span class=\"n\">simulated_bundles</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">&#39;This bundle has </span><span class=\"si\">%d</span><span class=\"s1\"> streamlines&#39;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">bundle</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<p>This bundle has 50 streamlines.</p>\n<p>Using the <code class=\"docutils literal\"><span class=\"pre\">length</span></code> function we can retrieve the lengths of each streamline.\nBelow we show the histogram of the lengths of the streamlines.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">lengths</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"p\">(</span><span class=\"n\">bundle</span><span class=\"p\">))</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"n\">fig_hist</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">hist</span><span class=\"p\">(</span><span class=\"n\">lengths</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">&#39;burlywood&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Length&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_ylabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Count&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">&#39;length_histogram.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id1\">\n<img alt=\"../../_images/length_histogram.png\" src=\"../../_images/length_histogram.png\" />\n<p class=\"caption\"><span class=\"caption-text\"><strong>Histogram of lengths of the streamlines</strong></span></p>\n</div>\n<p><code class=\"docutils literal\"><span class=\"pre\">Length</span></code> will return the length in the units of the coordinate system that\nstreamlines are currently. So, if the streamlines are in world coordinates then\nthe lengths will be in millimeters (mm). If the streamlines are for example in\nnative image coordinates of voxel size 2mm isotropic then you will need to\nmultiply the lengths by 2 if you want them to correspond to mm. In this example\nwe process simulated data without units, however this information is good to have\nin mind when you calculate lengths with real data.</p>\n<p>Next, let&#8217;s find the number of points that each streamline has.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">n_pts</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">streamline</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">streamline</span> <span class=\"ow\">in</span> <span class=\"n\">bundle</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>Often, streamlines are represented with more points than what is actually\nnecessary for specific applications. Also, sometimes every streamline has\ndifferent number of points which could be of a trouble for some algorithms\n. The function <code class=\"docutils literal\"><span class=\"pre\">downsample</span></code> can be used to set the number of points of a\nstreamline at a specific number and at the same time enforce that all the\nsegments of the streamline will have equal length.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">bundle_downsampled</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">downsample</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">bundle</span><span class=\"p\">]</span>\n<span class=\"n\">n_pts_ds</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">bundle_downsampled</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>Alternatively, the function <code class=\"docutils literal\"><span class=\"pre\">approx_polygon_track</span></code> allows to reduce the number\nof points so that they are more points in curvy regions and less points in\nless curvy regions. In contrast with <code class=\"docutils literal\"><span class=\"pre\">downsample</span></code> it does not enforce that\nsegments should be of equal size.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">bundle_downsampled2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">approx_polygon_track</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"mf\">0.25</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">bundle</span><span class=\"p\">]</span>\n<span class=\"n\">n_pts_ds2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">streamline</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">streamline</span> <span class=\"ow\">in</span> <span class=\"n\">bundle_downsampled2</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>Both, <code class=\"docutils literal\"><span class=\"pre\">downsample</span></code> and <code class=\"docutils literal\"><span class=\"pre\">approx_polygon_track</span></code> can be thought as methods for\nlossy compression of streamlines.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"k\">import</span> <span class=\"n\">fvtk</span>\n\n<span class=\"n\">ren</span> <span class=\"o\">=</span> <span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">ren</span><span class=\"p\">()</span>\n<span class=\"n\">ren</span><span class=\"o\">.</span><span class=\"n\">SetBackground</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">white</span><span class=\"p\">)</span>\n<span class=\"n\">bundle_actor</span> <span class=\"o\">=</span> <span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">streamtube</span><span class=\"p\">(</span><span class=\"n\">bundle</span><span class=\"p\">,</span> <span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">red</span><span class=\"p\">,</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">)</span>\n\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">,</span> <span class=\"n\">bundle_actor</span><span class=\"p\">)</span>\n\n<span class=\"n\">bundle_actor2</span> <span class=\"o\">=</span> <span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">streamtube</span><span class=\"p\">(</span><span class=\"n\">bundle_downsampled</span><span class=\"p\">,</span> <span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">red</span><span class=\"p\">,</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">)</span>\n<span class=\"n\">bundle_actor2</span><span class=\"o\">.</span><span class=\"n\">SetPosition</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">bundle_actor3</span> <span class=\"o\">=</span> <span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">streamtube</span><span class=\"p\">(</span><span class=\"n\">bundle_downsampled2</span><span class=\"p\">,</span> <span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">colors</span><span class=\"o\">.</span><span class=\"n\">red</span><span class=\"p\">,</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">)</span>\n<span class=\"n\">bundle_actor3</span><span class=\"o\">.</span><span class=\"n\">SetPosition</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">80</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">,</span> <span class=\"n\">bundle_actor2</span><span class=\"p\">)</span>\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">,</span> <span class=\"n\">bundle_actor3</span><span class=\"p\">)</span>\n\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">camera</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">,</span> <span class=\"n\">pos</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">focal</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;simulated_cosine_bundle.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">900</span><span class=\"p\">,</span> <span class=\"mi\">900</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id2\">\n<img alt=\"../../_images/simulated_cosine_bundle.png\" src=\"../../_images/simulated_cosine_bundle.png\" />\n<p class=\"caption\"><span class=\"caption-text\"><strong>Initial bundle (down), downsampled at 12 equidistant points (middle), downsampled not equidistantly(up)</strong></span></p>\n</div>\n<p>From the figure above we can see that all 3 bundles look quite similar. However,\nwhen we plot the histogram of the number of points used for each streamline, it\nbecomes obvious that we have managed to reduce in a great amount the size of the\ninitial dataset.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"n\">fig_hist</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">hist</span><span class=\"p\">(</span><span class=\"n\">n_pts</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">,</span> <span class=\"n\">histtype</span><span class=\"o\">=</span><span class=\"s1\">&#39;step&#39;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;initial&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">hist</span><span class=\"p\">(</span><span class=\"n\">n_pts_ds</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">&#39;g&#39;</span><span class=\"p\">,</span> <span class=\"n\">histtype</span><span class=\"o\">=</span><span class=\"s1\">&#39;step&#39;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;downsample (12)&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">hist</span><span class=\"p\">(</span><span class=\"n\">n_pts_ds2</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span> <span class=\"n\">histtype</span><span class=\"o\">=</span><span class=\"s1\">&#39;step&#39;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;approx_polygon_track (0.25)&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Number of points&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_ylabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Count&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">&#39;n_pts_histogram.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id3\">\n<img alt=\"../../_images/n_pts_histogram.png\" src=\"../../_images/n_pts_histogram.png\" />\n<p class=\"caption\"><span class=\"caption-text\"><strong>Histogram of the number of points of the streamlines</strong></span></p>\n</div>\n<p>Finally, we can also show that the lengths of the streamlines haven&#8217;t changed\nconsiderably after applying the two methods of downsampling.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span></span><span class=\"n\">lengths_downsampled</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"p\">(</span><span class=\"n\">bundle_downsampled</span><span class=\"p\">))</span>\n<span class=\"n\">lengths_downsampled2</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"p\">(</span><span class=\"n\">bundle_downsampled2</span><span class=\"p\">))</span>\n\n<span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">lengths</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;initial&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">lengths_downsampled</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">&#39;g&#39;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;downsample (12)&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">lengths_downsampled2</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">&#39;approx_polygon_track (0.25)&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Streamline ID&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_ylabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Length&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">&#39;lengths_plots.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id4\">\n<img alt=\"../../_images/lengths_plots.png\" src=\"../../_images/lengths_plots.png\" />\n<p class=\"caption\"><span class=\"caption-text\"><strong>Lengths of each streamline for every one of the 3 bundles</strong></span></p>\n</div>\n<div class=\"admonition-example-source-code admonition\">\n<p class=\"first admonition-title\">Example source code</p>\n<p class=\"last\">You can download <a class=\"reference download internal\" href=\"../../_downloads/streamline_length.py\" download=\"\"><code class=\"xref download docutils literal\"><span class=\"pre\">the</span> <span class=\"pre\">full</span> <span class=\"pre\">source</span> <span class=\"pre\">code</span> <span class=\"pre\">of</span> <span class=\"pre\">this</span> <span class=\"pre\">example</span></code></a>.\nThis same script is also included in the dipy source distribution under the\n<code class=\"file docutils literal\"><span class=\"pre\">doc/examples/</span></code> directory.</p>\n</div>\n</div>\n", "alabaster_version": "0.7.7", "display_toc": false, "title": "Streamline length and size reduction", "sourcename": "examples_built/streamline_length.txt", "customsidebar": null, "metatags": "", "current_page_name": "examples_built/streamline_length", "next": null, "rellinks": [["genindex", "General Index", "I", "index"]], "meta": {}, "parents": [], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Streamline length and size reduction</a></li>\n</ul>\n", "prev": null, "page_source_suffix": ".rst"}