{"page_source_suffix": ".rst", "prev": null, "alabaster_version": "0.7.7", "body": "<div class=\"section\" id=\"module-dipy.external\">\n<span id=\"external\"></span><h1><code class=\"xref py py-mod docutils literal\"><span class=\"pre\">external</span></code><a class=\"headerlink\" href=\"#module-dipy.external\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Calls to external packages</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.external.test\" title=\"dipy.external.test\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">test</span></code></a></td>\n<td>Run tests for module using nose.</td>\n</tr>\n</tbody>\n</table>\n<div class=\"section\" id=\"module-dipy.external.fsl\">\n<span id=\"module-external-fsl\"></span><h2>Module: <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">external.fsl</span></code><a class=\"headerlink\" href=\"#module-dipy.external.fsl\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>FSL IO</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.Dpy\" title=\"dipy.external.fsl.Dpy\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Dpy</span></code></a>(fname[,&nbsp;mode,&nbsp;compression])</td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.FSLError\" title=\"dipy.external.fsl.FSLError\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">FSLError</span></code></a></td>\n<td>Class signals error in FSL processing</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.InTemporaryDirectory\" title=\"dipy.external.fsl.InTemporaryDirectory\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">InTemporaryDirectory</span></code></a>([suffix,&nbsp;prefix,&nbsp;dir])</td>\n<td>Create, return, and change directory to a temporary directory</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.Popen\" title=\"dipy.external.fsl.Popen\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">Popen</span></code></a>(args[,&nbsp;bufsize,&nbsp;executable,&nbsp;stdin,&nbsp;...])</td>\n<td><p class=\"rubric\">Methods</p>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.affine_transform\" title=\"dipy.external.fsl.affine_transform\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">affine_transform</span></code></a>(input,&nbsp;matrix[,&nbsp;offset,&nbsp;...])</td>\n<td>Apply an affine transformation.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.apply_warp\" title=\"dipy.external.fsl.apply_warp\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">apply_warp</span></code></a>(in_nii,&nbsp;affine_mat,&nbsp;nonlin_nii,&nbsp;...)</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.bet\" title=\"dipy.external.fsl.bet\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bet</span></code></a>(in_nii,&nbsp;out_nii[,&nbsp;options])</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.create_displacements\" title=\"dipy.external.fsl.create_displacements\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">create_displacements</span></code></a>(fin,&nbsp;fmat,&nbsp;fnonlin,&nbsp;...)</td>\n<td>Create displacements using FSL&#8217;s FLIRT and FNIRT tools</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.dcm2nii\" title=\"dipy.external.fsl.dcm2nii\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dcm2nii</span></code></a>(dname,&nbsp;outdir[,&nbsp;filt,&nbsp;options])</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.eddy_correct\" title=\"dipy.external.fsl.eddy_correct\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">eddy_correct</span></code></a>(in_nii,&nbsp;out_nii[,&nbsp;ref])</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.flirt2aff\" title=\"dipy.external.fsl.flirt2aff\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">flirt2aff</span></code></a>(mat,&nbsp;in_img,&nbsp;ref_img)</td>\n<td>Transform from <cite>in_img</cite> voxels to <cite>ref_img</cite> voxels given <cite>mat</cite></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.flirt2aff_files\" title=\"dipy.external.fsl.flirt2aff_files\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">flirt2aff_files</span></code></a>(matfile,&nbsp;in_fname,&nbsp;ref_fname)</td>\n<td>Map from <cite>in_fname</cite> image voxels to <cite>ref_fname</cite> voxels given <cite>matfile</cite></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.have_flirt\" title=\"dipy.external.fsl.have_flirt\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">have_flirt</span></code></a>()</td>\n<td>Return True if we can call flirt without error</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.mc\" title=\"dipy.external.fsl.mc\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">mc</span></code></a>(input,&nbsp;coordinates[,&nbsp;output,&nbsp;order,&nbsp;...])</td>\n<td>Map the input array to new coordinates by interpolation.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.pipe\" title=\"dipy.external.fsl.pipe\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">pipe</span></code></a>(cmd[,&nbsp;print_sto,&nbsp;print_ste])</td>\n<td>A tine pipeline system to run external tools.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.pjoin\" title=\"dipy.external.fsl.pjoin\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">pjoin</span></code></a>(a,&nbsp;*p)</td>\n<td>Join two or more pathname components, inserting &#8216;/&#8217; as needed.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.run_flirt_imgs\" title=\"dipy.external.fsl.run_flirt_imgs\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">run_flirt_imgs</span></code></a>(in_img,&nbsp;ref_img[,&nbsp;dof,&nbsp;flags])</td>\n<td>Run flirt on nibabel images, returning affine</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.warp_displacements\" title=\"dipy.external.fsl.warp_displacements\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">warp_displacements</span></code></a>(ffa,&nbsp;flaff,&nbsp;fdis,&nbsp;fref,&nbsp;ffaw)</td>\n<td>Warp an image using fsl displacements</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.warp_displacements_tracks\" title=\"dipy.external.fsl.warp_displacements_tracks\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">warp_displacements_tracks</span></code></a>(fdpy,&nbsp;ffa,&nbsp;fmat,&nbsp;...)</td>\n<td>Warp tracks from native space to the FMRIB58/MNI space</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.write_bvals_bvecs\" title=\"dipy.external.fsl.write_bvals_bvecs\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">write_bvals_bvecs</span></code></a>(bvals,&nbsp;bvecs[,&nbsp;outpath,&nbsp;...])</td>\n<td>Write FSL FDT bvals and bvecs files</td>\n</tr>\n</tbody>\n</table>\n<div class=\"section\" id=\"test\">\n<h3>test<a class=\"headerlink\" href=\"#test\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.external.test\">\n<code class=\"descclassname\">dipy.external.</code><code class=\"descname\">test</code><span class=\"sig-paren\">(</span><em>self</em>, <em>label='fast'</em>, <em>verbose=1</em>, <em>extra_argv=None</em>, <em>doctests=False</em>, <em>coverage=False</em>, <em>raise_warnings=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run tests for module using nose.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>label</strong> : {&#8216;fast&#8217;, &#8216;full&#8217;, &#8216;&#8217;, attribute identifier}, optional</p>\n<blockquote>\n<div><p>Identifies the tests to run. This can be a string to pass to\nthe nosetests executable with the &#8216;-A&#8217; option, or one of several\nspecial values.  Special values are:\n* &#8216;fast&#8217; - the default - which corresponds to the <code class=\"docutils literal\"><span class=\"pre\">nosetests</span> <span class=\"pre\">-A</span></code></p>\n<blockquote>\n<div><p>option of &#8216;not slow&#8217;.</p>\n</div></blockquote>\n<ul class=\"simple\">\n<li>&#8216;full&#8217; - fast (as above) and slow tests as in the\n&#8216;no -A&#8217; option to nosetests - this is the same as &#8216;&#8217;.</li>\n<li>None or &#8216;&#8217; - run all tests.</li>\n</ul>\n<p>attribute_identifier - string passed directly to nosetests as &#8216;-A&#8217;.</p>\n</div></blockquote>\n<p><strong>verbose</strong> : int, optional</p>\n<blockquote>\n<div><p>Verbosity value for test outputs, in the range 1-10. Default is 1.</p>\n</div></blockquote>\n<p><strong>extra_argv</strong> : list, optional</p>\n<blockquote>\n<div><p>List with any extra arguments to pass to nosetests.</p>\n</div></blockquote>\n<p><strong>doctests</strong> : bool, optional</p>\n<blockquote>\n<div><p>If True, run doctests in module. Default is False.</p>\n</div></blockquote>\n<p><strong>coverage</strong> : bool, optional</p>\n<blockquote>\n<div><p>If True, report coverage of NumPy code. Default is False.\n(This requires the <a href=\"#id1\"><span class=\"problematic\" id=\"id2\">`</span></a>coverage module:</p>\n<blockquote>\n<div><p>&lt;<a class=\"reference external\" href=\"http://nedbatchelder.com/code/modules/coverage.html\">http://nedbatchelder.com/code/modules/coverage.html</a>&gt;`_).</p>\n</div></blockquote>\n</div></blockquote>\n<p><strong>raise_warnings</strong> : str or sequence of warnings, optional</p>\n<blockquote>\n<div><p>This specifies which warnings to configure as &#8216;raise&#8217; instead\nof &#8216;warn&#8217; during the test execution.  Valid strings are:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>&#8220;develop&#8221; : equals <code class=\"docutils literal\"><span class=\"pre\">(DeprecationWarning,</span> <span class=\"pre\">RuntimeWarning)</span></code></li>\n<li>&#8220;release&#8221; : equals <code class=\"docutils literal\"><span class=\"pre\">()</span></code>, don&#8217;t raise on any warnings.</li>\n</ul>\n</div></blockquote>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>result</strong> : object</p>\n<blockquote class=\"last\">\n<div><p>Returns the result of running the tests as a\n<code class=\"docutils literal\"><span class=\"pre\">nose.result.TextTestResult</span></code> object.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>Each NumPy module exposes <cite>test</cite> in its namespace to run all tests for it.\nFor example, to run all tests for numpy.lib:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">()</span> \n</pre></div>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">()</span> \n<span class=\"go\">Running unit tests for numpy.lib</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">Ran 976 tests in 3.933s</span>\n</pre></div>\n</div>\n<p>OK</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">errors</span> \n<span class=\"go\">[]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">knownfail</span> \n<span class=\"go\">[]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dpy\">\n<h3><a class=\"reference internal\" href=\"#dipy.external.fsl.Dpy\" title=\"dipy.external.fsl.Dpy\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Dpy</span></code></a><a class=\"headerlink\" href=\"#dpy\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.external.fsl.Dpy\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">Dpy</code><span class=\"sig-paren\">(</span><em>fname</em>, <em>mode='r'</em>, <em>compression=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.Dpy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.Dpy.close\" title=\"dipy.external.fsl.Dpy.close\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">close</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.Dpy.read_track\" title=\"dipy.external.fsl.Dpy.read_track\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">read_track</span></code></a>()</td>\n<td>read one track each time</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.Dpy.read_tracks\" title=\"dipy.external.fsl.Dpy.read_tracks\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">read_tracks</span></code></a>()</td>\n<td>read the entire tractography</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.Dpy.read_tracksi\" title=\"dipy.external.fsl.Dpy.read_tracksi\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">read_tracksi</span></code></a>(indices)</td>\n<td>read tracks with specific indices</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.Dpy.version\" title=\"dipy.external.fsl.Dpy.version\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">version</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.Dpy.write_track\" title=\"dipy.external.fsl.Dpy.write_track\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">write_track</span></code></a>(track)</td>\n<td>write on track each time</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.Dpy.write_tracks\" title=\"dipy.external.fsl.Dpy.write_tracks\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">write_tracks</span></code></a>(T)</td>\n<td>write many tracks together</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.external.fsl.Dpy.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>fname</em>, <em>mode='r'</em>, <em>compression=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.Dpy.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Advanced storage system for tractography based on HDF5</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>fname</strong> : str, full filename</p>\n<p><strong>mode</strong> : &#8216;r&#8217; read</p>\n<blockquote>\n<div><p>&#8216;w&#8217; write\n&#8216;r+&#8217; read and write only if file already exists\n&#8216;a&#8217;  read and write even if file doesn&#8217;t exist (not used yet)</p>\n</div></blockquote>\n<p class=\"last\"><strong>compression</strong> : 0 no compression to 9 maximum compression</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">tempfile</span> <span class=\"k\">import</span> <span class=\"n\">mkstemp</span> <span class=\"c1\">#temp file</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">dipy.io.dpy</span> <span class=\"k\">import</span> <span class=\"n\">Dpy</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"n\">fname</span> <span class=\"o\">=</span> <span class=\"n\">mkstemp</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">fname</span> <span class=\"o\">=</span> <span class=\"n\">fname</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;.dpy&#39;</span> <span class=\"c1\">#add correct extension</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dpw</span> <span class=\"o\">=</span> <span class=\"n\">Dpy</span><span class=\"p\">(</span><span class=\"n\">fname</span><span class=\"p\">,</span><span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">A</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">((</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">B</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">A</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">C</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"n\">A</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dpw</span><span class=\"o\">.</span><span class=\"n\">write_track</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dpw</span><span class=\"o\">.</span><span class=\"n\">write_track</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dpw</span><span class=\"o\">.</span><span class=\"n\">write_track</span><span class=\"p\">(</span><span class=\"n\">C</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dpw</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dpr</span> <span class=\"o\">=</span> <span class=\"n\">Dpy</span><span class=\"p\">(</span><span class=\"n\">fname</span><span class=\"p\">,</span><span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">A</span><span class=\"o\">=</span><span class=\"n\">dpr</span><span class=\"o\">.</span><span class=\"n\">read_track</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">B</span><span class=\"o\">=</span><span class=\"n\">dpr</span><span class=\"o\">.</span><span class=\"n\">read_track</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"n\">dpr</span><span class=\"o\">.</span><span class=\"n\">read_tracksi</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dpr</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">fname</span><span class=\"p\">)</span> <span class=\"c1\">#delete file from disk</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.external.fsl.Dpy.close\">\n<code class=\"descname\">close</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.Dpy.close\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.external.fsl.Dpy.read_track\">\n<code class=\"descname\">read_track</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.Dpy.read_track\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>read one track each time</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.external.fsl.Dpy.read_tracks\">\n<code class=\"descname\">read_tracks</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.Dpy.read_tracks\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>read the entire tractography</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.external.fsl.Dpy.read_tracksi\">\n<code class=\"descname\">read_tracksi</code><span class=\"sig-paren\">(</span><em>indices</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.Dpy.read_tracksi\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>read tracks with specific indices</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.external.fsl.Dpy.version\">\n<code class=\"descname\">version</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.Dpy.version\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.external.fsl.Dpy.write_track\">\n<code class=\"descname\">write_track</code><span class=\"sig-paren\">(</span><em>track</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.Dpy.write_track\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>write on track each time</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.external.fsl.Dpy.write_tracks\">\n<code class=\"descname\">write_tracks</code><span class=\"sig-paren\">(</span><em>T</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.Dpy.write_tracks\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>write many tracks together</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"fslerror\">\n<h3><a class=\"reference internal\" href=\"#dipy.external.fsl.FSLError\" title=\"dipy.external.fsl.FSLError\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">FSLError</span></code></a><a class=\"headerlink\" href=\"#fslerror\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.external.fsl.FSLError\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">FSLError</code><a class=\"headerlink\" href=\"#dipy.external.fsl.FSLError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">Exception</span></code></p>\n<p>Class signals error in FSL processing</p>\n<p class=\"rubric\">Attributes</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">args</span></code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">with_traceback</span></code></td>\n<td>Exception.with_traceback(tb) &#8211; set self.__traceback__ to tb and return self.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.external.fsl.FSLError.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.FSLError.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize self.  See help(type(self)) for accurate signature.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"intemporarydirectory\">\n<h3><a class=\"reference internal\" href=\"#dipy.external.fsl.InTemporaryDirectory\" title=\"dipy.external.fsl.InTemporaryDirectory\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">InTemporaryDirectory</span></code></a><a class=\"headerlink\" href=\"#intemporarydirectory\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.external.fsl.InTemporaryDirectory\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">InTemporaryDirectory</code><span class=\"sig-paren\">(</span><em>suffix=''</em>, <em>prefix='tmp'</em>, <em>dir=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.InTemporaryDirectory\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal\"><span class=\"pre\">nibabel.tmpdirs.TemporaryDirectory</span></code></p>\n<p>Create, return, and change directory to a temporary directory</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_cwd</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">with</span> <span class=\"n\">InTemporaryDirectory</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">tmpdir</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;test.txt&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wt&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">&#39;some text&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"s1\">&#39;test.txt&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">tmpdir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;test.txt&#39;</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">tmpdir</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">my_cwd</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">cleanup</span></code>()</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.external.fsl.InTemporaryDirectory.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>suffix=''</em>, <em>prefix='tmp'</em>, <em>dir=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.InTemporaryDirectory.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"popen\">\n<h3><a class=\"reference internal\" href=\"#dipy.external.fsl.Popen\" title=\"dipy.external.fsl.Popen\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">Popen</span></code></a><a class=\"headerlink\" href=\"#popen\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"class\">\n<dt id=\"dipy.external.fsl.Popen\">\n<em class=\"property\">class </em><code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">Popen</code><span class=\"sig-paren\">(</span><em>args</em>, <em>bufsize=-1</em>, <em>executable=None</em>, <em>stdin=None</em>, <em>stdout=None</em>, <em>stderr=None</em>, <em>preexec_fn=None</em>, <em>close_fds=&lt;object object&gt;</em>, <em>shell=False</em>, <em>cwd=None</em>, <em>env=None</em>, <em>universal_newlines=False</em>, <em>startupinfo=None</em>, <em>creationflags=0</em>, <em>restore_signals=True</em>, <em>start_new_session=False</em>, <em>pass_fds=()</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.Popen\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference external\" href=\"https://docs.python.org/2/library/functions.html#object\" title=\"(in Python v2.7)\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code></a></p>\n<p class=\"rubric\">Methods</p>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.Popen.communicate\" title=\"dipy.external.fsl.Popen.communicate\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">communicate</span></code></a>([input,&nbsp;timeout])</td>\n<td>Interact with process: Send data to stdin.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.Popen.kill\" title=\"dipy.external.fsl.Popen.kill\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">kill</span></code></a>()</td>\n<td>Kill the process with SIGKILL</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.Popen.poll\" title=\"dipy.external.fsl.Popen.poll\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">poll</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.Popen.send_signal\" title=\"dipy.external.fsl.Popen.send_signal\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">send_signal</span></code></a>(sig)</td>\n<td>Send a signal to the process.</td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.Popen.terminate\" title=\"dipy.external.fsl.Popen.terminate\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">terminate</span></code></a>()</td>\n<td>Terminate the process with SIGTERM</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.external.fsl.Popen.wait\" title=\"dipy.external.fsl.Popen.wait\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">wait</span></code></a>([timeout,&nbsp;endtime])</td>\n<td>Wait for child process to terminate.</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"method\">\n<dt id=\"dipy.external.fsl.Popen.__init__\">\n<code class=\"descname\">__init__</code><span class=\"sig-paren\">(</span><em>args</em>, <em>bufsize=-1</em>, <em>executable=None</em>, <em>stdin=None</em>, <em>stdout=None</em>, <em>stderr=None</em>, <em>preexec_fn=None</em>, <em>close_fds=&lt;object object&gt;</em>, <em>shell=False</em>, <em>cwd=None</em>, <em>env=None</em>, <em>universal_newlines=False</em>, <em>startupinfo=None</em>, <em>creationflags=0</em>, <em>restore_signals=True</em>, <em>start_new_session=False</em>, <em>pass_fds=()</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.Popen.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create new Popen instance.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.external.fsl.Popen.communicate\">\n<code class=\"descname\">communicate</code><span class=\"sig-paren\">(</span><em>input=None</em>, <em>timeout=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.Popen.communicate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Interact with process: Send data to stdin.  Read data from\nstdout and stderr, until end-of-file is reached.  Wait for\nprocess to terminate.</p>\n<p>The optional &#8220;input&#8221; argument should be data to be sent to the\nchild process (if self.universal_newlines is True, this should\nbe a string; if it is False, &#8220;input&#8221; should be bytes), or\nNone, if no data should be sent to the child.</p>\n<p>communicate() returns a tuple (stdout, stderr).  These will be\nbytes or, if self.universal_newlines was True, a string.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.external.fsl.Popen.kill\">\n<code class=\"descname\">kill</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.Popen.kill\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Kill the process with SIGKILL</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.external.fsl.Popen.poll\">\n<code class=\"descname\">poll</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.Popen.poll\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.external.fsl.Popen.send_signal\">\n<code class=\"descname\">send_signal</code><span class=\"sig-paren\">(</span><em>sig</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.Popen.send_signal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Send a signal to the process.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.external.fsl.Popen.terminate\">\n<code class=\"descname\">terminate</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.Popen.terminate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Terminate the process with SIGTERM</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dipy.external.fsl.Popen.wait\">\n<code class=\"descname\">wait</code><span class=\"sig-paren\">(</span><em>timeout=None</em>, <em>endtime=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.Popen.wait\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Wait for child process to terminate.  Returns returncode\nattribute.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"affine-transform\">\n<h3>affine_transform<a class=\"headerlink\" href=\"#affine-transform\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.external.fsl.affine_transform\">\n<code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">affine_transform</code><span class=\"sig-paren\">(</span><em>input</em>, <em>matrix</em>, <em>offset=0.0</em>, <em>output_shape=None</em>, <em>output=None</em>, <em>order=3</em>, <em>mode='constant'</em>, <em>cval=0.0</em>, <em>prefilter=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.affine_transform\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Apply an affine transformation.</p>\n<p>The given matrix and offset are used to find for each point in the\noutput the corresponding coordinates in the input by an affine\ntransformation. The value of the input at those coordinates is\ndetermined by spline interpolation of the requested order. Points\noutside the boundaries of the input are filled according to the given\nmode.</p>\n<p>If a two-dimensional array is supplied to the matrix parameter,\ngiven an output image pixel index vector <code class=\"docutils literal\"><span class=\"pre\">o</span></code>, the pixel value\nis determined from the input image at position <code class=\"docutils literal\"><span class=\"pre\">np.dot(matrix,o)</span> <span class=\"pre\">+</span> <span class=\"pre\">offset</span></code>.</p>\n<p>A diagonal matrix can be specified by supplying a one-dimensional\narray-like to the matrix parameter, in which case a more efficient\nalgorithm is applied.</p>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p>Currently, the exact interpretation of the affine transformation\ndepends on whether the matrix is supplied as a one-dimensional or\ntwo-dimensional array. This is considered a bug, and starting from\nscipy 0.18.0, the behaviour for one-dimensional matrix arguments will\nbe modified to match the two-dimensional case.</p>\n<p class=\"last\">Until then, if a one-dimensional array is supplied to the matrix\nparameter, the output pixel value at index <code class=\"docutils literal\"><span class=\"pre\">o</span></code> is determined from\nthe input image at position <code class=\"docutils literal\"><span class=\"pre\">matrix</span> <span class=\"pre\">*</span> <span class=\"pre\">(o</span> <span class=\"pre\">+</span> <span class=\"pre\">offset)</span></code>.</p>\n</div>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>input</strong> : ndarray</p>\n<blockquote>\n<div><p>The input array.</p>\n</div></blockquote>\n<p><strong>matrix</strong> : ndarray</p>\n<blockquote>\n<div><p>The matrix must be two-dimensional or can also be given as a\none-dimensional sequence or array. In the latter case, it is assumed\nthat the matrix is diagonal. A more efficient algorithms is then\napplied that exploits the separability of the problem.</p>\n</div></blockquote>\n<p><strong>offset</strong> : float or sequence, optional</p>\n<blockquote>\n<div><p>The offset into the array where the transform is applied. If a float,\n<cite>offset</cite> is the same for each axis. If a sequence, <cite>offset</cite> should\ncontain one value for each axis.</p>\n</div></blockquote>\n<p><strong>output_shape</strong> : tuple of ints, optional</p>\n<blockquote>\n<div><p>Shape tuple.</p>\n</div></blockquote>\n<p><strong>output</strong> : ndarray or dtype, optional</p>\n<blockquote>\n<div><p>The array in which to place the output, or the dtype of the returned\narray.</p>\n</div></blockquote>\n<p><strong>order</strong> : int, optional</p>\n<blockquote>\n<div><p>The order of the spline interpolation, default is 3.\nThe order has to be in the range 0-5.</p>\n</div></blockquote>\n<p><strong>mode</strong> : str, optional</p>\n<blockquote>\n<div><p>Points outside the boundaries of the input are filled according\nto the given mode (&#8216;constant&#8217;, &#8216;nearest&#8217;, &#8216;reflect&#8217; or &#8216;wrap&#8217;).\nDefault is &#8216;constant&#8217;.</p>\n</div></blockquote>\n<p><strong>cval</strong> : scalar, optional</p>\n<blockquote>\n<div><p>Value used for points outside the boundaries of the input if\n<code class=\"docutils literal\"><span class=\"pre\">mode='constant'</span></code>. Default is 0.0</p>\n</div></blockquote>\n<p><strong>prefilter</strong> : bool, optional</p>\n<blockquote>\n<div><p>The parameter prefilter determines if the input is pre-filtered with\n<cite>spline_filter</cite> before interpolation (necessary for spline\ninterpolation of order &gt; 1).  If False, it is assumed that the input is\nalready filtered. Default is True.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>affine_transform</strong> : ndarray or None</p>\n<blockquote class=\"last\">\n<div><p>The transformed input. If <cite>output</cite> is given as a parameter, None is\nreturned.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"apply-warp\">\n<h3>apply_warp<a class=\"headerlink\" href=\"#apply-warp\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.external.fsl.apply_warp\">\n<code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">apply_warp</code><span class=\"sig-paren\">(</span><em>in_nii</em>, <em>affine_mat</em>, <em>nonlin_nii</em>, <em>out_nii</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.apply_warp\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"bet\">\n<h3>bet<a class=\"headerlink\" href=\"#bet\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.external.fsl.bet\">\n<code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">bet</code><span class=\"sig-paren\">(</span><em>in_nii</em>, <em>out_nii</em>, <em>options=' -F -f .2 -g 0'</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.bet\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"create-displacements\">\n<h3>create_displacements<a class=\"headerlink\" href=\"#create-displacements\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.external.fsl.create_displacements\">\n<code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">create_displacements</code><span class=\"sig-paren\">(</span><em>fin</em>, <em>fmat</em>, <em>fnonlin</em>, <em>finvw</em>, <em>fdisp</em>, <em>fdispa</em>, <em>fref</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.create_displacements\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create displacements using FSL&#8217;s FLIRT and FNIRT tools</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>fin</strong> : filename of initial source image</p>\n<p><strong>fmat</strong> : filename of .mat  (flirt)</p>\n<p><strong>fnonlin</strong> :  filename of fnirt output</p>\n<p><strong>finvw</strong> : filename of invwarp displacements (invwarp)</p>\n<p><strong>fdis</strong> : filename of fnirtfileutils</p>\n<p><strong>fdisa</strong> :  filename of fnirtfileutils (with other parameters)</p>\n<p class=\"last\"><strong>fref</strong> : filename of reference image e.g. (FMRIB58_FA_1mm.nii.gz)</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"dcm2nii\">\n<h3>dcm2nii<a class=\"headerlink\" href=\"#dcm2nii\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.external.fsl.dcm2nii\">\n<code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">dcm2nii</code><span class=\"sig-paren\">(</span><em>dname</em>, <em>outdir</em>, <em>filt='*.dcm'</em>, <em>options='-d n -g n -i n -o'</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.dcm2nii\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"eddy-correct\">\n<h3>eddy_correct<a class=\"headerlink\" href=\"#eddy-correct\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.external.fsl.eddy_correct\">\n<code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">eddy_correct</code><span class=\"sig-paren\">(</span><em>in_nii</em>, <em>out_nii</em>, <em>ref=0</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.eddy_correct\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"flirt2aff\">\n<h3>flirt2aff<a class=\"headerlink\" href=\"#flirt2aff\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.external.fsl.flirt2aff\">\n<code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">flirt2aff</code><span class=\"sig-paren\">(</span><em>mat</em>, <em>in_img</em>, <em>ref_img</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.flirt2aff\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Transform from <cite>in_img</cite> voxels to <cite>ref_img</cite> voxels given <cite>mat</cite></p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>mat</strong> : (4,4) array</p>\n<blockquote>\n<div><p>contents (as array) of output <code class=\"docutils literal\"><span class=\"pre\">-omat</span></code> transformation file from flirt</p>\n</div></blockquote>\n<p><strong>in_img</strong> : img</p>\n<blockquote>\n<div><p>image passed (as filename) to flirt as <code class=\"docutils literal\"><span class=\"pre\">-in</span></code> image</p>\n</div></blockquote>\n<p><strong>ref_img</strong> : img</p>\n<blockquote>\n<div><p>image passed (as filename) to flirt as <code class=\"docutils literal\"><span class=\"pre\">-ref</span></code> image</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>aff</strong> : (4,4) array</p>\n<blockquote class=\"last\">\n<div><p>Transform from voxel coordinates in <code class=\"docutils literal\"><span class=\"pre\">in_img</span></code> to voxel coordinates in\n<code class=\"docutils literal\"><span class=\"pre\">ref_img</span></code></p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>Thanks to Mark Jenkinson and Jesper Andersson for the correct statements\nhere, apologies for any errors we&#8217;ve added.</p>\n<p><code class=\"docutils literal\"><span class=\"pre\">flirt</span></code> registers an <code class=\"docutils literal\"><span class=\"pre\">in</span></code> image to a <code class=\"docutils literal\"><span class=\"pre\">ref</span></code> image.  It can produce\n(with the <code class=\"docutils literal\"><span class=\"pre\">-omat</span></code> option) - a 4 x 4 affine matrix giving the mapping from\n<em>inspace</em> to <em>refspace</em>.</p>\n<p>The rest of this note is to specify what <em>inspace</em> and <em>refspace</em> are.</p>\n<p>In what follows, a <em>voxtrans</em> for an image is the 4 by 4 affine\n<code class=\"docutils literal\"><span class=\"pre\">np.diag([vox_i,</span> <span class=\"pre\">vox_j,</span> <span class=\"pre\">vox_k,</span> <span class=\"pre\">1])</span></code> where <code class=\"docutils literal\"><span class=\"pre\">vox_i</span></code> etc are the voxel\nsizes for the first second and third voxel dimension.  <code class=\"docutils literal\"><span class=\"pre\">vox_i</span></code> etc are\nalways positive.</p>\n<p>If the input image has an affine with a negative determinant, then the\nmapping from voxel coordinates in the input image to <em>inspace</em> is simply\n<em>voxtrans</em> for the input image.  If the reference image has a negative\ndeterminant, the mapping from voxel space in the reference image to\n<em>refspace</em> is simply <em>voxtrans</em> for the reference image.</p>\n<p>A negative determinant for the image affine is the common case, of an image\nwith a x voxel flip.  Analyze images don&#8217;t store affines and flirt assumes\na negative determinant in these cases.</p>\n<p>For positive determinant affines, flirt starts <em>inspace</em> and / or\n<em>refspace</em> with an x voxel flip.  The mapping implied for an x voxel flip\nfor image with shape (N_i, N_j, N_k) is:</p>\n<blockquote>\n<div><dl class=\"docutils\">\n<dt>[[-1, 0, 0, N_i - 1],</dt>\n<dd>[ 0, 1, 0,       0],\n[ 0, 0, 1,       0],\n[ 0, 0, 0,       1]]</dd>\n</dl>\n</div></blockquote>\n<p>If the input image has an affine with a positive determinant, then mapping\nfrom input image voxel coordinates to <em>inspace</em> is <code class=\"docutils literal\"><span class=\"pre\">np.dot(input_voxtrans,</span>\n<span class=\"pre\">input_x_flip)</span></code> - where <code class=\"docutils literal\"><span class=\"pre\">input_x_flip</span></code> is the matrix above with <code class=\"docutils literal\"><span class=\"pre\">N_i</span></code>\ngiven by the input image first axis length.  Similarly the mapping from\nreference voxel coordinates to <em>refspace</em>, if the reference image has a\npositive determinant, is <code class=\"docutils literal\"><span class=\"pre\">np.dot(ref_voxtrans,</span> <span class=\"pre\">ref_x_flip)</span></code> - where\n<code class=\"docutils literal\"><span class=\"pre\">ref_x_flip</span></code> is the matrix above with <code class=\"docutils literal\"><span class=\"pre\">N_i</span></code> given by the reference\nimage first axis length.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"flirt2aff-files\">\n<h3>flirt2aff_files<a class=\"headerlink\" href=\"#flirt2aff-files\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.external.fsl.flirt2aff_files\">\n<code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">flirt2aff_files</code><span class=\"sig-paren\">(</span><em>matfile</em>, <em>in_fname</em>, <em>ref_fname</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.flirt2aff_files\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Map from <cite>in_fname</cite> image voxels to <cite>ref_fname</cite> voxels given <cite>matfile</cite></p>\n<p>See <a class=\"reference internal\" href=\"#dipy.external.fsl.flirt2aff\" title=\"dipy.external.fsl.flirt2aff\"><code class=\"xref py py-func docutils literal\"><span class=\"pre\">flirt2aff()</span></code></a> docstring for details.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>matfile</strong> : str</p>\n<blockquote>\n<div><p>filename of output <code class=\"docutils literal\"><span class=\"pre\">-omat</span></code> transformation file from flirt</p>\n</div></blockquote>\n<p><strong>in_fname</strong> : str</p>\n<blockquote>\n<div><p>filename for image passed to flirt as <code class=\"docutils literal\"><span class=\"pre\">-in</span></code> image</p>\n</div></blockquote>\n<p><strong>ref_fname</strong> : str</p>\n<blockquote>\n<div><p>filename for image passed to flirt as <code class=\"docutils literal\"><span class=\"pre\">-ref</span></code> image</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>aff</strong> : (4,4) array</p>\n<blockquote class=\"last\">\n<div><p>Transform from voxel coordinates in image for <code class=\"docutils literal\"><span class=\"pre\">in_fname</span></code> to voxel\ncoordinates in image for <code class=\"docutils literal\"><span class=\"pre\">ref_fname</span></code></p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"have-flirt\">\n<h3>have_flirt<a class=\"headerlink\" href=\"#have-flirt\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.external.fsl.have_flirt\">\n<code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">have_flirt</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.have_flirt\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return True if we can call flirt without error</p>\n<p>Relies on the fact that flirt produces text on stdout when called with no\narguments</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"mc\">\n<h3>mc<a class=\"headerlink\" href=\"#mc\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.external.fsl.mc\">\n<code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">mc</code><span class=\"sig-paren\">(</span><em>input</em>, <em>coordinates</em>, <em>output=None</em>, <em>order=3</em>, <em>mode='constant'</em>, <em>cval=0.0</em>, <em>prefilter=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.mc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Map the input array to new coordinates by interpolation.</p>\n<p>The array of coordinates is used to find, for each point in the output,\nthe corresponding coordinates in the input. The value of the input at\nthose coordinates is determined by spline interpolation of the\nrequested order.</p>\n<p>The shape of the output is derived from that of the coordinate\narray by dropping the first axis. The values of the array along\nthe first axis are the coordinates in the input array at which the\noutput value is found.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>input</strong> : ndarray</p>\n<blockquote>\n<div><p>The input array.</p>\n</div></blockquote>\n<p><strong>coordinates</strong> : array_like</p>\n<blockquote>\n<div><p>The coordinates at which <cite>input</cite> is evaluated.</p>\n</div></blockquote>\n<p><strong>output</strong> : ndarray or dtype, optional</p>\n<blockquote>\n<div><p>The array in which to place the output, or the dtype of the returned\narray.</p>\n</div></blockquote>\n<p><strong>order</strong> : int, optional</p>\n<blockquote>\n<div><p>The order of the spline interpolation, default is 3.\nThe order has to be in the range 0-5.</p>\n</div></blockquote>\n<p><strong>mode</strong> : str, optional</p>\n<blockquote>\n<div><p>Points outside the boundaries of the input are filled according\nto the given mode (&#8216;constant&#8217;, &#8216;nearest&#8217;, &#8216;reflect&#8217; or &#8216;wrap&#8217;).\nDefault is &#8216;constant&#8217;.</p>\n</div></blockquote>\n<p><strong>cval</strong> : scalar, optional</p>\n<blockquote>\n<div><p>Value used for points outside the boundaries of the input if\n<code class=\"docutils literal\"><span class=\"pre\">mode='constant'</span></code>. Default is 0.0</p>\n</div></blockquote>\n<p><strong>prefilter</strong> : bool, optional</p>\n<blockquote>\n<div><p>The parameter prefilter determines if the input is pre-filtered with\n<cite>spline_filter</cite> before interpolation (necessary for spline\ninterpolation of order &gt; 1).  If False, it is assumed that the input is\nalready filtered. Default is True.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>map_coordinates</strong> : ndarray</p>\n<blockquote class=\"last\">\n<div><p>The result of transforming the input. The shape of the output is\nderived from that of <cite>coordinates</cite> by dropping the first axis.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">spline_filter</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">geometric_transform</span></code>, <code class=\"xref py py-obj docutils literal\"><span class=\"pre\">scipy.interpolate</span></code></p>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">scipy</span> <span class=\"k\">import</span> <span class=\"n\">ndimage</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mf\">12.</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span>\n<span class=\"go\">array([[  0.,   1.,   2.],</span>\n<span class=\"go\">       [  3.,   4.,   5.],</span>\n<span class=\"go\">       [  6.,   7.,   8.],</span>\n<span class=\"go\">       [  9.,  10.,  11.]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">map_coordinates</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"p\">[[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]],</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 2.,  7.])</span>\n</pre></div>\n</div>\n<p>Above, the interpolated value of a[0.5, 0.5] gives output[0], while\na[2, 1] is output[1].</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">inds</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">map_coordinates</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">inds</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">cval</span><span class=\"o\">=-</span><span class=\"mf\">33.3</span><span class=\"p\">)</span>\n<span class=\"go\">array([  2. , -33.3])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">map_coordinates</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">inds</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;nearest&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">array([ 2.,  8.])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ndimage</span><span class=\"o\">.</span><span class=\"n\">map_coordinates</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">inds</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">cval</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">output</span><span class=\"o\">=</span><span class=\"nb\">bool</span><span class=\"p\">)</span>\n<span class=\"go\">array([ True, False], dtype=bool)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"pipe\">\n<h3>pipe<a class=\"headerlink\" href=\"#pipe\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.external.fsl.pipe\">\n<code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">pipe</code><span class=\"sig-paren\">(</span><em>cmd</em>, <em>print_sto=True</em>, <em>print_ste=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.pipe\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A tine pipeline system to run external tools.</p>\n<p>For more advanced pipelining use nipype <a class=\"reference external\" href=\"http://www.nipy.org/nipype\">http://www.nipy.org/nipype</a></p>\n<dl class=\"docutils\">\n<dt>cmd</dt>\n <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">String</span><dd>Command line to be run</dd>\n<dt>print_sto</dt>\n <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">boolean</span><dd>Print standard output (stdout) or not (default: True)</dd>\n<dt>print_ste</dt>\n <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">boolean</span><dd>Print standard error (stderr) or not (default: True)</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"pjoin\">\n<h3>pjoin<a class=\"headerlink\" href=\"#pjoin\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.external.fsl.pjoin\">\n<code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">pjoin</code><span class=\"sig-paren\">(</span><em>a</em>, <em>*p</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.pjoin\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Join two or more pathname components, inserting &#8216;/&#8217; as needed.\nIf any component is an absolute path, all previous path components\nwill be discarded.  An empty last part will result in a path that\nends with a separator.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"run-flirt-imgs\">\n<h3>run_flirt_imgs<a class=\"headerlink\" href=\"#run-flirt-imgs\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.external.fsl.run_flirt_imgs\">\n<code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">run_flirt_imgs</code><span class=\"sig-paren\">(</span><em>in_img</em>, <em>ref_img</em>, <em>dof=6</em>, <em>flags=''</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.run_flirt_imgs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run flirt on nibabel images, returning affine</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>in_img</strong> : <cite>SpatialImage</cite></p>\n<blockquote>\n<div><p>image to register</p>\n</div></blockquote>\n<p><strong>ref_img</strong> : <cite>SpatialImage</cite></p>\n<blockquote>\n<div><p>image to register to</p>\n</div></blockquote>\n<p><strong>dof</strong> : int, optional</p>\n<blockquote>\n<div><p>degrees of freedom for registration (default 6)</p>\n</div></blockquote>\n<p><strong>flags</strong> : str, optional</p>\n<blockquote>\n<div><p>other flags to pass to flirt command string</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>in_vox2out_vox</strong> : (4,4) ndarray</p>\n<blockquote class=\"last\">\n<div><p>affine such that, if <code class=\"docutils literal\"><span class=\"pre\">[i,</span> <span class=\"pre\">j,</span> <span class=\"pre\">k]</span></code> is a coordinate in voxels in the\n<cite>in_img</cite>, and <code class=\"docutils literal\"><span class=\"pre\">[p,</span> <span class=\"pre\">q,</span> <span class=\"pre\">r]</span></code> are the equivalent voxel coordinates in the\nreference image, then\n<a href=\"#id3\"><span class=\"problematic\" id=\"id4\">``</span></a>[p, q, r] = np.dot(in_vox2out_vox[:3,:3]),</p>\n<blockquote>\n<div><p>[i, j, k] + in_vox2out_vox[:3,3])``</p>\n</div></blockquote>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"warp-displacements\">\n<h3>warp_displacements<a class=\"headerlink\" href=\"#warp-displacements\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.external.fsl.warp_displacements\">\n<code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">warp_displacements</code><span class=\"sig-paren\">(</span><em>ffa</em>, <em>flaff</em>, <em>fdis</em>, <em>fref</em>, <em>ffaw</em>, <em>order=1</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.warp_displacements\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Warp an image using fsl displacements</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>ffa</strong> : filename of nifti to be warped</p>\n<p><strong>flaff</strong> : filename of .mat  (flirt)</p>\n<p><strong>fdis</strong> :  filename of displacements (fnirtfileutils)</p>\n<p><strong>fref</strong> : filename of reference volume e.g. (FMRIB58_FA_1mm.nii.gz)</p>\n<p class=\"last\"><strong>ffaw</strong> : filename for the output warped image</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"warp-displacements-tracks\">\n<h3>warp_displacements_tracks<a class=\"headerlink\" href=\"#warp-displacements-tracks\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.external.fsl.warp_displacements_tracks\">\n<code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">warp_displacements_tracks</code><span class=\"sig-paren\">(</span><em>fdpy</em>, <em>ffa</em>, <em>fmat</em>, <em>finv</em>, <em>fdis</em>, <em>fdisa</em>, <em>fref</em>, <em>fdpyw</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.warp_displacements_tracks\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Warp tracks from native space to the FMRIB58/MNI space</p>\n<p>We use here the fsl displacements. Have a look at create_displacements to\nsee an example of how to use these displacements.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>fdpy</strong> : filename of the .dpy file with the tractography</p>\n<p><strong>ffa</strong> : filename of nifti to be warped</p>\n<p><strong>fmat</strong> : filename of .mat  (flirt)</p>\n<p><strong>fdis</strong> :  filename of displacements (fnirtfileutils)</p>\n<p><strong>fdisa</strong> :  filename of displacements (fnirtfileutils + affine)</p>\n<p><strong>finv</strong> : filename of invwarp displacements (invwarp)</p>\n<p><strong>fref</strong> : filename of reference volume e.g. (FMRIB58_FA_1mm.nii.gz)</p>\n<p class=\"last\"><strong>fdpyw</strong> : filename of the warped tractography</p>\n</td>\n</tr>\n</tbody>\n</table>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"#dipy.external.fsl.create_displacements\" title=\"dipy.external.fsl.create_displacements\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">dipy.external.fsl.create_displacements</span></code></a></p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"write-bvals-bvecs\">\n<h3>write_bvals_bvecs<a class=\"headerlink\" href=\"#write-bvals-bvecs\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"dipy.external.fsl.write_bvals_bvecs\">\n<code class=\"descclassname\">dipy.external.fsl.</code><code class=\"descname\">write_bvals_bvecs</code><span class=\"sig-paren\">(</span><em>bvals</em>, <em>bvecs</em>, <em>outpath=None</em>, <em>prefix=''</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.external.fsl.write_bvals_bvecs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Write FSL FDT bvals and bvecs files</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>bvals</strong> : (N,) sequence</p>\n<blockquote>\n<div><p>Vector with diffusion gradient strength (one per diffusion\nacquisition, N=no of acquisitions)</p>\n</div></blockquote>\n<p><strong>bvecs</strong> : (N, 3) array-like</p>\n<blockquote>\n<div><p>diffusion gradient directions</p>\n</div></blockquote>\n<p><strong>outpath</strong> : None or str</p>\n<blockquote>\n<div><p>path to write FDT bvals, bvecs text files\nNone results in current working directory.</p>\n</div></blockquote>\n<p><strong>prefix</strong> : str</p>\n<blockquote class=\"last\">\n<div><p>prefix for bvals, bvecs files in directory.  Defaults to &#8216;&#8217;</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</div>\n</div>\n</div>\n", "parents": [{"link": "../../documentation/", "title": "Documentation"}, {"link": "../", "title": "API Reference"}], "metatags": "", "title": "<code class=\"docutils literal\"><span class=\"pre\">external</span></code>", "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\"><code class=\"docutils literal\"><span class=\"pre\">external</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#module-dipy.external.fsl\">Module: <code class=\"docutils literal\"><span class=\"pre\">external.fsl</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#test\">test</a></li>\n<li><a class=\"reference internal\" href=\"#dpy\"><code class=\"docutils literal\"><span class=\"pre\">Dpy</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#fslerror\"><code class=\"docutils literal\"><span class=\"pre\">FSLError</span></code></a><ul>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#intemporarydirectory\"><code class=\"docutils literal\"><span class=\"pre\">InTemporaryDirectory</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#popen\"><code class=\"docutils literal\"><span class=\"pre\">Popen</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#affine-transform\">affine_transform</a></li>\n<li><a class=\"reference internal\" href=\"#apply-warp\">apply_warp</a></li>\n<li><a class=\"reference internal\" href=\"#bet\">bet</a></li>\n<li><a class=\"reference internal\" href=\"#create-displacements\">create_displacements</a></li>\n<li><a class=\"reference internal\" href=\"#dcm2nii\">dcm2nii</a></li>\n<li><a class=\"reference internal\" href=\"#eddy-correct\">eddy_correct</a></li>\n<li><a class=\"reference internal\" href=\"#flirt2aff\">flirt2aff</a></li>\n<li><a class=\"reference internal\" href=\"#flirt2aff-files\">flirt2aff_files</a></li>\n<li><a class=\"reference internal\" href=\"#have-flirt\">have_flirt</a></li>\n<li><a class=\"reference internal\" href=\"#mc\">mc</a></li>\n<li><a class=\"reference internal\" href=\"#pipe\">pipe</a></li>\n<li><a class=\"reference internal\" href=\"#pjoin\">pjoin</a></li>\n<li><a class=\"reference internal\" href=\"#run-flirt-imgs\">run_flirt_imgs</a></li>\n<li><a class=\"reference internal\" href=\"#warp-displacements\">warp_displacements</a></li>\n<li><a class=\"reference internal\" href=\"#warp-displacements-tracks\">warp_displacements_tracks</a></li>\n<li><a class=\"reference internal\" href=\"#write-bvals-bvecs\">write_bvals_bvecs</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "current_page_name": "reference/dipy.external", "next": null, "meta": {}, "rellinks": [["genindex", "General Index", "I", "index"]], "display_toc": true, "sourcename": "reference/dipy.external.txt", "customsidebar": null}