{"metatags": "", "current_page_name": "reference/dipy", "title": "<code class=\"docutils literal\"><span class=\"pre\">dipy</span></code>", "parents": [{"title": "Documentation", "link": "../../documentation/"}, {"title": "API Reference", "link": "../"}], "alabaster_version": "0.7.7", "customsidebar": null, "sidebars": null, "prev": {"title": "API Reference", "link": "../"}, "page_source_suffix": ".rst", "sourcename": "reference/dipy.txt", "meta": {}, "next": {"title": "<code class=\"docutils literal\"><span class=\"pre\">__config__</span></code>", "link": "../dipy.__config__/"}, "display_toc": true, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\"><code class=\"docutils literal\"><span class=\"pre\">dipy</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#diffusion-imaging-in-python\">Diffusion Imaging in Python</a><ul>\n<li><a class=\"reference internal\" href=\"#subpackages\">Subpackages</a></li>\n<li><a class=\"reference internal\" href=\"#utilities\">Utilities</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#bench\">bench</a></li>\n<li><a class=\"reference internal\" href=\"#get-info\">get_info</a></li>\n<li><a class=\"reference internal\" href=\"#test\">test</a></li>\n</ul>\n</li>\n</ul>\n", "rellinks": [["genindex", "General Index", "I", "index"], ["reference/dipy.__config__", "<code class=\"docutils literal\"><span class=\"pre\">__config__</span></code>", "N", "next"], ["reference/index", "API Reference", "P", "previous"]], "body": "<div class=\"section\" id=\"module-dipy\">\n<span id=\"dipy\"></span><h1><a class=\"reference internal\" href=\"#module-dipy\" title=\"dipy\"><code class=\"xref py py-mod docutils literal\"><span class=\"pre\">dipy</span></code></a><a class=\"headerlink\" href=\"#module-dipy\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"diffusion-imaging-in-python\">\n<h2>Diffusion Imaging in Python<a class=\"headerlink\" href=\"#diffusion-imaging-in-python\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>For more information, please visit <a class=\"reference external\" href=\"http://dipy.org\">http://dipy.org</a></p>\n<div class=\"section\" id=\"subpackages\">\n<h3>Subpackages<a class=\"headerlink\" href=\"#subpackages\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">align</span>         <span class=\"o\">--</span> <span class=\"n\">Registration</span><span class=\"p\">,</span> <span class=\"n\">streamline</span> <span class=\"n\">alignment</span><span class=\"p\">,</span> <span class=\"n\">volume</span> <span class=\"n\">resampling</span>\n<span class=\"n\">boots</span>         <span class=\"o\">--</span> <span class=\"n\">Bootstrapping</span> <span class=\"n\">algorithms</span>\n<span class=\"n\">core</span>          <span class=\"o\">--</span> <span class=\"n\">Spheres</span><span class=\"p\">,</span> <span class=\"n\">gradient</span> <span class=\"n\">tables</span>\n<span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">geometry</span> <span class=\"o\">--</span> <span class=\"n\">Spherical</span> <span class=\"n\">geometry</span><span class=\"p\">,</span> <span class=\"n\">coordinate</span> <span class=\"ow\">and</span> <span class=\"n\">vector</span> <span class=\"n\">manipulation</span>\n<span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">meshes</span>   <span class=\"o\">--</span> <span class=\"n\">Point</span> <span class=\"n\">distributions</span> <span class=\"n\">on</span> <span class=\"n\">the</span> <span class=\"n\">sphere</span>\n<span class=\"n\">data</span>          <span class=\"o\">--</span> <span class=\"n\">Small</span> <span class=\"n\">testing</span> <span class=\"n\">datasets</span>\n<span class=\"n\">external</span>      <span class=\"o\">--</span> <span class=\"n\">Interfaces</span> <span class=\"n\">to</span> <span class=\"n\">external</span> <span class=\"n\">tools</span> <span class=\"n\">such</span> <span class=\"k\">as</span> <span class=\"n\">FSL</span>\n<span class=\"n\">io</span>            <span class=\"o\">--</span> <span class=\"n\">Loading</span><span class=\"o\">/</span><span class=\"n\">saving</span> <span class=\"n\">of</span> <span class=\"n\">dpy</span> <span class=\"n\">datasets</span>\n<span class=\"n\">reconst</span>       <span class=\"o\">--</span> <span class=\"n\">Signal</span> <span class=\"n\">reconstruction</span> <span class=\"n\">modules</span> <span class=\"p\">(</span><span class=\"n\">tensor</span><span class=\"p\">,</span> <span class=\"n\">spherical</span> <span class=\"n\">harmonics</span><span class=\"p\">,</span>\n                 <span class=\"n\">diffusion</span> <span class=\"n\">spectrum</span><span class=\"p\">,</span> <span class=\"n\">etc</span><span class=\"o\">.</span><span class=\"p\">)</span>\n<span class=\"n\">segment</span>       <span class=\"o\">--</span> <span class=\"n\">Tractography</span> <span class=\"n\">segmentation</span>\n<span class=\"n\">sims</span>          <span class=\"o\">--</span> <span class=\"n\">MRI</span> <span class=\"n\">phantom</span> <span class=\"n\">signal</span> <span class=\"n\">simulation</span>\n<span class=\"n\">tracking</span>      <span class=\"o\">--</span> <span class=\"n\">Tractography</span><span class=\"p\">,</span> <span class=\"n\">metrics</span> <span class=\"k\">for</span> <span class=\"n\">streamlines</span>\n<span class=\"n\">viz</span>           <span class=\"o\">--</span> <span class=\"n\">Visualization</span> <span class=\"ow\">and</span> <span class=\"n\">GUIs</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"utilities\">\n<h3>Utilities<a class=\"headerlink\" href=\"#utilities\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">test</span>          <span class=\"o\">--</span> <span class=\"n\">Run</span> <span class=\"n\">unittests</span>\n<span class=\"n\">__version__</span>   <span class=\"o\">--</span> <span class=\"n\">Dipy</span> <span class=\"n\">version</span>\n</pre></div>\n</div>\n</div>\n</div>\n<table border=\"1\" class=\"longtable docutils\">\n<colgroup>\n<col width=\"10%\" />\n<col width=\"90%\" />\n</colgroup>\n<tbody valign=\"top\">\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.bench\" title=\"dipy.bench\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">bench</span></code></a></td>\n<td>Run benchmarks for module using nose.</td>\n</tr>\n<tr class=\"row-even\"><td><a class=\"reference internal\" href=\"#dipy.get_info\" title=\"dipy.get_info\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">get_info</span></code></a>()</td>\n<td></td>\n</tr>\n<tr class=\"row-odd\"><td><a class=\"reference internal\" href=\"#dipy.test\" title=\"dipy.test\"><code class=\"xref py py-obj docutils literal\"><span class=\"pre\">test</span></code></a></td>\n<td>Run tests for module using nose.</td>\n</tr>\n</tbody>\n</table>\n<div class=\"section\" id=\"bench\">\n<h2>bench<a class=\"headerlink\" href=\"#bench\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dipy.bench\">\n<code class=\"descclassname\">dipy.</code><code class=\"descname\">bench</code><span class=\"sig-paren\">(</span><em>self</em>, <em>label='fast'</em>, <em>verbose=1</em>, <em>extra_argv=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.bench\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run benchmarks for module using nose.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>label</strong> : {&#8216;fast&#8217;, &#8216;full&#8217;, &#8216;&#8217;, attribute identifier}, optional</p>\n<blockquote>\n<div><p>Identifies the benchmarks to run. This can be a string to pass to\nthe nosetests executable with the &#8216;-A&#8217; option, or one of several\nspecial values.  Special values are:\n* &#8216;fast&#8217; - the default - which corresponds to the <code class=\"docutils literal\"><span class=\"pre\">nosetests</span> <span class=\"pre\">-A</span></code></p>\n<blockquote>\n<div><p>option of &#8216;not slow&#8217;.</p>\n</div></blockquote>\n<ul class=\"simple\">\n<li>&#8216;full&#8217; - fast (as above) and slow benchmarks as in the\n&#8216;no -A&#8217; option to nosetests - this is the same as &#8216;&#8217;.</li>\n<li>None or &#8216;&#8217; - run all tests.</li>\n</ul>\n<p>attribute_identifier - string passed directly to nosetests as &#8216;-A&#8217;.</p>\n</div></blockquote>\n<p><strong>verbose</strong> : int, optional</p>\n<blockquote>\n<div><p>Verbosity value for benchmark outputs, in the range 1-10. Default is 1.</p>\n</div></blockquote>\n<p><strong>extra_argv</strong> : list, optional</p>\n<blockquote>\n<div><p>List with any extra arguments to pass to nosetests.</p>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>success</strong> : bool</p>\n<blockquote class=\"last\">\n<div><p>Returns True if running the benchmarks works, False if an error\noccurred.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>Benchmarks are like tests, but have names starting with &#8220;bench&#8221; instead\nof &#8220;test&#8221;, and can be found under the &#8220;benchmarks&#8221; sub-directory of the\nmodule.</p>\n<p>Each NumPy module exposes <cite>bench</cite> in its namespace to run all benchmarks\nfor it.</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">success</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">bench</span><span class=\"p\">()</span> \n<span class=\"go\">Running benchmarks for numpy.lib</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">using 562341 items:</span>\n<span class=\"go\">unique:</span>\n<span class=\"go\">0.11</span>\n<span class=\"go\">unique1d:</span>\n<span class=\"go\">0.11</span>\n<span class=\"go\">ratio: 1.0</span>\n<span class=\"go\">nUnique: 56230 == 56230</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">OK</span>\n</pre></div>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">success</span> \n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"get-info\">\n<h2>get_info<a class=\"headerlink\" href=\"#get-info\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dipy.get_info\">\n<code class=\"descclassname\">dipy.</code><code class=\"descname\">get_info</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.get_info\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"test\">\n<h2>test<a class=\"headerlink\" href=\"#test\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dipy.test\">\n<code class=\"descclassname\">dipy.</code><code class=\"descname\">test</code><span class=\"sig-paren\">(</span><em>self</em>, <em>label='fast'</em>, <em>verbose=1</em>, <em>extra_argv=None</em>, <em>doctests=False</em>, <em>coverage=False</em>, <em>raise_warnings=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#dipy.test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run tests for module using nose.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><p class=\"first\"><strong>label</strong> : {&#8216;fast&#8217;, &#8216;full&#8217;, &#8216;&#8217;, attribute identifier}, optional</p>\n<blockquote>\n<div><p>Identifies the tests to run. This can be a string to pass to\nthe nosetests executable with the &#8216;-A&#8217; option, or one of several\nspecial values.  Special values are:\n* &#8216;fast&#8217; - the default - which corresponds to the <code class=\"docutils literal\"><span class=\"pre\">nosetests</span> <span class=\"pre\">-A</span></code></p>\n<blockquote>\n<div><p>option of &#8216;not slow&#8217;.</p>\n</div></blockquote>\n<ul class=\"simple\">\n<li>&#8216;full&#8217; - fast (as above) and slow tests as in the\n&#8216;no -A&#8217; option to nosetests - this is the same as &#8216;&#8217;.</li>\n<li>None or &#8216;&#8217; - run all tests.</li>\n</ul>\n<p>attribute_identifier - string passed directly to nosetests as &#8216;-A&#8217;.</p>\n</div></blockquote>\n<p><strong>verbose</strong> : int, optional</p>\n<blockquote>\n<div><p>Verbosity value for test outputs, in the range 1-10. Default is 1.</p>\n</div></blockquote>\n<p><strong>extra_argv</strong> : list, optional</p>\n<blockquote>\n<div><p>List with any extra arguments to pass to nosetests.</p>\n</div></blockquote>\n<p><strong>doctests</strong> : bool, optional</p>\n<blockquote>\n<div><p>If True, run doctests in module. Default is False.</p>\n</div></blockquote>\n<p><strong>coverage</strong> : bool, optional</p>\n<blockquote>\n<div><p>If True, report coverage of NumPy code. Default is False.\n(This requires the <a href=\"#id1\"><span class=\"problematic\" id=\"id2\">`</span></a>coverage module:</p>\n<blockquote>\n<div><p>&lt;<a class=\"reference external\" href=\"http://nedbatchelder.com/code/modules/coverage.html\">http://nedbatchelder.com/code/modules/coverage.html</a>&gt;`_).</p>\n</div></blockquote>\n</div></blockquote>\n<p><strong>raise_warnings</strong> : str or sequence of warnings, optional</p>\n<blockquote>\n<div><p>This specifies which warnings to configure as &#8216;raise&#8217; instead\nof &#8216;warn&#8217; during the test execution.  Valid strings are:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>&#8220;develop&#8221; : equals <code class=\"docutils literal\"><span class=\"pre\">(DeprecationWarning,</span> <span class=\"pre\">RuntimeWarning)</span></code></li>\n<li>&#8220;release&#8221; : equals <code class=\"docutils literal\"><span class=\"pre\">()</span></code>, don&#8217;t raise on any warnings.</li>\n</ul>\n</div></blockquote>\n</div></blockquote>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Returns:</th><td class=\"field-body\"><p class=\"first\"><strong>result</strong> : object</p>\n<blockquote class=\"last\">\n<div><p>Returns the result of running the tests as a\n<code class=\"docutils literal\"><span class=\"pre\">nose.result.TextTestResult</span></code> object.</p>\n</div></blockquote>\n</td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Notes</p>\n<p>Each NumPy module exposes <cite>test</cite> in its namespace to run all tests for it.\nFor example, to run all tests for numpy.lib:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">()</span> \n</pre></div>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">lib</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">()</span> \n<span class=\"go\">Running unit tests for numpy.lib</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">Ran 976 tests in 3.933s</span>\n</pre></div>\n</div>\n<p>OK</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">errors</span> \n<span class=\"go\">[]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">knownfail</span> \n<span class=\"go\">[]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n</div>\n"}