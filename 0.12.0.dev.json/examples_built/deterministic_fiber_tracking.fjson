{"metatags": "", "current_page_name": "examples_built/deterministic_fiber_tracking", "title": "An introduction to the Deterministic Maximum Direction Getter", "parents": [], "alabaster_version": "0.7.7", "customsidebar": null, "sidebars": null, "prev": null, "page_source_suffix": ".rst", "sourcename": "examples_built/deterministic_fiber_tracking.txt", "meta": {}, "next": null, "display_toc": false, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">An introduction to the Deterministic Maximum Direction Getter</a></li>\n</ul>\n", "rellinks": [["genindex", "General Index", "I", "index"]], "body": "<div class=\"section\" id=\"an-introduction-to-the-deterministic-maximum-direction-getter\">\n<span id=\"example-deterministic-fiber-tracking\"></span><h1>An introduction to the Deterministic Maximum Direction Getter<a class=\"headerlink\" href=\"#an-introduction-to-the-deterministic-maximum-direction-getter\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Deterministic maximum direction getter is the deterministic version of the\nprobabilistic direction getter. It can be used with the same local models\nand has the same parameters. Deterministic maximum fiber tracking follows\nthe trajectory of the most probable pathway within the tracking constraint\n(e.g. max angle). In other words, it follows the direction with the highest\nprobability from a distribution, as opposed to the probabilistic direction\ngetter which draws the direction from the distribution. Therefore, the maximum\ndeterministic direction getter is equivalent to the probabilistic direction\ngetter returning always the maximum value of the distribution.</p>\n<p>Deterministic maximum fiber tracking is an alternative to EuDX deterministic\ntractography and unlike EuDX does not follow the peaks of the local models but\nuses the entire orientation distributions.</p>\n<p>This example is an extension of the\n:ref:<code class=\"docutils literal\"><span class=\"pre\">example_probabilistic_fiber_tracking</span></code> example. We begin by loading the\ndata and fitting a constrained spherical deconvolution (CSD) reconstruction\nmodel.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">read_stanford_labels</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.csdeconv</span> <span class=\"k\">import</span> <span class=\"n\">ConstrainedSphericalDeconvModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking</span> <span class=\"k\">import</span> <span class=\"n\">utils</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.local</span> <span class=\"k\">import</span> <span class=\"p\">(</span><span class=\"n\">ThresholdTissueClassifier</span><span class=\"p\">,</span> <span class=\"n\">LocalTracking</span><span class=\"p\">)</span>\n\n<span class=\"n\">hardi_img</span><span class=\"p\">,</span> <span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">labels_img</span> <span class=\"o\">=</span> <span class=\"n\">read_stanford_labels</span><span class=\"p\">()</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">hardi_img</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n<span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">labels_img</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n<span class=\"n\">affine</span> <span class=\"o\">=</span> <span class=\"n\">hardi_img</span><span class=\"o\">.</span><span class=\"n\">get_affine</span><span class=\"p\">()</span>\n\n<span class=\"n\">seed_mask</span> <span class=\"o\">=</span> <span class=\"n\">labels</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n<span class=\"n\">white_matter</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">labels</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"n\">labels</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">seeds</span> <span class=\"o\">=</span> <span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">seeds_from_mask</span><span class=\"p\">(</span><span class=\"n\">seed_mask</span><span class=\"p\">,</span> <span class=\"n\">density</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"o\">=</span><span class=\"n\">affine</span><span class=\"p\">)</span>\n\n<span class=\"n\">csd_model</span> <span class=\"o\">=</span> <span class=\"n\">ConstrainedSphericalDeconvModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">sh_order</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"n\">csd_fit</span> <span class=\"o\">=</span> <span class=\"n\">csd_model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">mask</span><span class=\"o\">=</span><span class=\"n\">white_matter</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>We use the fractional anisotropy (FA) of the DTI model to build a tissue\nclassifier.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"kn\">import</span> <span class=\"nn\">dipy.reconst.dti</span> <span class=\"k\">as</span> <span class=\"nn\">dti</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.dti</span> <span class=\"k\">import</span> <span class=\"n\">fractional_anisotropy</span>\n\n<span class=\"n\">tensor_model</span> <span class=\"o\">=</span> <span class=\"n\">dti</span><span class=\"o\">.</span><span class=\"n\">TensorModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">)</span>\n<span class=\"n\">tenfit</span> <span class=\"o\">=</span> <span class=\"n\">tensor_model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">mask</span><span class=\"o\">=</span><span class=\"n\">white_matter</span><span class=\"p\">)</span>\n\n<span class=\"n\">FA</span> <span class=\"o\">=</span> <span class=\"n\">fractional_anisotropy</span><span class=\"p\">(</span><span class=\"n\">tenfit</span><span class=\"o\">.</span><span class=\"n\">evals</span><span class=\"p\">)</span>\n<span class=\"n\">classifier</span> <span class=\"o\">=</span> <span class=\"n\">ThresholdTissueClassifier</span><span class=\"p\">(</span><span class=\"n\">FA</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The fiber orientation distribution (FOD) of the CSD model estimates the\ndistribution of small fiber bundles within each voxel. This distribution\ncan be used for deterministic fiber tracking. As for probabilistic tracking,\nthere are many ways to provide those distributions to the deterministic maximum\ndirection getter. Here, the spherical harmonic representation of the FOD\nis used.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">default_sphere</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.direction</span> <span class=\"k\">import</span> <span class=\"n\">DeterministicMaximumDirectionGetter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.trackvis</span> <span class=\"k\">import</span> <span class=\"n\">save_trk</span>\n\n<span class=\"n\">detmax_dg</span> <span class=\"o\">=</span> <span class=\"n\">DeterministicMaximumDirectionGetter</span><span class=\"o\">.</span><span class=\"n\">from_shcoeff</span><span class=\"p\">(</span><span class=\"n\">csd_fit</span><span class=\"o\">.</span><span class=\"n\">shm_coeff</span><span class=\"p\">,</span>\n                                                             <span class=\"n\">max_angle</span><span class=\"o\">=</span><span class=\"mf\">30.</span><span class=\"p\">,</span>\n                                                             <span class=\"n\">sphere</span><span class=\"o\">=</span><span class=\"n\">default_sphere</span><span class=\"p\">)</span>\n<span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"n\">LocalTracking</span><span class=\"p\">(</span><span class=\"n\">detmax_dg</span><span class=\"p\">,</span> <span class=\"n\">classifier</span><span class=\"p\">,</span> <span class=\"n\">seeds</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"p\">,</span> <span class=\"n\">step_size</span><span class=\"o\">=.</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"n\">save_trk</span><span class=\"p\">(</span><span class=\"s2\">&quot;deterministic_maximum_shm_coeff.trk&quot;</span><span class=\"p\">,</span> <span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"p\">,</span>\n         <span class=\"n\">labels</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"admonition-example-source-code admonition\">\n<p class=\"first admonition-title\">Example source code</p>\n<p class=\"last\">You can download <a class=\"reference download internal\" href=\"../../_downloads/deterministic_fiber_tracking.py\" download=\"\"><code class=\"xref download docutils literal\"><span class=\"pre\">the</span> <span class=\"pre\">full</span> <span class=\"pre\">source</span> <span class=\"pre\">code</span> <span class=\"pre\">of</span> <span class=\"pre\">this</span> <span class=\"pre\">example</span></code></a>.\nThis same script is also included in the dipy source distribution under the\n<code class=\"file docutils literal\"><span class=\"pre\">doc/examples/</span></code> directory.</p>\n</div>\n</div>\n"}