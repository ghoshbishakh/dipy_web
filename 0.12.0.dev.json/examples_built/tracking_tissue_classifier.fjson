{"metatags": "", "current_page_name": "examples_built/tracking_tissue_classifier", "title": "Using Various Tissue Classifiers for Tractography", "parents": [], "alabaster_version": "0.7.7", "customsidebar": null, "sidebars": null, "prev": null, "page_source_suffix": ".rst", "sourcename": "examples_built/tracking_tissue_classifier.txt", "meta": {}, "next": null, "display_toc": true, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Using Various Tissue Classifiers for Tractography</a><ul>\n<li><a class=\"reference internal\" href=\"#threshold-tissue-classifier\">Threshold Tissue Classifier</a></li>\n<li><a class=\"reference internal\" href=\"#binary-tissue-classifier\">Binary Tissue Classifier</a></li>\n<li><a class=\"reference internal\" href=\"#act-tissue-classifier\">ACT Tissue Classifier</a></li>\n<li><a class=\"reference internal\" href=\"#notes\">Notes</a></li>\n<li><a class=\"reference internal\" href=\"#references\">References</a></li>\n</ul>\n</li>\n</ul>\n", "rellinks": [["genindex", "General Index", "I", "index"]], "body": "<div class=\"section\" id=\"using-various-tissue-classifiers-for-tractography\">\n<span id=\"example-tracking-tissue-classifier\"></span><h1>Using Various Tissue Classifiers for Tractography<a class=\"headerlink\" href=\"#using-various-tissue-classifiers-for-tractography\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>The tissue classifier determines if the tracking stops or continues at each\ntracking position. The tracking stops when it reaches an ending region\n(e.g. low FA, gray matter or corticospinal fluid regions) or exits the image\nboundaries. The tracking also stops if the direction getter has no direction\nto follow.</p>\n<p>Each tissue classifier determines if the stopping is &#8216;valid&#8217; or\n&#8216;invalid&#8217;. A streamline is &#8216;valid&#8217; when the tissue classifier determines if\nthe streamline stops in a position classified as &#8216;ENDPOINT&#8217; or &#8216;OUTSIDEIMAGE&#8217;.\nA streamline is &#8216;invalid&#8217; when it stops in a position classified as\n&#8216;TRACKPOINT&#8217; or &#8216;INVALIDPOINT&#8217;. These conditions are described below. The\n&#8216;LocalTracking&#8217; generator can be set to output all generated streamlines\nor only the &#8216;valid&#8217; ones.</p>\n<p>This example is an extension of the\n<a class=\"reference internal\" href=\"../deterministic_fiber_tracking/#example-deterministic-fiber-tracking\"><span class=\"std std-ref\">An introduction to the Deterministic Maximum Direction Getter</span></a> example. We begin by loading the\ndata, creating a seeding mask from white matter voxels of the corpus callosum,\nfitting a Constrained Spherical Deconvolution (CSD) reconstruction\nmodel and creating the maximum deterministic direction getter.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"p\">(</span><span class=\"n\">read_stanford_labels</span><span class=\"p\">,</span>\n                       <span class=\"n\">default_sphere</span><span class=\"p\">,</span>\n                       <span class=\"n\">read_stanford_pve_maps</span><span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.direction</span> <span class=\"k\">import</span> <span class=\"n\">DeterministicMaximumDirectionGetter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.io.trackvis</span> <span class=\"k\">import</span> <span class=\"n\">save_trk</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.csdeconv</span> <span class=\"k\">import</span> <span class=\"p\">(</span><span class=\"n\">ConstrainedSphericalDeconvModel</span><span class=\"p\">,</span>\n                                   <span class=\"n\">auto_response</span><span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.local</span> <span class=\"k\">import</span> <span class=\"n\">LocalTracking</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking</span> <span class=\"k\">import</span> <span class=\"n\">utils</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"k\">import</span> <span class=\"n\">fvtk</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.viz.colormap</span> <span class=\"k\">import</span> <span class=\"n\">line_colors</span>\n\n<span class=\"n\">ren</span> <span class=\"o\">=</span> <span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">ren</span><span class=\"p\">()</span>\n\n<span class=\"n\">hardi_img</span><span class=\"p\">,</span> <span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">labels_img</span> <span class=\"o\">=</span> <span class=\"n\">read_stanford_labels</span><span class=\"p\">()</span>\n<span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">img_pve_wm</span> <span class=\"o\">=</span> <span class=\"n\">read_stanford_pve_maps</span><span class=\"p\">()</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">hardi_img</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n<span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">labels_img</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n<span class=\"n\">affine</span> <span class=\"o\">=</span> <span class=\"n\">hardi_img</span><span class=\"o\">.</span><span class=\"n\">get_affine</span><span class=\"p\">()</span>\n<span class=\"n\">white_matter</span> <span class=\"o\">=</span> <span class=\"n\">img_pve_wm</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n\n<span class=\"n\">seed_mask</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">logical_and</span><span class=\"p\">(</span><span class=\"n\">labels</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">white_matter</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">seeds</span> <span class=\"o\">=</span> <span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">seeds_from_mask</span><span class=\"p\">(</span><span class=\"n\">seed_mask</span><span class=\"p\">,</span> <span class=\"n\">density</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"o\">=</span><span class=\"n\">affine</span><span class=\"p\">)</span>\n\n<span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">ratio</span> <span class=\"o\">=</span> <span class=\"n\">auto_response</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">roi_radius</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">fa_thr</span><span class=\"o\">=</span><span class=\"mf\">0.7</span><span class=\"p\">)</span>\n<span class=\"n\">csd_model</span> <span class=\"o\">=</span> <span class=\"n\">ConstrainedSphericalDeconvModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">)</span>\n<span class=\"n\">csd_fit</span> <span class=\"o\">=</span> <span class=\"n\">csd_model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">mask</span><span class=\"o\">=</span><span class=\"n\">white_matter</span><span class=\"p\">)</span>\n\n<span class=\"n\">dg</span> <span class=\"o\">=</span> <span class=\"n\">DeterministicMaximumDirectionGetter</span><span class=\"o\">.</span><span class=\"n\">from_shcoeff</span><span class=\"p\">(</span><span class=\"n\">csd_fit</span><span class=\"o\">.</span><span class=\"n\">shm_coeff</span><span class=\"p\">,</span>\n                                                      <span class=\"n\">max_angle</span><span class=\"o\">=</span><span class=\"mf\">30.</span><span class=\"p\">,</span>\n                                                      <span class=\"n\">sphere</span><span class=\"o\">=</span><span class=\"n\">default_sphere</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"section\" id=\"threshold-tissue-classifier\">\n<h2>Threshold Tissue Classifier<a class=\"headerlink\" href=\"#threshold-tissue-classifier\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>A scalar map can be used to define where the tracking stops. The threshold\ntissue classifier uses a scalar map to stop the tracking whenever the\ninterpolated scalar value is lower than a fixed threshold. Here, we show\nan example using the fractional anisotropy (FA) map of the DTI model.\nThe threshold tissue classifier uses a trilinear interpolation at the\ntracking position.</p>\n<p><strong>Parameters</strong></p>\n<ul class=\"simple\">\n<li>metric_map: numpy array [:, :, :]</li>\n<li>threshold: float</li>\n</ul>\n<p><strong>Stopping criterion</strong></p>\n<ul class=\"simple\">\n<li>&#8216;ENDPOINT&#8217;: metric_map &lt; threshold,</li>\n<li>&#8216;OUTSIDEIMAGE&#8217;: tracking point outside of metric_map,</li>\n<li>&#8216;TRACKPOINT&#8217;: stop because no direction is available,</li>\n<li>&#8216;INVALIDPOINT&#8217;: N/A.</li>\n</ul>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">dipy.reconst.dti</span> <span class=\"k\">as</span> <span class=\"nn\">dti</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.reconst.dti</span> <span class=\"k\">import</span> <span class=\"n\">fractional_anisotropy</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.local</span> <span class=\"k\">import</span> <span class=\"n\">ThresholdTissueClassifier</span>\n\n<span class=\"n\">tensor_model</span> <span class=\"o\">=</span> <span class=\"n\">dti</span><span class=\"o\">.</span><span class=\"n\">TensorModel</span><span class=\"p\">(</span><span class=\"n\">gtab</span><span class=\"p\">)</span>\n<span class=\"n\">tenfit</span> <span class=\"o\">=</span> <span class=\"n\">tensor_model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">mask</span><span class=\"o\">=</span><span class=\"n\">labels</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">FA</span> <span class=\"o\">=</span> <span class=\"n\">fractional_anisotropy</span><span class=\"p\">(</span><span class=\"n\">tenfit</span><span class=\"o\">.</span><span class=\"n\">evals</span><span class=\"p\">)</span>\n\n<span class=\"n\">threshold_classifier</span> <span class=\"o\">=</span> <span class=\"n\">ThresholdTissueClassifier</span><span class=\"p\">(</span><span class=\"n\">FA</span><span class=\"p\">,</span> <span class=\"o\">.</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n<span class=\"n\">mask_fa</span> <span class=\"o\">=</span> <span class=\"n\">FA</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n<span class=\"n\">mask_fa</span><span class=\"p\">[</span><span class=\"n\">mask_fa</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">xticks</span><span class=\"p\">([])</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">yticks</span><span class=\"p\">([])</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">mask_fa</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">,</span>\n           <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"s1\">&#39;nearest&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">tight_layout</span><span class=\"p\">()</span>\n<span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">&#39;threshold_fa.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id2\">\n<img alt=\"examples_built/threshold_fa.png\" src=\"examples_built/threshold_fa.png\" />\n<p class=\"caption\"><span class=\"caption-text\"><strong>Thresholded fractional anisotropy map.</strong></span></p>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">all_streamlines_threshold_classifier</span> <span class=\"o\">=</span> <span class=\"n\">LocalTracking</span><span class=\"p\">(</span><span class=\"n\">dg</span><span class=\"p\">,</span>\n                                                     <span class=\"n\">threshold_classifier</span><span class=\"p\">,</span>\n                                                     <span class=\"n\">seeds</span><span class=\"p\">,</span>\n                                                     <span class=\"n\">affine</span><span class=\"p\">,</span>\n                                                     <span class=\"n\">step_size</span><span class=\"o\">=.</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n                                                     <span class=\"n\">return_all</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">save_trk</span><span class=\"p\">(</span><span class=\"s2\">&quot;deterministic_threshold_classifier_all.trk&quot;</span><span class=\"p\">,</span>\n         <span class=\"n\">all_streamlines_threshold_classifier</span><span class=\"p\">,</span>\n         <span class=\"n\">affine</span><span class=\"p\">,</span>\n         <span class=\"n\">labels</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n\n<span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">sl</span> <span class=\"k\">for</span> <span class=\"n\">sl</span> <span class=\"ow\">in</span> <span class=\"n\">all_streamlines_threshold_classifier</span><span class=\"p\">]</span>\n\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">)</span>\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">,</span> <span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"n\">line_colors</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">)))</span>\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;all_streamlines_threshold_classifier.png&#39;</span><span class=\"p\">,</span>\n            <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id3\">\n<img alt=\"examples_built/all_streamlines_threshold_classifier.png\" src=\"examples_built/all_streamlines_threshold_classifier.png\" />\n<p class=\"caption\"><span class=\"caption-text\"><strong>Deterministic tractography using a thresholded fractional anisotropy.</strong></span></p>\n</div>\n</div>\n<div class=\"section\" id=\"binary-tissue-classifier\">\n<h2>Binary Tissue Classifier<a class=\"headerlink\" href=\"#binary-tissue-classifier\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>A binary mask can be used to define where the tracking stops. The binary\ntissue classifier stops the tracking whenever the tracking position is outside\nthe mask. Here, we show how to obtain the binary tissue classifier from\nthe white matter mask defined above. The binary tissue classifier uses a\nnearest-neighborhood interpolation at the tracking position.</p>\n<p><strong>Parameters</strong></p>\n<ul class=\"simple\">\n<li>mask: numpy array [:, :, :]</li>\n</ul>\n<p><strong>Stopping criterion</strong></p>\n<ul class=\"simple\">\n<li>&#8216;ENDPOINT&#8217;: mask = 0</li>\n<li>&#8216;OUTSIDEIMAGE&#8217;: tracking point outside of mask</li>\n<li>&#8216;TRACKPOINT&#8217;: no direction is available</li>\n<li>&#8216;INVALIDPOINT&#8217;: N/A</li>\n</ul>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.local</span> <span class=\"k\">import</span> <span class=\"n\">BinaryTissueClassifier</span>\n\n<span class=\"n\">binary_classifier</span> <span class=\"o\">=</span> <span class=\"n\">BinaryTissueClassifier</span><span class=\"p\">(</span><span class=\"n\">white_matter</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">xticks</span><span class=\"p\">([])</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">yticks</span><span class=\"p\">([])</span>\n<span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">tight_layout</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">white_matter</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">,</span>\n           <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"s1\">&#39;nearest&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">&#39;white_matter_mask.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id4\">\n<img alt=\"examples_built/white_matter_mask.png\" src=\"examples_built/white_matter_mask.png\" />\n<p class=\"caption\"><span class=\"caption-text\"><strong>White matter binary mask.</strong></span></p>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">all_streamlines_binary_classifier</span> <span class=\"o\">=</span> <span class=\"n\">LocalTracking</span><span class=\"p\">(</span><span class=\"n\">dg</span><span class=\"p\">,</span>\n                                                  <span class=\"n\">binary_classifier</span><span class=\"p\">,</span>\n                                                  <span class=\"n\">seeds</span><span class=\"p\">,</span>\n                                                  <span class=\"n\">affine</span><span class=\"p\">,</span>\n                                                  <span class=\"n\">step_size</span><span class=\"o\">=.</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n                                                  <span class=\"n\">return_all</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">save_trk</span><span class=\"p\">(</span><span class=\"s2\">&quot;deterministic_binary_classifier_all.trk&quot;</span><span class=\"p\">,</span>\n         <span class=\"n\">all_streamlines_binary_classifier</span><span class=\"p\">,</span>\n         <span class=\"n\">affine</span><span class=\"p\">,</span>\n         <span class=\"n\">labels</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n\n<span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">sl</span> <span class=\"k\">for</span> <span class=\"n\">sl</span> <span class=\"ow\">in</span> <span class=\"n\">all_streamlines_binary_classifier</span><span class=\"p\">]</span>\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">)</span>\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">,</span> <span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"n\">line_colors</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">)))</span>\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;all_streamlines_binary_classifier.png&#39;</span><span class=\"p\">,</span>\n            <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id5\">\n<img alt=\"examples_built/all_streamlines_binary_classifier.png\" src=\"examples_built/all_streamlines_binary_classifier.png\" />\n<p class=\"caption\"><span class=\"caption-text\"><strong>Deterministic tractography using a binary white matter mask.</strong></span></p>\n</div>\n</div>\n<div class=\"section\" id=\"act-tissue-classifier\">\n<h2>ACT Tissue Classifier<a class=\"headerlink\" href=\"#act-tissue-classifier\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Anatomically-constrained tractography (ACT) <a class=\"reference internal\" href=\"#smith2012\" id=\"id1\">[Smith2012]</a> uses information from\nanatomical images to determine when the tractography stops. The &#8216;include_map&#8217;\ndefines when the streamline reached a &#8216;valid&#8217; stopping region (e.g. gray\nmatter partial volume estimation (PVE) map) and the &#8216;exclude_map&#8217; defines when\nthe streamline reached an &#8216;invalid&#8217; stopping region (e.g. corticospinal fluid\nPVE map). The background of the anatomical image should be added to the\n&#8216;include_map&#8217; to keep streamlines exiting the brain (e.g. through the\nbrain stem). The ACT tissue classifier uses a trilinear interpolation\nat the tracking position.</p>\n<p><strong>Parameters</strong></p>\n<ul class=\"simple\">\n<li>include_map: numpy array [:, :, :],</li>\n<li>exclude_map: numpy array [:, :, :],</li>\n</ul>\n<p><strong>Stopping criterion</strong></p>\n<ul class=\"simple\">\n<li>&#8216;ENDPOINT&#8217;: include_map &gt; 0.5,</li>\n<li>&#8216;OUTSIDEIMAGE&#8217;: tracking point outside of include_map or exclude_map,</li>\n<li>&#8216;TRACKPOINT&#8217;: no direction is available,</li>\n<li>&#8216;INVALIDPOINT&#8217;: exclude_map &gt; 0.5.</li>\n</ul>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"kn\">from</span> <span class=\"nn\">dipy.tracking.local</span> <span class=\"k\">import</span> <span class=\"n\">ActTissueClassifier</span>\n\n<span class=\"n\">img_pve_csf</span><span class=\"p\">,</span> <span class=\"n\">img_pve_gm</span><span class=\"p\">,</span> <span class=\"n\">img_pve_wm</span> <span class=\"o\">=</span> <span class=\"n\">read_stanford_pve_maps</span><span class=\"p\">()</span>\n\n<span class=\"n\">background</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"n\">img_pve_gm</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"n\">background</span><span class=\"p\">[(</span><span class=\"n\">img_pve_gm</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span> <span class=\"o\">+</span>\n            <span class=\"n\">img_pve_wm</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span> <span class=\"o\">+</span>\n            <span class=\"n\">img_pve_csf</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">())</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n<span class=\"n\">include_map</span> <span class=\"o\">=</span> <span class=\"n\">img_pve_gm</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n<span class=\"n\">include_map</span><span class=\"p\">[</span><span class=\"n\">background</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">exclude_map</span> <span class=\"o\">=</span> <span class=\"n\">img_pve_csf</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n\n<span class=\"n\">act_classifier</span> <span class=\"o\">=</span> <span class=\"n\">ActTissueClassifier</span><span class=\"p\">(</span><span class=\"n\">include_map</span><span class=\"p\">,</span> <span class=\"n\">exclude_map</span><span class=\"p\">)</span>\n\n<span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplot</span><span class=\"p\">(</span><span class=\"mi\">121</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">xticks</span><span class=\"p\">([])</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">yticks</span><span class=\"p\">([])</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">include_map</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">,</span>\n           <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"s1\">&#39;nearest&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplot</span><span class=\"p\">(</span><span class=\"mi\">122</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">xticks</span><span class=\"p\">([])</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">yticks</span><span class=\"p\">([])</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">exclude_map</span><span class=\"p\">[:,</span> <span class=\"p\">:,</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;gray&#39;</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">&#39;lower&#39;</span><span class=\"p\">,</span>\n           <span class=\"n\">interpolation</span><span class=\"o\">=</span><span class=\"s1\">&#39;nearest&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">tight_layout</span><span class=\"p\">()</span>\n<span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">&#39;act_maps.png&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id6\">\n<img alt=\"examples_built/act_maps.png\" src=\"examples_built/act_maps.png\" />\n<p class=\"caption\"><span class=\"caption-text\"><strong>Include (left) and exclude (right) maps for ACT.</strong></span></p>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">all_streamlines_act_classifier</span> <span class=\"o\">=</span> <span class=\"n\">LocalTracking</span><span class=\"p\">(</span><span class=\"n\">dg</span><span class=\"p\">,</span>\n                                               <span class=\"n\">act_classifier</span><span class=\"p\">,</span>\n                                               <span class=\"n\">seeds</span><span class=\"p\">,</span>\n                                               <span class=\"n\">affine</span><span class=\"p\">,</span>\n                                               <span class=\"n\">step_size</span><span class=\"o\">=.</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n                                               <span class=\"n\">return_all</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">save_trk</span><span class=\"p\">(</span><span class=\"s2\">&quot;deterministic_act_classifier_all.trk&quot;</span><span class=\"p\">,</span>\n         <span class=\"n\">all_streamlines_act_classifier</span><span class=\"p\">,</span>\n         <span class=\"n\">affine</span><span class=\"p\">,</span>\n         <span class=\"n\">labels</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n\n<span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">sl</span> <span class=\"k\">for</span> <span class=\"n\">sl</span> <span class=\"ow\">in</span> <span class=\"n\">all_streamlines_act_classifier</span><span class=\"p\">]</span>\n\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">)</span>\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">,</span> <span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"n\">line_colors</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">)))</span>\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;all_streamlines_act_classifier.png&#39;</span><span class=\"p\">,</span>\n            <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id7\">\n<img alt=\"examples_built/all_streamlines_act_classifier.png\" src=\"examples_built/all_streamlines_act_classifier.png\" />\n<p class=\"caption\"><span class=\"caption-text\"><strong>Deterministic tractography using ACT stopping criterion.</strong></span></p>\n</div>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">valid_streamlines_act_classifier</span> <span class=\"o\">=</span> <span class=\"n\">LocalTracking</span><span class=\"p\">(</span><span class=\"n\">dg</span><span class=\"p\">,</span>\n                                                 <span class=\"n\">act_classifier</span><span class=\"p\">,</span>\n                                                 <span class=\"n\">seeds</span><span class=\"p\">,</span>\n                                                 <span class=\"n\">affine</span><span class=\"p\">,</span>\n                                                 <span class=\"n\">step_size</span><span class=\"o\">=.</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n                                                 <span class=\"n\">return_all</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">save_trk</span><span class=\"p\">(</span><span class=\"s2\">&quot;deterministic_act_classifier_valid.trk&quot;</span><span class=\"p\">,</span>\n         <span class=\"n\">valid_streamlines_act_classifier</span><span class=\"p\">,</span>\n         <span class=\"n\">affine</span><span class=\"p\">,</span>\n         <span class=\"n\">labels</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n\n<span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">sl</span> <span class=\"k\">for</span> <span class=\"n\">sl</span> <span class=\"ow\">in</span> <span class=\"n\">valid_streamlines_act_classifier</span><span class=\"p\">]</span>\n\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">)</span>\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">,</span> <span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">,</span> <span class=\"n\">line_colors</span><span class=\"p\">(</span><span class=\"n\">streamlines</span><span class=\"p\">)))</span>\n<span class=\"n\">fvtk</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">ren</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;valid_streamlines_act_classifier.png&#39;</span><span class=\"p\">,</span>\n            <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id8\">\n<img alt=\"examples_built/valid_streamlines_act_classifier.png\" src=\"examples_built/valid_streamlines_act_classifier.png\" />\n<p class=\"caption\"><span class=\"caption-text\"><strong>Deterministic tractography using a anatomically-constrained tractography\nstopping criterion. Streamlines ending in gray matter region only.</strong></span></p>\n</div>\n<p>The threshold and binary tissue classifiers use respectively a scalar map and a\nbinary mask to stop the tracking. The ACT tissue classifier use partial volume\nfraction (PVE) maps from an anatomical image to stop the tracking. Additionally,\nthe ACT tissue classifier determines if the tracking stopped in expected regions\n(e.g. gray matter) and allows the user to get only streamlines stopping in those\nregions.</p>\n</div>\n<div class=\"section\" id=\"notes\">\n<h2>Notes<a class=\"headerlink\" href=\"#notes\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Currently in ACT the proposed method that cuts streamlines going through\nsubcortical gray matter regions is not implemented. The backtracking technique\nfor streamlines reaching INVALIDPOINT is not implemented either.</p>\n</div>\n<div class=\"section\" id=\"references\">\n<h2>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<table class=\"docutils citation\" frame=\"void\" id=\"smith2012\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id1\">[Smith2012]</a></td><td>Smith, R. E., Tournier, J.-D., Calamante, F., &amp; Connelly, A.\nAnatomically-constrained tractography: Improved diffusion MRI\nstreamlines tractography through effective use of anatomical\ninformation. NeuroImage, 63(3), 1924-1938, 2012.</td></tr>\n</tbody>\n</table>\n<div class=\"admonition-example-source-code admonition\">\n<p class=\"first admonition-title\">Example source code</p>\n<p class=\"last\">You can download <a class=\"reference download internal\" href=\"../../_downloads/tracking_tissue_classifier.py\" download=\"\"><code class=\"xref download docutils literal\"><span class=\"pre\">the</span> <span class=\"pre\">full</span> <span class=\"pre\">source</span> <span class=\"pre\">code</span> <span class=\"pre\">of</span> <span class=\"pre\">this</span> <span class=\"pre\">example</span></code></a>.\nThis same script is also included in the dipy source distribution under the\n<code class=\"file docutils literal\"><span class=\"pre\">doc/examples/</span></code> directory.</p>\n</div>\n</div>\n</div>\n"}