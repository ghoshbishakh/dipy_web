{"page_source_suffix": ".rst", "prev": null, "alabaster_version": "0.7.7", "body": "<div class=\"section\" id=\"simple-volume-slicing\">\n<span id=\"example-viz-slice\"></span><h1>Simple volume slicing<a class=\"headerlink\" href=\"#simple-volume-slicing\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Here we present an example for visualizing slices from 3D images.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"k\">import</span> <span class=\"n\">division</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">nibabel</span> <span class=\"k\">as</span> <span class=\"nn\">nib</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.data</span> <span class=\"k\">import</span> <span class=\"n\">fetch_bundles_2_subjects</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dipy.viz</span> <span class=\"k\">import</span> <span class=\"n\">window</span><span class=\"p\">,</span> <span class=\"n\">actor</span>\n</pre></div>\n</div>\n<p>Let&#8217;s download and load a T1.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">fetch_bundles_2_subjects</span><span class=\"p\">()</span>\n\n<span class=\"n\">fname_t1</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"s1\">&#39;~&#39;</span><span class=\"p\">),</span> <span class=\"s1\">&#39;.dipy&#39;</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;exp_bundles_and_maps&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bundles_2_subjects&#39;</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;subj_1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;t1_warped.nii.gz&#39;</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">nib</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">fname_t1</span><span class=\"p\">)</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n<span class=\"n\">affine</span> <span class=\"o\">=</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">get_affine</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>Create a Renderer object which holds all the actors which we want to visualize.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">renderer</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Renderer</span><span class=\"p\">()</span>\n<span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">background</span><span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"section\" id=\"render-slices-from-t1-with-a-specific-value-range\">\n<h2>Render slices from T1 with a specific value range<a class=\"headerlink\" href=\"#render-slices-from-t1-with-a-specific-value-range\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The T1 has usually a higher range of values than what can be visualized in an\nimage. We can set the range that we would like to see.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">mean</span><span class=\"p\">,</span> <span class=\"n\">std</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">data</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(),</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">data</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"p\">()</span>\n<span class=\"n\">value_range</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">mean</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">std</span><span class=\"p\">,</span> <span class=\"n\">mean</span> <span class=\"o\">+</span> <span class=\"mf\">1.5</span> <span class=\"o\">*</span> <span class=\"n\">std</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal\"><span class=\"pre\">slice</span></code> function will read data and resample the data using an affine\ntransformation matrix. The default behavior of this function is to show the\nmiddle slice of the last dimension of the resampled data.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">slice_actor</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">slicer</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"p\">,</span> <span class=\"n\">value_range</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal\"><span class=\"pre\">slice_actor</span></code> contains an axial slice.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">slice_actor</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The same actor can show any different slice from the given data using its\n<code class=\"docutils literal\"><span class=\"pre\">display</span></code> function. However, if we want to show multiple slices we need to\ncopy the actor first.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">slice_actor2</span> <span class=\"o\">=</span> <span class=\"n\">slice_actor</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>Now we have a new <code class=\"docutils literal\"><span class=\"pre\">slice_actor</span></code> which displays the middle slice of sagittal\nplane.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">slice_actor2</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">slice_actor2</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">//</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n\n<span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">slice_actor2</span><span class=\"p\">)</span>\n\n<span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">reset_camera</span><span class=\"p\">()</span>\n<span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">zoom</span><span class=\"p\">(</span><span class=\"mf\">1.4</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>In order to interact with the data you will need to uncomment the line below.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"c1\"># window.show(renderer, size=(600, 600), reset_camera=False)</span>\n</pre></div>\n</div>\n<p>Otherwise, you can save a screenshot using the following command.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">renderer</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;slices.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">),</span>\n              <span class=\"n\">reset_camera</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id1\">\n<img alt=\"examples_built/slices.png\" src=\"examples_built/slices.png\" />\n<p class=\"caption\"><span class=\"caption-text\"><strong>Simple slice viewer</strong>.</span></p>\n</div>\n</div>\n<div class=\"section\" id=\"render-slices-from-fa-with-your-colormap\">\n<h2>Render slices from FA with your colormap<a class=\"headerlink\" href=\"#render-slices-from-fa-with-your-colormap\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>It is also possible to set the colormap of your preference. Here we are loading\nan FA image and showing it in a non-standard way using an HSV colormap.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">fname_fa</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"s1\">&#39;~&#39;</span><span class=\"p\">),</span> <span class=\"s1\">&#39;.dipy&#39;</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;exp_bundles_and_maps&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bundles_2_subjects&#39;</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;subj_1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;fa_1x1x1.nii.gz&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">nib</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">fname_fa</span><span class=\"p\">)</span>\n<span class=\"n\">fa</span> <span class=\"o\">=</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">get_data</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>Notice here how the scale range is (0, 255) and not (0, 1) which is the usual\nrange of FA values.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">lut</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">colormap_lookup_table</span><span class=\"p\">(</span><span class=\"n\">scale_range</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">),</span>\n                                  <span class=\"n\">hue_range</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">),</span>\n                                  <span class=\"n\">saturation_range</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">),</span>\n                                  <span class=\"n\">value_range</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<p>This is because the lookup table is applied in the slice after interpolating\nto (0, 255).</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">fa_actor</span> <span class=\"o\">=</span> <span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">slicer</span><span class=\"p\">(</span><span class=\"n\">fa</span><span class=\"p\">,</span> <span class=\"n\">affine</span><span class=\"p\">,</span> <span class=\"n\">lookup_colormap</span><span class=\"o\">=</span><span class=\"n\">lut</span><span class=\"p\">)</span>\n\n<span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n<span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">fa_actor</span><span class=\"p\">)</span>\n\n<span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">reset_camera</span><span class=\"p\">()</span>\n<span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">zoom</span><span class=\"p\">(</span><span class=\"mf\">1.4</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># window.show(renderer, size=(600, 600), reset_camera=False)</span>\n\n<span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">renderer</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;slices_lut.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">),</span>\n              <span class=\"n\">reset_camera</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id2\">\n<img alt=\"examples_built/slices_lut.png\" src=\"examples_built/slices_lut.png\" />\n<p class=\"caption\"><span class=\"caption-text\"><strong>Simple slice viewer with an HSV colormap</strong>.</span></p>\n</div>\n</div>\n<div class=\"section\" id=\"create-a-mosaic\">\n<h2>Create a mosaic<a class=\"headerlink\" href=\"#create-a-mosaic\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>By using the <code class=\"docutils literal\"><span class=\"pre\">copy</span></code> and <code class=\"docutils literal\"><span class=\"pre\">display</span></code> method of the <code class=\"docutils literal\"><span class=\"pre\">slice_actor</span></code> becomes\neasy and efficient to create a mosaic of all the slices.</p>\n<p>So, let&#8217;s clear the renderer and change the projection from perspective to\nparallel.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n<span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">projection</span><span class=\"p\">(</span><span class=\"s1\">&#39;parallel&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Now we need to create two nested for loops which will set the positions of\nthe grid of the mosaic and add the new actors to the renderer. We are going\nto use 15 columns and 10 rows but you can adjust those with your datasets.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">cnt</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">Z</span> <span class=\"o\">=</span> <span class=\"n\">slice_actor</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[:</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n\n<span class=\"n\">rows</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"n\">cols</span> <span class=\"o\">=</span> <span class=\"mi\">15</span>\n<span class=\"n\">border</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n\n<span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">rows</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">cols</span><span class=\"p\">):</span>\n        <span class=\"n\">slice_mosaic</span> <span class=\"o\">=</span> <span class=\"n\">slice_actor</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n        <span class=\"n\">slice_mosaic</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">cnt</span><span class=\"p\">)</span>\n        <span class=\"n\">slice_mosaic</span><span class=\"o\">.</span><span class=\"n\">SetPosition</span><span class=\"p\">((</span><span class=\"n\">X</span> <span class=\"o\">+</span> <span class=\"n\">border</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">i</span><span class=\"p\">,</span>\n                                 <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">cols</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">Y</span> <span class=\"o\">+</span> <span class=\"n\">border</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"n\">Y</span> <span class=\"o\">+</span> <span class=\"n\">border</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">j</span><span class=\"p\">,</span>\n                                 <span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">slice_mosaic</span><span class=\"p\">)</span>\n        <span class=\"n\">cnt</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"k\">if</span> <span class=\"n\">cnt</span> <span class=\"o\">&gt;</span> <span class=\"n\">Z</span><span class=\"p\">:</span>\n            <span class=\"k\">break</span>\n    <span class=\"k\">if</span> <span class=\"n\">cnt</span> <span class=\"o\">&gt;</span> <span class=\"n\">Z</span><span class=\"p\">:</span>\n        <span class=\"k\">break</span>\n\n<span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">reset_camera</span><span class=\"p\">()</span>\n<span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">zoom</span><span class=\"p\">(</span><span class=\"mf\">1.6</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># window.show(renderer, size=(900, 600), reset_camera=False)</span>\n</pre></div>\n</div>\n<p>If you uncomment the <code class=\"docutils literal\"><span class=\"pre\">window.show</span></code> line above, you will be able to move the\nmosaic up/down and left/right using the middle mouse button pressed. And zoom\nin/out using the scroll wheel.</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">renderer</span><span class=\"p\">,</span> <span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;mosaic.png&#39;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">900</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">),</span>\n              <span class=\"n\">reset_camera</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"figure align-center\" id=\"id3\">\n<img alt=\"examples_built/mosaic.png\" src=\"examples_built/mosaic.png\" />\n<p class=\"caption\"><span class=\"caption-text\"><strong>A mosaic of all the slices in the T1 volume</strong>.</span></p>\n</div>\n<div class=\"admonition-example-source-code admonition\">\n<p class=\"first admonition-title\">Example source code</p>\n<p class=\"last\">You can download <a class=\"reference download internal\" href=\"../../_downloads/viz_slice.py\" download=\"\"><code class=\"xref download docutils literal\"><span class=\"pre\">the</span> <span class=\"pre\">full</span> <span class=\"pre\">source</span> <span class=\"pre\">code</span> <span class=\"pre\">of</span> <span class=\"pre\">this</span> <span class=\"pre\">example</span></code></a>.\nThis same script is also included in the dipy source distribution under the\n<code class=\"file docutils literal\"><span class=\"pre\">doc/examples/</span></code> directory.</p>\n</div>\n</div>\n</div>\n", "parents": [], "metatags": "", "title": "Simple volume slicing", "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Simple volume slicing</a><ul>\n<li><a class=\"reference internal\" href=\"#render-slices-from-t1-with-a-specific-value-range\">Render slices from T1 with a specific value range</a></li>\n<li><a class=\"reference internal\" href=\"#render-slices-from-fa-with-your-colormap\">Render slices from FA with your colormap</a></li>\n<li><a class=\"reference internal\" href=\"#create-a-mosaic\">Create a mosaic</a></li>\n</ul>\n</li>\n</ul>\n", "current_page_name": "examples_built/viz_slice", "next": null, "meta": {}, "rellinks": [["genindex", "General Index", "I", "index"]], "display_toc": true, "sourcename": "examples_built/viz_slice.txt", "customsidebar": null}