{"page_source_suffix": ".rst", "prev": {"link": "../mission/", "title": "Mission statement"}, "alabaster_version": "0.7.7", "body": "<div class=\"section\" id=\"installation\">\n<span id=\"id1\"></span><h1>Installation<a class=\"headerlink\" href=\"#installation\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p><a class=\"reference external\" href=\"http://dipy.org\">dipy</a> is in active development. You can install it from our latest release, but\nyou may find that the release has gotten well behind the current development -\nat least - we hope so - if we&#8217;re developing fast enough!</p>\n<p>If you want install the latest and greatest from the bleeding edge of the\ndevelopment, skip to <a class=\"reference internal\" href=\"#from-source\"><span class=\"std std-ref\">Installing from source</span></a>. If you just want to install a released\nversion, read on for your platform.</p>\n<div class=\"section\" id=\"installing-a-release\">\n<h2>Installing a release<a class=\"headerlink\" href=\"#installing-a-release\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>If you are on Debian or Ubuntu Linux we recommend you try\n<a class=\"reference internal\" href=\"#install-packages\"><span class=\"std std-ref\">Using packages:</span></a> first. Otherwise please try <a class=\"reference internal\" href=\"#install-pip\"><span class=\"std std-ref\">Using pip:</span></a>.</p>\n<div class=\"section\" id=\"using-packages\">\n<span id=\"install-packages\"></span><h3>Using packages:<a class=\"headerlink\" href=\"#using-packages\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<div class=\"section\" id=\"windows\">\n<h4>Windows<a class=\"headerlink\" href=\"#windows\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ol class=\"arabic\">\n<li><p class=\"first\">First, install the python library dependencies. One easy way to do that is to use the <a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a> distribution (see below for <a class=\"reference internal\" href=\"#alternatives\"><span class=\"std std-ref\">Alternatives to Anaconda</span></a>).</p>\n</li>\n<li><p class=\"first\">Even with Anaconda installed, you will still need to install the <a class=\"reference external\" href=\"http://nipy.org/nibabel\">nibabel</a> library, which supports reading and writing of neuroimaging data formats. Open a terminal and type</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">nibabel</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">Finally, we are ready to install &#8216;dipy` itself. Same as with <cite>nibabel</cite> above, we will type at the terminal shell command line</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">dipy</span>\n</pre></div>\n</div>\n</li>\n</ol>\n<p>When the installation has finished we can check if it is successful in the following way. From a Python console script try</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">dipy</span>\n</pre></div>\n</div>\n<p>This should work with no error.</p>\n<ol class=\"arabic\">\n<li><p class=\"first\">Some of the visualization methods require the <a class=\"reference external\" href=\"http://www.vtk.org/\">VTK</a> library and this can be installed using Anaconda</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">conda</span> <span class=\"n\">install</span> <span class=\"n\">vtk</span>\n</pre></div>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"section\" id=\"osx\">\n<h4>OSX<a class=\"headerlink\" href=\"#osx\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ol class=\"arabic\">\n<li><p class=\"first\">To use <a class=\"reference external\" href=\"http://dipy.org\">dipy</a>, you need to have some <a class=\"reference internal\" href=\"../dependencies/#dependencies\"><span class=\"std std-ref\">Dependencies</span></a> installed. First of all, make sure that you have installed the Apple <a class=\"reference external\" href=\"http://developer.apple.com/TOOLS/xcode\">Xcode</a> developer tools. You&#8217;ll need those to install all the following dependencies.</p>\n</li>\n<li><p class=\"first\">Next, install the python library dependencies. One easy way to do that is to use the <a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a> distribution (see below for <a class=\"reference internal\" href=\"#alternatives\"><span class=\"std std-ref\">Alternatives to Anaconda</span></a>).</p>\n</li>\n<li><p class=\"first\">Even with Anaconda installed, you will still need to install the <a class=\"reference external\" href=\"http://nipy.org/nibabel\">nibabel</a> library, which supports reading and writing of neuroimaging data formats. Open a terminal and type</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">nibabel</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">Finally, we are ready to install &#8216;dipy` itself. Same as with <cite>nibabel</cite> above, we will type at the terminal shell command line</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">dipy</span>\n</pre></div>\n</div>\n</li>\n</ol>\n<p>When the installation has finished we can check if it is successful in the following way. From a Python console script try</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">dipy</span>\n</pre></div>\n</div>\n<p>This should work with no error.</p>\n<ol class=\"arabic\">\n<li><p class=\"first\">Some of the visualization methods require the <a class=\"reference external\" href=\"http://www.vtk.org/\">VTK</a> library and this can be installed using Anaconda</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">conda</span> <span class=\"n\">install</span> <span class=\"n\">vtk</span>\n</pre></div>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"section\" id=\"linux\">\n<h4>Linux<a class=\"headerlink\" href=\"#linux\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>For Debian, Ubuntu and Mint set up the <a class=\"reference external\" href=\"http://neuro.debian.net\">NeuroDebian</a> repositories - see\n<a class=\"reference external\" href=\"http://neuro.debian.net/#how-to-use-this-repository\">NeuroDebian how to</a>. Then:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">install</span> <span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">dipy</span>\n</pre></div>\n</div>\n<p>We hope to get packages for the other Linux distributions, but for now, please\ntry <a class=\"reference internal\" href=\"#install-pip\"><span class=\"std std-ref\">Using pip:</span></a> instead.</p>\n</div>\n</div>\n<div class=\"section\" id=\"using-pip\">\n<span id=\"install-pip\"></span><h3>Using pip:<a class=\"headerlink\" href=\"#using-pip\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>This method should work under Linux, Mac OS X and Windows.</p>\n<p>Please install <a class=\"reference external\" href=\"http://numpy.scipy.org\">numpy</a> and <a class=\"reference external\" href=\"http://www.scipy.org\">scipy</a> using their respective binary installers if\nyou haven&#8217;t already.</p>\n<p>For Windows and Mac OSX you can use <a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a> to get numpy, scipy, cython and lots\nof other useful python module. <a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a> is a big package but will install many\ntools and libraries that are useful for scientific processing.</p>\n<p>When you have numpy, scipy and cython installed then try</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">nibabel</span>\n<span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">dipy</span>\n</pre></div>\n</div>\n<p>Then from any python console or script try</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">dipy</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"support\">\n<h2>Support<a class=\"headerlink\" href=\"#support\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"contact-us\">\n<h3>Contact us:<a class=\"headerlink\" href=\"#contact-us\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Do these installation instructions work for you? For any problems/suggestions please let us know by sending us an e-mail to the <a class=\"reference external\" href=\"https://mail.python.org/mailman/listinfo/neuroimaging\">nipy mailing list</a> with the subject line starting with <code class=\"docutils literal\"><span class=\"pre\">[dipy]</span></code>.</p>\n</div>\n<div class=\"section\" id=\"common-problems\">\n<h3>Common problems:<a class=\"headerlink\" href=\"#common-problems\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<div class=\"section\" id=\"multiple-installations\">\n<h4>Multiple installations<a class=\"headerlink\" href=\"#multiple-installations\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>Make sure that you have uninstalled all previous versions of Dipy before installing a new one. A simple and general way to uninstall Dipy is by removing the installation directory. You can find where Dipy is installed by using:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"kn\">import</span> <span class=\"nn\">dipy</span>\n<span class=\"n\">dipy</span><span class=\"o\">.</span><span class=\"n\">__file__</span>\n</pre></div>\n</div>\n<p>and then remove the Dipy directory that contains that file.</p>\n</div>\n<div class=\"section\" id=\"alternatives-to-anaconda\">\n<span id=\"alternatives\"></span><h4>Alternatives to Anaconda<a class=\"headerlink\" href=\"#alternatives-to-anaconda\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>If you have problems installing <a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a> we recommend using <a class=\"reference external\" href=\"https://www.enthought.com/products/canopy\">Canopy</a> or <a class=\"reference external\" href=\"http://www.pythonxy.com\">pythonxy</a>.</p>\n</div>\n<div class=\"section\" id=\"memory-issues\">\n<h4>Memory issues<a class=\"headerlink\" href=\"#memory-issues\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>Dipy can process large diffusion datasets. For this reason we recommend using a 64bit operating system which can allocate larger memory chunks than 32bit operating systems. If you don&#8217;t have a 64bit computer that is okay Dipy works with 32bit too.</p>\n</div>\n<div class=\"section\" id=\"note-on-python-versions\">\n<span id=\"python-versions\"></span><h4>Note on python versions<a class=\"headerlink\" href=\"#note-on-python-versions\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>Most of the functionality in Dipy supports versions of Python from 2.6 to 3.5.\nHowever, some visualization functionality depends on <a class=\"reference external\" href=\"http://www.vtk.org/\">VTK</a>, which currently does not work with Python 3 versions.\nTherefore, if you want to use the visualization functions in Dipy, please use it with Python 2.</p>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"installing-from-source\">\n<span id=\"from-source\"></span><h2>Installing from source<a class=\"headerlink\" href=\"#installing-from-source\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"getting-the-source\">\n<h3>Getting the source<a class=\"headerlink\" href=\"#getting-the-source\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>More likely you will want to get the source repository to be able to follow the\nlatest changes.  In that case, you can use:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">nipy</span><span class=\"o\">/</span><span class=\"n\">dipy</span><span class=\"o\">.</span><span class=\"n\">git</span>\n</pre></div>\n</div>\n<p>For more information about this see <a class=\"reference internal\" href=\"../devel/gitwash/following_latest/#following-latest\"><span class=\"std std-ref\">Following the latest source</span></a>.</p>\n<p>After you&#8217;ve cloned the repository, you will have a new directory, containing\nthe dipy <code class=\"docutils literal\"><span class=\"pre\">setup.py</span></code> file, among others.  We&#8217;ll call this directory - that\ncontains the <code class=\"docutils literal\"><span class=\"pre\">setup.py</span></code> file - the <em>dipy source root directory</em>.  Sometimes\nwe&#8217;ll also call it the <code class=\"docutils literal\"><span class=\"pre\">&lt;dipy</span> <span class=\"pre\">root&gt;</span></code> directory.</p>\n</div>\n<div class=\"section\" id=\"building-and-installing\">\n<h3>Building and installing<a class=\"headerlink\" href=\"#building-and-installing\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<div class=\"section\" id=\"install-from-source-for-unix-e-g-linux-osx\">\n<span id=\"install-source-nix\"></span><h4>Install from source for Unix (e.g Linux, OSX)<a class=\"headerlink\" href=\"#install-from-source-for-unix-e-g-linux-osx\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>Change directory into the <em>dipy source root directory</em> .</p>\n<p>To install for the system:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">python</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">install</span>\n</pre></div>\n</div>\n<p>To build dipy in the source tree (locally) so you can run the code in the source tree (recommended for following the latest source) run:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">python</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">build_ext</span> <span class=\"o\">--</span><span class=\"n\">inplace</span>\n</pre></div>\n</div>\n<p>add the <em>dipy source root directory</em> into your <code class=\"docutils literal\"><span class=\"pre\">PYTHONPATH</span></code> environment variable. Search google for <code class=\"docutils literal\"><span class=\"pre\">PYTHONPATH</span></code> for details or see <a class=\"reference external\" href=\"http://docs.python.org/tutorial/modules.html#the-module-search-path\">python module path</a> for an introduction.</p>\n<p>When adding <a class=\"reference external\" href=\"http://dipy.org\">dipy</a> to the <code class=\"docutils literal\"><span class=\"pre\">PYTHONPATH</span></code>, we usually add the <code class=\"docutils literal\"><span class=\"pre\">PYTHONPATH</span></code> at\nthe end of <code class=\"docutils literal\"><span class=\"pre\">~/.bashrc</span></code> or (OSX) <code class=\"docutils literal\"><span class=\"pre\">~/.bash_profile</span></code> so we don&#8217;t need to\nretype it every time. This should look something like:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre>export PYTHONPATH=/home/user_dir/Devel/dipy::math:`PYTHONPATH\n</pre></div>\n</div>\n<p>After changing the <code class=\"docutils literal\"><span class=\"pre\">~/.bashrc</span></code> or (OSX) <code class=\"docutils literal\"><span class=\"pre\">~/.bash_profile</span></code> try:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">source</span> <span class=\"o\">~/.</span><span class=\"n\">bashrc</span>\n</pre></div>\n</div>\n<p>or:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">source</span> <span class=\"o\">~/.</span><span class=\"n\">bash_profile</span>\n</pre></div>\n</div>\n<p>so that you can have immediate access to <a class=\"reference external\" href=\"http://dipy.org\">dipy</a> without needing to\nrestart your terminal.</p>\n</div>\n<div class=\"section\" id=\"ubuntu-debian\">\n<h4>Ubuntu/Debian<a class=\"headerlink\" href=\"#ubuntu-debian\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">install</span> <span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">dev</span> <span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">setuptools</span>\n<span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">install</span> <span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">numpy</span> <span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">scipy</span>\n<span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">install</span> <span class=\"n\">cython</span>\n</pre></div>\n</div>\n<p>then:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">sudo</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">nibabel</span>\n</pre></div>\n</div>\n<p>(we need the latest version of this one - hence <code class=\"docutils literal\"><span class=\"pre\">pip</span></code> rather than\n<code class=\"docutils literal\"><span class=\"pre\">apt-get</span></code>).</p>\n<p>You might want the optional packages too (highly recommended):</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">install</span> <span class=\"n\">ipython</span> <span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">tables</span> <span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">vtk</span> <span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">matplotlib</span>\n</pre></div>\n</div>\n<p>Now follow <a class=\"reference internal\" href=\"#install-source-nix\"><span class=\"std std-ref\">Install from source for Unix (e.g Linux, OSX)</span></a>.</p>\n</div>\n<div class=\"section\" id=\"fedora-mandriva-maybe-redhat\">\n<h4>Fedora / Mandriva maybe Redhat<a class=\"headerlink\" href=\"#fedora-mandriva-maybe-redhat\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>Same as above but use yum rather than apt-get when necessary.</p>\n<p>Now follow <a class=\"reference internal\" href=\"#install-source-nix\"><span class=\"std std-ref\">Install from source for Unix (e.g Linux, OSX)</span></a>.</p>\n</div>\n<div class=\"section\" id=\"id2\">\n<h4>Windows<a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p><a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a> is probably the easiest way to install the dependencies that you need.</p>\n<p>Start a command shell like <code class=\"docutils literal\"><span class=\"pre\">cmd</span></code> or <a class=\"reference external\" href=\"http://www.microsoft.com/powershell\">Powershell</a> and change directory into the\n<em>dipy source root directory</em>.</p>\n<p>To install into your system:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">python</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">install</span> <span class=\"o\">--</span><span class=\"n\">compiler</span><span class=\"o\">=</span><span class=\"n\">mingw32</span>\n</pre></div>\n</div>\n<p>To install inplace - so that dipy is running out of the source code directory:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">python</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">develop</span>\n</pre></div>\n</div>\n<p>(this is the mode we recommend for following the latest source code).  If you\nget an error with <code class=\"docutils literal\"><span class=\"pre\">python</span> <span class=\"pre\">setup.py</span> <span class=\"pre\">develop</span></code> make sure you have installed\n<a class=\"reference external\" href=\"http://pypi.python.org/pypi/setuptools\">setuptools</a>.</p>\n<p>If you get an error saying  &#8220;unable to find vcvarsall.bat&#8221; then you need to\ncreate a file called &#8220;pydistutils.cfg&#8221; in notepad and give it the contents</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"p\">[</span><span class=\"n\">build</span><span class=\"p\">]</span>\n<span class=\"n\">compiler</span><span class=\"o\">=</span><span class=\"n\">mingw32</span>\n</pre></div>\n</div>\n<p>Save this into your system python <code class=\"docutils literal\"><span class=\"pre\">distutils</span></code> directory as <code class=\"docutils literal\"><span class=\"pre\">distutils.cfg</span></code>.\nThis will be something like <code class=\"docutils literal\"><span class=\"pre\">C:\\Python26\\Lib\\distutils\\distutils.cfg</span></code>.</p>\n</div>\n<div class=\"section\" id=\"id3\">\n<h4>OSX<a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>Make sure you have <a class=\"reference external\" href=\"http://developer.apple.com/TOOLS/xcode\">Xcode</a> and <a class=\"reference external\" href=\"http://continuum.io/downloads\">Anaconda</a> installed.</p>\n<p>From here follow the <a class=\"reference internal\" href=\"#install-source-nix\"><span class=\"std std-ref\">Install from source for Unix (e.g Linux, OSX)</span></a> instructions.</p>\n</div>\n<div class=\"section\" id=\"openmp-with-osx\">\n<h4>OpenMP with OSX<a class=\"headerlink\" href=\"#openmp-with-osx\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p><a class=\"reference external\" href=\"www.openmp.org/\">OpenMP</a> is a standard library for efficient multithreaded applications. This\nis used in Dipy for speeding up many different parts of the library (e.g., denoising\nand bundle registration). If you do not have an OpenMP-enabled compiler, you can\nstill compile Dipy from source using the above instructions, but it might not take\nadvantage of the multithreaded parts of the code. To be able to compile\nDipy from source with OpenMP on Mac OSX, you will have to do a few more things. First\nof all, you will need to install the <a class=\"reference external\" href=\"http://brew.sh/\">Homebrew</a> package manager. Next you will need\nto install and configure the compiler. You have two options: using the GCC compiler\nor the CLANG compiler. This depends on your python installation:</p>\n<div class=\"section\" id=\"under-anaconda\">\n<h5>Under Anaconda<a class=\"headerlink\" href=\"#under-anaconda\" title=\"Permalink to this headline\">\u00b6</a></h5>\n<p>If you are using Anaconda, you will need to use GCC. Run the following:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">brew</span> <span class=\"n\">reinstall</span> <span class=\"n\">gcc</span> <span class=\"o\">--</span><span class=\"n\">without</span><span class=\"o\">-</span><span class=\"n\">multilib</span>\n</pre></div>\n</div>\n<p>This should take about 45 minutes to complete. Then add to your bash\nconfiguration (usually in <code class=\"docutils literal\"><span class=\"pre\">~/.bash_profile</span></code>), the following:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">export</span> <span class=\"n\">PATH</span><span class=\"o\">=</span><span class=\"s2\">&quot;/usr/local/Cellar/gcc/5.2.0/bin/gcc-5:`PATH</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"under-homebrew-python-or-python-org-python\">\n<h5>Under Homebrew Python or python.org Python<a class=\"headerlink\" href=\"#under-homebrew-python-or-python-org-python\" title=\"Permalink to this headline\">\u00b6</a></h5>\n<p>If you are already using the Homebrew Python, or the standard python.org Python,\nyou will need to use the CLANG compiler with OMP. Run:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">brew</span> <span class=\"n\">install</span> <span class=\"n\">clang</span><span class=\"o\">-</span><span class=\"n\">omp</span>\n</pre></div>\n</div>\n<p>And then edit the <code class=\"docutils literal\"><span class=\"pre\">setup.py</span></code> file to include the following line (e.g., on line 14,\nat the top of the file, but after the initial imports):</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">&#39;CC&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/usr/local/bin/clang-omp&#39;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"id4\">\n<h5>Building and installing<a class=\"headerlink\" href=\"#id4\" title=\"Permalink to this headline\">\u00b6</a></h5>\n<p>Whether you are using Anaconda or Hombrew/python.org Python, you will need to then\nrun <code class=\"docutils literal\"><span class=\"pre\">python</span> <span class=\"pre\">setup.py</span> <span class=\"pre\">install</span></code>. When you do that, it should now\ncompile the code with this OpenMP-enabled compiler, and things should go faster!</p>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"testing\">\n<h3>Testing<a class=\"headerlink\" href=\"#testing\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>If you want to run the tests:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">sudo</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">nose</span>\n</pre></div>\n</div>\n<p>Then (in python or <a class=\"reference external\" href=\"http://ipython.scipy.org\">ipython</a>):</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">dipy</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dipy</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>You can also run the examples in <code class=\"docutils literal\"><span class=\"pre\">&lt;dipy</span> <span class=\"pre\">root&gt;/doc</span></code>.</p>\n</div>\n<div class=\"section\" id=\"documentation-unix-only\">\n<h3>Documentation (Unix only)<a class=\"headerlink\" href=\"#documentation-unix-only\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>To build the documentation in HTML in your computer you will need to do:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">sudo</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">sphinx</span>\n</pre></div>\n</div>\n<p>Then change directory to <code class=\"docutils literal\"><span class=\"pre\">&lt;dipy</span> <span class=\"pre\">root&gt;</span></code> and:</p>\n<div class=\"highlight-default\"><div class=\"highlight\"><pre><span class=\"n\">cd</span> <span class=\"n\">doc</span>\n<span class=\"n\">make</span> <span class=\"n\">clean</span>\n<span class=\"n\">make</span> <span class=\"n\">html</span>\n</pre></div>\n</div>\n</div>\n</div>\n</div>\n", "parents": [{"link": "../documentation/", "title": "Documentation"}], "metatags": "", "title": "Installation", "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Installation</a><ul>\n<li><a class=\"reference internal\" href=\"#installing-a-release\">Installing a release</a><ul>\n<li><a class=\"reference internal\" href=\"#using-packages\">Using packages:</a><ul>\n<li><a class=\"reference internal\" href=\"#windows\">Windows</a></li>\n<li><a class=\"reference internal\" href=\"#osx\">OSX</a></li>\n<li><a class=\"reference internal\" href=\"#linux\">Linux</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#using-pip\">Using pip:</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#support\">Support</a><ul>\n<li><a class=\"reference internal\" href=\"#contact-us\">Contact us:</a></li>\n<li><a class=\"reference internal\" href=\"#common-problems\">Common problems:</a><ul>\n<li><a class=\"reference internal\" href=\"#multiple-installations\">Multiple installations</a></li>\n<li><a class=\"reference internal\" href=\"#alternatives-to-anaconda\">Alternatives to Anaconda</a></li>\n<li><a class=\"reference internal\" href=\"#memory-issues\">Memory issues</a></li>\n<li><a class=\"reference internal\" href=\"#note-on-python-versions\">Note on python versions</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#installing-from-source\">Installing from source</a><ul>\n<li><a class=\"reference internal\" href=\"#getting-the-source\">Getting the source</a></li>\n<li><a class=\"reference internal\" href=\"#building-and-installing\">Building and installing</a><ul>\n<li><a class=\"reference internal\" href=\"#install-from-source-for-unix-e-g-linux-osx\">Install from source for Unix (e.g Linux, OSX)</a></li>\n<li><a class=\"reference internal\" href=\"#ubuntu-debian\">Ubuntu/Debian</a></li>\n<li><a class=\"reference internal\" href=\"#fedora-mandriva-maybe-redhat\">Fedora / Mandriva maybe Redhat</a></li>\n<li><a class=\"reference internal\" href=\"#id2\">Windows</a></li>\n<li><a class=\"reference internal\" href=\"#id3\">OSX</a></li>\n<li><a class=\"reference internal\" href=\"#openmp-with-osx\">OpenMP with OSX</a><ul>\n<li><a class=\"reference internal\" href=\"#under-anaconda\">Under Anaconda</a></li>\n<li><a class=\"reference internal\" href=\"#under-homebrew-python-or-python-org-python\">Under Homebrew Python or python.org Python</a></li>\n<li><a class=\"reference internal\" href=\"#id4\">Building and installing</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#testing\">Testing</a></li>\n<li><a class=\"reference internal\" href=\"#documentation-unix-only\">Documentation (Unix only)</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "current_page_name": "installation", "next": {"link": "../examples_index/", "title": "Examples"}, "meta": {}, "rellinks": [["genindex", "General Index", "I", "index"], ["examples_index", "Examples", "N", "next"], ["mission", "Mission statement", "P", "previous"]], "display_toc": true, "sourcename": "installation.txt", "customsidebar": null}